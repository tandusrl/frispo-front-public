{"version":3,"sources":["scripts/app.js"],"names":["angular","module","teamShow","TeamShowController","$uibModal","teams","models","vm","this","destroy","open","templateUrl","controller","controllerAs","windowClass","result","then","res","team","TeamShowLink","scope","el","attrs","hover","$apply","showControls","$inject","directive","restrict","bindToController","replace","link","teamEdit","TeamEditController","$q","setLoading","loading","resolve","unsetLoading","submit","form","form2Team","teamData","update","teamId","TeamEditLink","cancel","find","collapse","TeamDestroyController","$uibModalInstance","ok","close","dismiss","TeamCreateController","utils","roundNames","alphabetChars","eventShow","events","EventShowController","event","EventShowLink","EventRecreateCalendarController","eventEdit","EventEditController","matches","form2Event","eventData","evenId","publish","even_stato_evento","unpublish","recreateCalendar","createCalendar","show","EventEditLink","on","listRegions","$watch","newVal","oldVal","isDefined","currentDay","evenCurrentDay","EventDestroyController","matchShow","MatchShowController","match","advancedEdit","size","MatchShowLink","matchEdit","MatchEditController","form2Match","matchData","matcDayId","scores","matchId","matcId","MatchEditLink","MatchDestroyController","DayCreateController","MatchCreateController","MatchAdvancedEditController","listScorers","wizardStepBox","WizardStepBoxController","WizardStepBoxLink","step","wizard","currentStep","active","first","addClass","hide","element","AdminLTE","boxWidget","title","transclude","wizardProgress","WizardProgressController","range","n","Array","TeamsController","updateCurrentEvent","currentEvent","i","length","list","createNewTeam","create","ScorersController","showScorers","ScoreboardController","showScoreboard","RegisterController","users","toastr","$state","user","register","success","email","go","NewsController","LoginController","ezfb","login","loginFacebook","EventsController","tableFilters","eventFilter","evenStatoEvento","boxClass","DisciplinaryController","DashboardController","CreateEventController","Wizard","resPipe","$log","totalSteps","startFromStep","forceManualRounds","initDefaultTeams","step2","addTeam","roundType","push","name","round","removeTeam","index","error","splice","step1Done","step1","type","next","submitStep1","info","step2Done","submitStep2","form2Teams","addGroup","step3Done","submitWizard","submitStep3","CalendarController","updateMatchDay","matchDays","createNewMatch","createNewDay","form2Day","createDay","wizardTextProgressFilter","filter","factory","defaults","options","merge","prev","str2Date","str","split","forEach","date","trim","date2Str","dateStart","dateEnd","str2Time","uiState","timepicker","timepickerLink","clockpicker","autoclose","showOnHover","linkFunc","visible","target","removeClass","showAnimate","updateVisibility","$filter","longTermMemory","parseResponse","status_code","data","reject","unwrapArray","isArray","camelize","newRes","isObject","v","k","injectUserDefaults","loggedIn","displayName","updateCurrentUser","currentUser","updatePreferences","preferences","mockAnonymousUser","accessToken","uuid","memorizeCurrentUser","memorize","injectEventsDefaults","evenFormula","evenFormulaPretty","evenType","evenTypePretty","dates","evenDateStart","evenDateEnd","isUndefined","isNumber","evenDayActive","search","evenName","regions","regiName","evenCode","evenSeason","join","sort","a","b","matcProg","updateEvents","removeEvent","memorizeEvents","updateRegions","memorizeRegions","memorizeCurrentEvent","updateMatches","updateMatch","updateMatchScorers","scorers","injectMatchDefaults","matcDateMatch","matcDateMatchPretty","insertMatchDay","updateTeams","updateScoreboard","scoreboard","updateScorers","updateTeam","removeMatch","log","debugger","allowedKeys","key","val","indexOf","localStorage","toJson","remember","fromJson","e","forget","oblivion","clear","frispoSidebar","$timeout","SidebarController","state","manageMenuEntries","SidebarLink","window","trigger","frispoHeader","HeaderController","HeaderLink","frispoFooter","FooterController","FooterLink","$http","usersApiUrl","eventsApiUrl","teamsApiUrl","matchesApiUrl","rankingApiUrl","consumerKey","consumerSecret","preferencesApiUrl","cache","helpers","cacheOrHttp","method","fullUrl","headers","keep","config","toUpperCase","url","promise","err","response","userApiCall","consumer_key","consumer_secret","Authorization","eventsApiCall","teamsApiCall","eventId","matchesApiCall","rankingApiCall","preferencesApiCall","expect200","status","unwrapData","frispoApi","userData","password","refreshToken","refresh_token","facebookData","facebook_token","authResponse","logout","access_token","anonymous_user","listEvents","createEvent","updateEvent","destroyEvent","showEvent","showEventScoreboard","showTournamentScoreboard","listTeams","createTeam","destroyTeam","showTeam","addGroupTeams","teamsData","showPreferences","createMatchesCalendar","listMatches","day","listMatchScorers","createMatch","matchDayId","dayData","destroyMatch","errorManager","getErrorString","isString","full_messages","error_description","errors","msg","myErr","reset","datepicker","datepickerLink","watchInput","drp","elementChanged","daterangepicker","autoUpdateInput","locale","format","separator","ev","picker","model","startDate","endDate","singleDatePicker","compareTo","compareToLink","ngModel","$validators","modelvalue","otherModelValue","$validate","require","onLoggedIn","expireIn","current","setAnonymousUser","bkp","unsetAnonymousUser","formData","extra","teamTime","time","captain","team_captain","team_time","team_name","phone","team_mobile_phone","place","team_place","team_groups","desc","team_description","undefined","showMatch","matchTime","matchDate","matc_id","teamA","matc_team_id_a","teamB","matc_team_id_b","scoreA","matc_goal_team_a","scoreB","matc_goal_team_b","dateExpected","matc_date_expected","matc_date_match","matc_time","address","matc_address","matc_name_groups","played","value","matc_flg_play","shootoutA","matc_shootout_team_a","shootoutB","matc_shootout_team_b","matc_place","mada_name","mada_description","apiCall","dateRange","even_name","even_description","even_email","even_address","even_type","organizer","even_organize_by","formula","even_formula","telephone","even_mobile_phone","even_date_start","even_date_end","region","regiId","regi_id","even_day_active","runBlock","$rootScope","defaultBodyClasses","stateChangeSuccess","$on","toState","pms","params","bodyClasses","Event","subscribe","getLoginStatus","run","routerConfig","$stateProvider","$urlRouterProvider","requireLoggedIn","abstract","onEnter","otherwise","constant","malarkey","moment","$logProvider","toastrConfig","$animateProvider","$locationProvider","ezfbProvider","debugEnabled","classNameFilter","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","html5Mode","hashPrefix","setLocale","setInitParams","appId","$templateCache","put"],"mappings":"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","file":"scripts/app-e342027478.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('frispo', [\n      'ngAnimate',\n      'ngCookies',\n      'ngSanitize',\n      'ngMessages',\n      'ui.router',\n      'puigcerber.camelize',\n      'toastr',\n      'ezfb',\n      'ui.bootstrap'\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamShow', teamShow);\n\n  /** @ngInject */\n  function teamShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/show/show.html',\n      controller: TeamShowController,\n      controllerAs: 'teamShow',\n      bindToController: true,\n      replace: true,\n      link: TeamShowLink,\n      scope: {\n        team: '=teamShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamShowController($uibModal, teams, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/teams/destroy/destroy.html',\n            controller: 'TeamDestroyController',\n            controllerAs: 'teamDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              teams.destroy(vm.team);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function TeamShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamEdit', teamEdit);\n\n  /** @ngInject */\n  function teamEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/edit/edit.html',\n      controller: TeamEditController,\n      controllerAs: 'teamEdit',\n      link: TeamEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        team: '=teamEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamEditController(models, $q, teams) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Team)\n          .then(function (teamData) {\n            return teams.update(vm.team.teamId, teamData);\n          })\n          .finally(vm.unsetLoading);\n      }\n    }\n\n    function TeamEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamDestroyController', TeamDestroyController);\n\n  /** @ngInject */\n  function TeamDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamCreateController', TeamCreateController);\n\n  /** @ngInject */\n  function TeamCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.roundNames = utils.alphabetChars();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventShow', eventShow);\n\n  /** @ngInject */\n  function eventShow(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/show/show.html',\n      controller: EventShowController,\n      controllerAs: 'eventShow',\n      bindToController: true,\n      replace: true,\n      link: EventShowLink,\n      scope: {\n        event: '=eventShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventShowController(models, $uibModal) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/events/destroy/destroy.html',\n            controller: 'EventDestroyController',\n            controllerAs: 'eventDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroy(vm.event);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function EventShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventRecreateCalendarController', EventRecreateCalendarController);\n\n  /** @ngInject */\n  function EventRecreateCalendarController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventEdit', eventEdit);\n\n  /** @ngInject */\n  function eventEdit(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/edit/edit.html',\n      controller: EventEditController,\n      controllerAs: 'eventEdit',\n      link: EventEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        event: '=eventEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventEditController(models, matches, $uibModal, $q) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(events.form2Event)\n          .then(function (eventData) {\n            return events.update(vm.event.evenId, eventData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.publish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 1});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.unpublish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 0});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.recreateCalendar = function () {\n        $uibModal.open({\n          templateUrl: 'app/pages/events/edit/recreateCalendar.html',\n          controller: 'EventRecreateCalendarController',\n          controllerAs: 'eventRecreateCalendar',\n          windowClass: 'modal-warning'\n        }).result\n        .then(function (res) {\n          if(res === true){\n            return vm.setLoading(vm.event.evenId)\n              .then(matches.createCalendar)\n              .then(function () {\n                return events.show(vm.event.evenId);\n              })\n              .finally(vm.unsetLoading);\n          }\n        })\n\n      }\n    }\n\n    function EventEditLink(scope, el, attrs, vm) {\n\n      el.find('.accordion-body').on('show.bs.collapse', function () {\n        events.show(vm.event.evenId);\n        events.listRegions();\n      });\n\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n\n      scope.$watch('eventEdit.event.evenCurrentDay', function (newVal, oldVal) {\n        if(angular.isDefined(newVal) && newVal !== oldVal){\n          vm.form.currentDay = vm.event.evenCurrentDay;\n        }\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventDestroyController', EventDestroyController);\n\n  /** @ngInject */\n  function EventDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchShow', matchShow);\n\n  /** @ngInject */\n  function matchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/show/show.html',\n      controller: MatchShowController,\n      controllerAs: 'matchShow',\n      bindToController: true,\n      replace: true,\n      link: MatchShowLink,\n      scope: {\n        match: '=matchShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchShowController($uibModal, matches, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/calendar/destroy/destroy.html',\n            controller: 'MatchDestroyController',\n            controllerAs: 'matchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroy(vm.match);\n            }\n          });\n      }\n\n      vm.advancedEdit = function () {\n        $uibModal.open({\n              templateUrl: 'app/pages/calendar/advancedEdit/advancedEdit.html',\n              controller: 'MatchAdvancedEditController',\n              controllerAs: 'matchAdvEdit',\n              windowClass: 'modal-default',\n              size: 'lg',\n              resolve: {match: vm.match}\n          }).result\n          .then();\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function MatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchEdit', matchEdit);\n\n  /** @ngInject */\n  function matchEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/edit/edit.html',\n      controller: MatchEditController,\n      controllerAs: 'matchEdit',\n      link: MatchEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        match: '=matchEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchEditController(models, $q, matches, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(matches.form2Match)\n          .then(function (matchData) {\n            return matches.update(vm.match.matcDayId, matchData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { matchId: vm.match.matcId };\n    }\n\n    function MatchEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchDestroyController', MatchDestroyController);\n\n  /** @ngInject */\n  function MatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DayCreateController', DayCreateController);\n\n  /** @ngInject */\n  function DayCreateController($uibModalInstance, models) {\n    var vm = this;\n\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchCreateController', MatchCreateController);\n\n  /** @ngInject */\n  function MatchCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.scores = utils.scores();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchAdvancedEditController', MatchAdvancedEditController);\n\n  /** @ngInject */\n  function MatchAdvancedEditController($uibModalInstance, match, utils, matches) {\n    var vm = this;\n    vm.match = match;\n    vm.scores = utils.scores();\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n\n    matches.listScorers(match.matcId);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardStepBox', wizardStepBox);\n\n  /** @ngInject */\n  function wizardStepBox() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardStepBox/wizardStepBox.html',\n      controller: WizardStepBoxController,\n      controllerAs: 'wizardStepBox',\n      bindToController: true,\n      scope: {\n        wizard: '=',\n        step: '=',\n        title: '@'\n      },\n      link: WizardStepBoxLink,\n      transclude: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardStepBoxController() {\n    }\n\n    function WizardStepBoxLink(scope, el, attrs, vm) {\n      if(vm.step === vm.wizard.currentStep){\n        vm.active = true;\n      }\n      else{\n        el.find('.wizard-step-box').first().addClass('collapsed-box');\n        el.find('.box-body').first().hide();\n      }\n\n      scope.$watch('wizardStepBox.wizard.currentStep', function (newVal, oldVal) {\n        if(newVal === oldVal) return;\n        // Activate the box\n        if(newVal === vm.step && !vm.active){\n          vm.active = true;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n        // Deactivate the box\n        else if(newVal !== vm.step && vm.active){\n          vm.active = false;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardProgress', wizardProgress);\n\n  /** @ngInject */\n  function wizardProgress() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardProgress/wizardProgress.html',\n      controller: WizardProgressController,\n      controllerAs: 'wizardProgress',\n      bindToController: true,\n      scope: {\n        wizard: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardProgressController() {\n      var vm = this;\n\n      vm.range = function (n) {\n        return new Array(n);\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamsController', TeamsController);\n\n  /** @ngInject */\n  function TeamsController(models, events, teams, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.events[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(teams.list)                       // List the teams of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewTeam = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/teams/create/create.html',\n          controller: 'TeamCreateController',\n          controllerAs: 'teamCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(teams.form2Team)\n              .then(teams.create)\n              .then(teams.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScorersController', ScorersController);\n\n  /** @ngInject */\n  function ScorersController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.events[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent)        // Set a spinning loader on the page\n        .then(events.showScorers)               // Get the scoreboard for given event\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScoreboardController', ScoreboardController);\n\n  /** @ngInject */\n  function ScoreboardController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.events[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent)        // Set a spinning loader on the page\n        .then(events.showScoreboard)            // Get the scoreboard for given event\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController(users, toastr, $state) {\n    var vm = this;\n\n    vm.user = vm.user || {};\n\n    vm.register = function () {\n      users\n        .register(vm.user)\n        .then(function (res) {\n          toastr.success(res.email + \", you have been succesfully registered!\", \"Registration complete\");\n          $state.go('main.admin.dashboard');\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('NewsController', NewsController);\n\n  /** @ngInject */\n  function NewsController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController(users, toastr, $state, ezfb) {\n    var vm = this;\n\n    vm.user = vm.user || {};\n\n    // Login with username and password\n    vm.login = function () {\n      users.login(vm.user);\n    }\n\n    // Login with facebook\n    vm.loginFacebook = function () {\n      ezfb.login(null,{scope: 'email,public_profile'});\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventsController', EventsController);\n\n  /** @ngInject */\n  function EventsController(models, events) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // Create filter objects to split events into published and not published\n    vm.tableFilters = [\n      // published events\n      {\n        eventFilter: { evenStatoEvento: '0' },\n        title: 'Eventi non pubblicati',\n        boxClass: 'box-warning'\n      },\n      {\n        eventFilter: { evenStatoEvento: '1' },\n        title: 'Eventi pubblicati',\n        boxClass: 'box-success'\n      }\n    ];\n\n    // API call\n    events.list();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DisciplinaryController', DisciplinaryController);\n\n  /** @ngInject */\n  function DisciplinaryController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CreateEventController', CreateEventController);\n\n  /** @ngInject */\n  function CreateEventController(Wizard, events, resPipe, toastr, teams, matches, $log, $state, models, utils) {\n    var vm = this;\n\n    vm.models = models;\n    // Initialize the wizard object\n    vm.wizard = new Wizard({totalSteps: 3, startFromStep: 1});\n\n    // If true, the user have to manually insert the rounds.\n    // If false, the user can choose between \"Inserimento gironi manuale\" and \"Inserimento gironi automatico\".\n    vm.forceManualRounds = true;\n\n    vm.roundNames = utils.alphabetChars();\n\n    vm.initDefaultTeams = function () {\n      if(!vm.step2.teams){\n        vm.step2.teams = [];\n        vm.addTeam();\n        vm.addTeam();\n      }\n    }\n\n    vm.addTeam = function () {\n      if(vm.step2 && vm.step2.roundType === 1){\n        vm.step2.teams.push({name: ''});\n      }\n      else{\n        vm.step2.teams.push({name: '', round: ''});\n      }\n    };\n\n    vm.removeTeam = function (index) {\n      if(vm.step2.teams.length <= 2){\n        toastr.error('E\\' obbligatorio inserire almeno 2 squadre', 'Impossibile rimuovere la squadra');\n      }\n      else{\n        vm.step2.teams.splice(index,1);\n      }\n    }\n\n    vm.step1Done = function () {\n      if(!vm.step2) vm.step2 = {}; // Initialize step2 if needed\n\n      // If not \"Torneo a gironi\"\n      if(vm.step1.type != 1){\n        vm.step2.roundType = '1';\n        vm.initDefaultTeams();\n      }\n\n      // If \"torneo a gironi\" and user can't choose manual or automatic round type\n      else if(vm.forceManualRounds){\n        vm.step2.roundType = '0'; // Manual rounds\n        vm.initDefaultTeams();\n      }\n\n      vm.wizard.next();\n    }\n\n    vm.submitStep1 = function () {\n      $log.info('creando l\\'evento..');\n      return events\n        .form2Event(vm.step1)\n        .then(events.create);\n    }\n\n    vm.step2Done = function () {\n      vm.wizard.next();\n    }\n\n    vm.submitStep2 = function () {\n      $log.info('creando le squadre..');\n      return teams\n        .form2Teams(vm.step2)\n        .then(teams.addGroup);\n    }\n\n    vm.step3Done = function () {\n      vm.submitWizard();\n    }\n\n    vm.submitStep3 = function () {\n      $log.info('creando il calendario..');\n      return matches.createCalendar(models.currentEvent.evenId);\n    }\n\n    vm.submitWizard = function () {\n      vm.wizard.loading = true;\n      vm.submitStep1()\n        .then(vm.submitStep2)\n        .then(vm.submitStep3)\n        .then(function () {\n          $state.go('main.admin.events');\n        })\n        .finally(function () {\n          vm.wizard.loading = false;\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CalendarController', CalendarController);\n\n  /** @ngInject */\n  function CalendarController(models, events, matches, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.events[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewMatch = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/create/create.html',\n          controller: 'MatchCreateController',\n          controllerAs: 'matchCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Match)\n              .then(matches.create)\n              .then(matches.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    vm.createNewDay = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/createDay/create.html',\n          controller: 'DayCreateController',\n          controllerAs: 'dayCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Day)\n              .then(matches.createDay)\n              .then(function (res) {\n                models.currentEvent.currentDay = res;\n                return res;\n              })\n              .then(vm.updateMatchDay)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .filter('wizardTextProgress', wizardTextProgressFilter);\n\n  /** @ngInject */\n  function wizardTextProgressFilter() {\n    return function(wizard) {\n      return 'Step ' + wizard.currentStep + ' di ' + wizard.totalSteps;\n    };\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * A wizard\n   */\n  .factory('Wizard', function () {\n    var defaults = {\n      totalSteps: 1,\n      startFromStep: 1\n    }\n\n    return function Wizard (options) {\n      this.options = angular.merge(defaults, options);\n\n      this.totalSteps = this.options.totalSteps;\n      this.currentStep = this.options.startFromStep;\n\n      this.next = function () {\n        if(this.currentStep < this.totalSteps){\n          this.currentStep++;\n        }\n      }\n\n      this.prev = function () {\n        if(this.currentStep > 1){\n          this.currentStep--;\n        }\n      }\n    };\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Utilities functions.\n   */\n  .factory('utils', function () {\n    var utils = {\n      str2Date: function (str) {\n        if(!str) return;\n\n        var res = [];\n        var range = str.split('->');\n        angular.forEach(range, function (date) {\n          var split = date.split('/');\n          if(split.length !== 3) return;\n          res.push(split[2].trim() + '-' + split[1].trim() + '-' + split[0].trim())\n        })\n        if(res.length === 1){\n          return res[0];\n        }\n        else{\n          return res;\n        }\n      },\n      date2Str: function (dateStart, dateEnd) {\n        if(!dateStart) return;\n\n        var split = dateStart.split('-');\n        if(split.length !== 3) return;\n        var res = split[2].trim() + '/' + split[1].trim() + '/' + split[0].trim();\n\n        if(dateEnd){\n          res +=  ' -> ' + utils.date2Str(dateEnd);\n        }\n        return res;\n      },\n      str2Time: function (str) {\n        return str;\n        // if(!str) return;\n        //\n        // var res = null;\n        // var splitted = str.trim().split(' ');\n        // if(splitted.length == 2){\n        //   var hm = splitted[0].trim().split(':');\n        //   var pmAdd = (splitted[1] == 'PM' ? 12 : 0);\n        //   if(hm.length == 2){\n        //     res = (+hm[0] + pmAdd) + ':' + hm[1];\n        //   }\n        // }\n        // return res;\n      },\n      alphabetChars: function () {\n        return ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n      },\n      scores: function () {\n        return [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\n      }\n    };\n\n    return utils;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * UI state service.\n   * Keep application-wide shared variables\n   */\n  .factory('uiState', function () {\n    var uiState = {};\n\n    return uiState;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('timepicker', timepicker);\n\n  /** @ngInject */\n  function timepicker() {\n    var directive = {\n      restrict: 'A',\n      link: timepickerLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function timepickerLink(scope, el) {\n      el.clockpicker({autoclose: true});\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('showOnHover', showOnHover);\n\n  /** @ngInject */\n  function showOnHover() {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        showOnHover: '@',\n        showAnimate: '='\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var visible = false;\n      var target = angular.element(scope.showOnHover);\n\n      scope.$watch('showOnHover', function () {\n        target.removeClass('show-on-hover-target').removeClass('not-visible').removeClass('show-animate');\n        target = angular.element(scope.showOnHover);\n        target.addClass('show-on-hover-target');\n        if(scope.showAnimate){\n          target.addClass('show-animate');\n        }\n        scope.updateVisibility();\n      })\n\n      scope.updateVisibility = function () {\n        if(visible){\n          target.removeClass('not-visible');\n        }\n        else{\n          target.addClass('not-visible');\n        }\n      }\n\n      el.hover(function() {\n          if(!visible){\n            visible = true;\n            scope.updateVisibility();\n          }\n        },\n        function() {\n          if(visible){\n            visible = false;\n            scope.updateVisibility();\n          }\n        }\n      );\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Response management pipeline.\n   * Utilities to process a response from the moment it arrives to the models update.\n   * To use in a promise chain as a pipeline\n   */\n  .factory('resPipe', function ($q, $filter, models, longTermMemory, $log, utils) {\n    var resPipe = {\n\n      /**\n       * Parse the initial response from the Frispo API\n       */\n      parseResponse: function(res) {\n        // Look for the response status_code\n        switch (res.status_code) {\n          case 200:\n            return res.data;\n          default:\n            return $q.reject({error: res.error});\n        }\n      },\n\n      /**\n       * Unwrap the response from a single element array\n       */\n      unwrapArray: function (res) {\n        if(angular.isArray(res) && res.length === 1) return res[0];\n        return res;\n      },\n\n      /**\n       * Camelize the response\n       */\n      camelize: function (res) {\n        var newRes;\n        if(angular.isArray(res)){\n          newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.camelize(el));\n          })\n          return newRes;\n        }\n        else if(angular.isObject(res)){\n          newRes = {};\n          angular.forEach(res, function(v,k){\n            newRes[$filter('camelize')(k)] = resPipe.camelize(v);\n          });\n          return newRes;\n        }\n        else {\n          return res;\n        }\n      },\n\n      /**\n       * Inject default fields to User objects\n       */\n      injectUserDefaults: function (res) {\n        res.loggedIn = true;\n        res.displayName = res.displayName || res.email || res.name || 'Nome Cognome';\n        return res;\n      },\n\n      /**\n       * Update the current user\n       */\n      updateCurrentUser: function (res) {\n        models.currentUser = res;\n        return res;\n      },\n\n      /**\n       * Update the preferences current user\n       */\n      updatePreferences: function (res) {\n        models.currentUser.preferences = res;\n        return res;\n      },\n\n      /**\n       * Mock an anonymous user for testing APIs\n       */\n      mockAnonymousUser: function (res) {\n        res.accessToken = '4e66c966e021918f0b088ddc929847f7';\n        res.uuid = '';\n        return res;\n      },\n\n      /**\n      * Memorize the current user in long term memory\n      */\n      memorizeCurrentUser: function (res) {\n        longTermMemory.memorize('currentUser', models.currentUser);\n        return res;\n      },\n\n      /**\n       * Inject default fields to events\n       */\n      injectEventsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectEventsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify evenFormula\n        if(res.evenFormula === 0)\n          res.evenFormulaPretty = 'Andata e ritorno';\n        else if(res.evenFormula === 1)\n          res.evenFormulaPretty = 'Solo andata';\n\n        // Prettify evenType\n        if(res.evenType === 0)\n          res.evenTypePretty = 'Campionato italiana';\n        else if(res.evenType === 1)\n          res.evenTypePretty = 'Torneo a giorni';\n\n        // Make a dateRangePicker compliant field\n        if(!res.dates && res.evenDateStart && res.evenDateEnd){\n          res.dates = utils.date2Str(res.evenDateStart, res.evenDateEnd);\n        }\n\n        // Initialize a default published status\n        if(angular.isUndefined(res.evenStatoEvento)){\n          res.evenStatoEvento = 0; // Set as unpublished\n        }\n\n        // Initialize the currentDay based on its ID\n        if(angular.isNumber(res.evenDayActive) && angular.isArray(res.matchDays)){\n          for (var i = 0; i < res.matchDays.length; i++) {\n            if(res.matchDays[i].matcDayId === res.evenDayActive){\n              res.evenCurrentDay = res.matchDays[i];\n              break;\n            }\n          }\n        }\n\n        // Make a search field\n        res.search = [\n          res.evenName,\n          res.evenTypePretty,\n          res.evenFormulaPretty,\n          res.regions && res.regions.regiName || '',\n          res.evenCode,\n          res.evenSeason\n        ].join(' ');\n\n        // Sort the match days by prog number\n        if(angular.isArray(res.matchDays)){\n          res.matchDays.sort(function (a,b) {\n            return a.matcProg > b.matcProg;\n          });\n        }\n\n        return res;\n      },\n\n      /**\n       * Update the events\n       */\n      updateEvents: function (res) {\n        models.events = res;\n        return res;\n      },\n\n      /**\n       * Remove an event from the cache\n       */\n      removeEvent: function (res) {\n        // Look for the event in cache\n        var i = -1;\n        for (i=0; i < models.events.length; i++) {\n          if(models.events[i].evenId === res.evenId){\n            break;\n          }\n        }\n        // The event was found -> remove it\n        if(i >= 0 && i < models.events.length){\n          models.events.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Memorize the events user in long term memory\n       */\n      memorizeEvents: function (res) {\n        longTermMemory.memorize('events', models.events);\n        return res;\n      },\n\n      /**\n      * Update the regions\n      */\n      updateRegions: function (res) {\n        models.regions = res;\n        return res;\n      },\n\n      /**\n      * Memorize the regions user in long term memory\n      */\n      memorizeRegions: function (res) {\n        longTermMemory.memorize('regions', models.regions);\n        return res;\n      },\n\n      /**\n       * Update the current event\n       */\n      updateCurrentEvent: function (res) {\n        if(angular.isArray(models.events)){\n          for (var i = 0; i < models.events.length; i++) {\n            if(models.events[i].evenId === res.evenId){\n              angular.merge(models.events[i], res);      // THIS is the UPDATE - we merge the server response into the cached model\n              models.currentEvent = models.events[i];\n              return models.currentEvent;\n            }\n          }\n        }\n        models.currentEvent = res;\n        return res;\n      },\n\n      /**\n      * Memorize the events user in long term memory\n      */\n      memorizeCurrentEvent: function (res) {\n        longTermMemory.memorize('currentEvent', models.currentEvent);\n        return res;\n      },\n\n\n      /**\n       * Update the matches\n       */\n      updateMatches: function (res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay) return res;\n        models.currentEvent.currentDay.matches = res;\n        return res;\n      },\n\n      /**\n       * Update a match\n       */\n      updateMatch: function (res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)){\n          return res;\n        }\n\n        for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            return angular.merge(models.currentEvent.currentDay.matches[i], res);\n          }\n        }\n      },\n\n      /**\n       * Update the scorers of a match\n       */\n      updateMatchScorers: function (matchId, res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)){\n          return res;\n        }\n\n        for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId == matchId){\n            models.currentEvent.currentDay.matches[i].scorers = res;\n            return res;\n          }\n        }\n      },\n\n      injectMatchDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectMatchDefaults);\n        }\n\n        if(res.matcDateMatch){\n          res.matcDateMatchPretty = utils.date2Str(res.matcDateMatch);\n        }\n\n        return res;\n      },\n\n      /**\n       * Insert a match day into current event\n       */\n      insertMatchDay: function (res) {\n        if(models.currentEvent && angular.isArray(models.currentEvent.matchDays)) {\n          models.currentEvent.matchDays.push(res);\n        }\n        return res;\n      },\n\n      /**\n       * Update the teams of current event\n       */\n      updateTeams: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.teams = res;\n        }\n        return res;\n      },\n\n      /**\n       * Update the scoreboard of current event\n       */\n      updateScoreboard: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.scoreboard = res;\n        }\n        return res;\n      },\n\n      /**\n       * Update the scorers of current event\n       */\n      updateScorers: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.scorers = res;\n        }\n        return res;\n      },\n\n      updateTeam: function (res) {\n        if(models.currentEvent && res.teamId && angular.isArray(models.currentEvent.teams)){\n          for (var i = 0; i < models.currentEvent.teams.length; i++) {\n            if(models.currentEvent.teams[i].teamId === res.teamId){\n              return angular.merge(models.currentEvent.teams[i], res);\n            }\n          }\n        }\n        return res;\n      },\n\n      /**\n       * Remove a team from the cache\n       */\n      removeTeam: function (res) {\n        if(!res.teamId || !models.currentEvent || !angular.isArray(models.currentEvent.teams)) return res;\n\n        // Look for the team in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.teams.length; i++) {\n          if(models.currentEvent.teams[i].teamId === res.teamId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.teams.length){\n          models.currentEvent.teams.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Remove a match from the cache\n       */\n      removeMatch: function (res) {\n        if(!res.matcId || !models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)) return res;\n\n        // Look for the match in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.currentDay.matches.length){\n          models.currentEvent.currentDay.matches.splice(i,1);\n        }\n        return res;\n      },\n\n    //\n    //   /**\n    //    * Inject some default values inside the response\n    //    */\n    //   injectDefaults: function(res) {\n    //     // Parse the model depending of its nature\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           helpers.forEachModel(model, helpers.injectProjectDefaults);\n    //           break;\n    //         case 'users':\n    //         case 'user':\n    //           helpers.forEachModel(model, helpers.injectUserDefaults);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //   * Mark the model as to be reloaded. This allows the resPipe to delete it\n    //   * from cache (if present) and to add it again\n    //   */\n    //   markReload: function (res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, function (m) {\n    //       m._reload = true;\n    //     });\n    //     return res;\n    //   },\n    //\n    //\n    //   /**\n    //   * Mark the model as destroyed. This allows the resPipe to delete it\n    //   * from cache (if present)\n    //   */\n    //   markDestroyed: function (res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, function (m) {\n    //       m._destroyed = true;\n    //     });\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort frames and comments in projects\n    //    */\n    //   sortFramesAndComments: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(angular.isArray(model)){\n    //       angular.forEach(model, function(project) {\n    //         helpers.sortFramesAndCommentsSingle(project);\n    //       });\n    //     }\n    //     else if(model){\n    //       helpers.sortFramesAndCommentsSingle(model);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort frames in cache\n    //    */\n    //   sortFramesCache: function(res) {\n    //     var project = helpers.getRelatedProject(res);\n    //     if(project && project.frames){\n    //       utils.sortByOrder(project.frames);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort Comments given order\n    //    */\n    //   sortCommentsCache: function(res) {\n    //     var frame = helpers.getRelatedFrame(res);\n    //     if(frame && frame.comments){\n    //       utils.sortByOrder(frame.comments);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Update models cache\n    //    */\n    //   updateCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     var project = null;\n    //     var frame = null;\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           res[res._model] = helpers.updateModelCache(models.projects, model);\n    //           break;\n    //         case 'frames':\n    //         case 'frame':\n    //           project = helpers.getRelatedProject(res);\n    //           res[res._model] = helpers.updateModelCache(project.frames, model);\n    //           break;\n    //         case 'comments':\n    //         case 'comment':\n    //           frame = helpers.getRelatedFrame(res);\n    //           if(!frame.comments){\n    //             frame.comments = [];\n    //           }\n    //           res[res._model] = helpers.updateModelCache(frame.comments, model);\n    //           break;\n    //         case 'project_files':\n    //         case 'project_file':\n    //           project = helpers.getRelatedProject(res);\n    //           res[res._model] = helpers.updateModelCache(project.project_files, model);\n    //           break;\n    //         case 'user':\n    //         case 'users':\n    //           res[res._model] = helpers.updateModelCache(models.users, model);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Update models cache\n    //    */\n    //   cleanCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'users':\n    //           models.users = [];\n    //           if(models.currentUser){\n    //             models.users.push(models.currentUser);\n    //           }\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Prune the cache, removing old projects which probably has been deleted\n    //    */\n    //   pruneProjectCache: function(res) {\n    //     if(angular.isArray(res.projects)){\n    //       var ids = [];\n    //       var newCache = [];\n    //       // Remember projects returned by server in the response\n    //       angular.forEach(res.projects, function(project) {\n    //         ids.push(project.id);\n    //       });\n    //       // Keep in cache only allowed projects\n    //       angular.forEach(models.projects, function(project) {\n    //         // If the project was present in response, or if the project is not mine, keep.\n    //         // (Don't keep the project if it's mine but it's not present in response. This means it's been recently deleted)\n    //         if(ids.indexOf(project.id) >= 0 || project.owner.id !== models.currentUser.id){\n    //           newCache.push(project);\n    //         }\n    //       });\n    //       models.projects = newCache; // Replace the cache\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Prune the cache, removing old projects which probably has been deleted\n    //    */\n    //   forcePruneProjectCache: function(res) {\n    //     if(angular.isArray(res.projects)){\n    //       var ids = [];\n    //       var newCache = [];\n    //       // Remember projects returned by server in the response\n    //       angular.forEach(res.projects, function(project) {\n    //         ids.push(project.id);\n    //       });\n    //       // Keep in cache only allowed projects\n    //       angular.forEach(models.projects, function(project) {\n    //         // Keep only the projects that are in response\n    //         if(ids.indexOf(project.id) >= 0){\n    //           newCache.push(project);\n    //         }\n    //       });\n    //       models.projects = newCache; // Replace the cache\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Removes a model from cache\n    //    */\n    //   removeFromCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'project_files':\n    //         case 'project_file':\n    //           helpers.forEachModel(model, helpers.removeProjectFileFromCache);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Set the project(s) as mine mocking an owner\n    //    */\n    //   setProjectAsMine: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, helpers.setProjectAsMineSingle);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Set the project given in response as the current project\n    //    */\n    //   setAsCurrentProject: function(res) {\n    //     if(res.project && !angular.isArray(res.project)){\n    //       models.currentProject = res.project;\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //   * Set the user given in response as the current user\n    //   */\n    //   setAsCurrentUser: function (res) {\n    //     if(res.user && !angular.isArray(res.user)){\n    //       models.currentUser = res.user;\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Convert values to a human readable format\n    //    */\n    //   humanize: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           helpers.forEachModel(model, helpers.humanizeProject);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores projects in long term memory\n    //    */\n    //   memorizeProjects: function(res) {\n    //     longTermMemory.memorize('projects', models.projects);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores currentUser in long term memory\n    //    */\n    //   memorizeCurrentUser: function(res) {\n    //     longTermMemory.memorize('currentUser', models.currentUser);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores About projects in long term memory\n    //    */\n    //   memorizeAboutProjects: function(res) {\n    //     longTermMemory.memorize('aboutProjects', models.projects);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Manage side effects, if any\n    //    */\n    //   sideEffects: function(res) {\n    //     if(res.side_effects){\n    //       angular.forEach(res.side_effects, function(v,k) {\n    //         var project = null;\n    //         var frame = null;\n    //\n    //         switch(k){\n    //           case 'projects':\n    //           case 'project':\n    //             helpers.updateModelCache(models.projects, v);\n    //             break;\n    //           case 'user':\n    //           case 'users':\n    //             helpers.updateModelCache(models.users, v);\n    //             break;\n    //           case 'frames':\n    //           case 'frame':\n    //             project = helpers.getRelatedProject(res);\n    //             helpers.updateModelCache(project.frames, v);\n    //             break;\n    //           case 'project_files':\n    //           case 'project_file':\n    //             project = helpers.getRelatedProject(res);\n    //             helpers.updateModelCache(project.project_files, v);\n    //             break;\n    //           case 'comments':\n    //           case 'comment':\n    //             frame = helpers.getRelatedFrame(res);\n    //             helpers.updateModelCache(frame.comments, v);\n    //             break;\n    //           default:\n    //             $log.warn('Don\\'t know how to handle side effect \"' + k + '\":');\n    //             $log.warn(v);\n    //             break;\n    //         }\n    //       });\n    //     }\n    //     return res;\n    //   }\n    // };\n    //\n    // var helpers = {\n    //\n    //   /**\n    //    * Valid models names\n    //    */\n    //   validModels: [\n    //     'projects',\n    //     'project',\n    //     'frames',\n    //     'frame',\n    //     'comments',\n    //     'comment',\n    //     'project_files',\n    //     'project_file',\n    //     'users',\n    //     'user'\n    //   ],\n    //\n    //   /**\n    //    * Fetch the model from response\n    //    */\n    //   fetchModel: function(res) {\n    //     if(res._model && res[res._model]){\n    //       return res[res._model];\n    //     }\n    //     return null;\n    //   },\n    //\n    //   /**\n    //   * Get the related project referenced in res\n    //   */\n    //   getRelatedProject: function (res) {\n    //     return utils.findFirst(models.projects, res._project_id);\n    //   },\n    //\n    //   /**\n    //   * Get the related frame referenced in res\n    //   */\n    //   getRelatedFrame: function (res) {\n    //     var project = helpers.getRelatedProject(res);\n    //     return utils.findFirst(project.frames, res._frame_id);\n    //   },\n    //\n    //   /**\n    //    * Executes a function for each model\n    //    */\n    //   forEachModel: function(model, func) {\n    //     if(angular.isArray(model)){\n    //       angular.forEach(model, func);\n    //     }\n    //     else if(model){\n    //       func(model);\n    //     }\n    //   },\n    //\n    //   /**\n    //    * inject default values to a project\n    //    */\n    //   injectProjectDefaults: function(project) {\n    //     // Set default image if not set\n    //     if(!project.image){\n    //       project.image = 'assets/images/default-img.png';\n    //     }\n    //\n    //     // Default download url\n    //     if(!project.download_url){\n    //       project.download_url = apiUrl + '/v1/projects/' + project.id + '/download';\n    //     }\n    //   },\n    //\n    //   /**\n    //    * inject default values to a user\n    //    */\n    //   injectUserDefaults: function(user) {\n    //     // Default mb_used to 0\n    //     if(!user.mb_used){\n    //       user.mb_used = 0;\n    //     }\n    //\n    //     // Default mb_total to 0\n    //     if(!user.mb_total){\n    //       user.mb_total = 0;\n    //     }\n    //\n    //     if(!user.can){\n    //       user.can = {\n    //         manage: [],\n    //         update: [],\n    //         show: []\n    //       };\n    //     }\n    //   },\n    //\n    //   /**\n    //    * Set a project as mine\n    //    */\n    //   setProjectAsMineSingle: function(project) {\n    //     if(!project.owner && models.currentUser && models.currentUser.id){\n    //       project.owner = { id: models.currentUser.id };\n    //     }\n    //   },\n    //\n    //   /**\n    //    * Sort the frames and comments of a project by order\n    //    */\n    //   sortFramesAndCommentsSingle: function(project) {\n    //     utils.sortByOrder(project.frames);\n    //     angular.forEach(project.frames, function(frame) {\n    //       utils.sortByOrder(frame.comments);\n    //     });\n    //   },\n    //\n    //   humanizeProject: function(project) {\n    //     // force private to be a boolean (defaults to false), and set private string\n    //     project.private = !!project.private;\n    //     if(project.private){\n    //       project.privateString = 'Private Project';\n    //     }\n    //     else{\n    //       project.privateString = 'Public Project';\n    //     }\n    //   },\n    //\n    //   updateModelCache: function (modelCache, model) {\n    //     var newData = model;\n    //\n    //     // modelCache is array\n    //     if(angular.isArray(modelCache)){\n    //\n    //       // if model is array, recursion\n    //       if(angular.isArray(model)){\n    //         newData = [];\n    //         angular.forEach(model, function(m) {\n    //           if(m){\n    //             var merged = helpers.updateModelCache(modelCache, m); // recursion\n    //             if(merged){\n    //               newData.push(merged);\n    //             }\n    //           }\n    //         });\n    //       }\n    //\n    //       // single model\n    //       else if(model){\n    //         // if model is maked as _reload, remove it from cache and add it again\n    //         if(model._reload){\n    //           utils.removeFirst(modelCache, model.id);\n    //           delete model._reload; // Delete _reload metadata not to store it in cache\n    //           newData = utils.mergeOrPush(modelCache, model);\n    //         }\n    //         // if model is marked as _destroyed, remove it from cache\n    //         else if(model._destroyed){\n    //           utils.removeFirst(modelCache, model.id);\n    //         }\n    //         // otherwise, just update the cache\n    //         else{\n    //           newData = utils.mergeOrPush(modelCache, model);\n    //         }\n    //       }\n    //     }\n    //\n    //     return newData;\n    //   }\n\n      log: function (res) {\n        $log.info(res);\n        return res;\n      },\n\n      debugger: function (res) {\n        debugger; // eslint-disable-line no-debugger\n        return res;\n      }\n    };\n\n    return resPipe;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Long Term Memory\n   * Persist data to make it available after the browser is closed\n   */\n  .factory('longTermMemory', function () {\n    var allowedKeys = [\n      'currentUser',\n      'events',\n      'regions',\n      'currentEvent'\n    ];\n\n    var longTermMemory = {\n      memorize: function(key, val) {\n        if(allowedKeys.indexOf(key) < 0){\n          return;\n        }\n\n        localStorage[key] = angular.toJson(val);\n      },\n\n      remember: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        try {\n          return angular.fromJson(localStorage[key]);\n        }\n        catch(e){\n          delete localStorage[key];\n          return null;\n        }\n      },\n\n      forget: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        delete localStorage[key];\n      },\n\n      oblivion: function() {\n        angular.forEach(allowedKeys, function(key) {\n          delete localStorage[key];\n        });\n        localStorage.clear();\n      }\n    };\n\n    return longTermMemory;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoSidebar', frispoSidebar);\n\n  /** @ngInject */\n  function frispoSidebar($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoSidebar/frispoSidebar.html',\n      controller: SidebarController,\n      controllerAs: 'sidebar',\n      link: SidebarLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function SidebarController(models, $state) {\n      var vm = this;\n\n      vm.models = models;\n      vm.state = $state;\n\n      vm.manageMenuEntries = [\n        'main.admin.createEvent',\n        'main.admin.events',\n        'main.admin.teams',\n        'main.admin.calendar',\n        'main.admin.scoreboard'\n      ]\n    }\n\n    function SidebarLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoHeader', frispoHeader);\n\n  /** @ngInject */\n  function frispoHeader($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoHeader/frispoHeader.html',\n      controller: HeaderController,\n      controllerAs: 'header',\n      link: HeaderLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function HeaderController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function HeaderLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoFooter', frispoFooter);\n\n  /** @ngInject */\n  function frispoFooter($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoFooter/frispoFooter.html',\n      controller: FooterController,\n      controllerAs: 'footer',\n      link: FooterLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function FooterController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function FooterLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * My Project Overview API service\n   */\n   .factory('frispoApi', function ($q, $http, usersApiUrl, eventsApiUrl, teamsApiUrl, matchesApiUrl, rankingApiUrl, consumerKey, consumerSecret, models, preferencesApiUrl) {\n      // Cache the promises (just to avoid to call the same API before the previous has finished)\n      var cache = {};\n\n      // Api Helpers (accessible only from this factory)\n      var helpers = {\n        /**\n         * Try to retrieve the result from cache, or make HTTP call\n         * @param  {String} method  The HTTP method\n         * @param  {String} fullUrl The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @param  {Boolean} keep   If true, the promise is cached even after it's been fulfilled\n         * @return {Promise}        A promise of the response\n         */\n        cacheOrHttp: function(method, fullUrl, data, headers, keep) {\n          var key = method + fullUrl + (data ? angular.toJson(data) : '');\n\n          var config = {};\n          if(method) config.method = method.toUpperCase();\n          if(fullUrl) config.url = fullUrl;\n          if(data) config.data = data;\n          if(headers) config.headers = headers;\n\n          if (!cache[key]) {\n            var promise;\n            var err = false;\n            switch(method){\n              case 'get':\n              case 'GET':\n              case 'post':\n              case 'POST':\n              case 'put':\n              case 'PUT':\n              case 'patch':\n              case 'PATCH':\n              case 'delete':\n              case 'DELETE':\n                promise = $http(config);\n                break;\n              default:\n                err = true;\n                promise = $q.reject();\n                break;\n            }\n            if(!err){\n              cache[key] = promise.finally(function(response,err) {\n                if(!keep){\n                  delete cache[key]; // delete the cache, so the next call will be fresh\n                }\n                if(err) { return $q.reject(err); }\n                if(response) { return response; }\n              });\n            }\n          }\n\n          return cache[key];\n        },\n\n        /**\n         * Perform an API call to the Users endpoint, using preset headers and required data\n         * @param  {String} method  The HTTP method\n         * @param  {String} url The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        userApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            usersApiUrl + url,\n            angular.merge({\n                consumer_key: consumerKey,\n                consumer_secret: consumerSecret\n              },\n              data\n            ),\n            angular.merge({\n                Authorization: 'Basic ZnJpc3BvOmZyMXNwMA==' // frispo:fr1sp0\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Events endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        eventsApiCall: function (method, url, data, headers, keep) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            eventsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            ),\n            keep\n          );\n        },\n\n        /**\n         * Perform an API call to the Teams endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        teamsApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            teamsApiUrl + '/events/' + eventId + '/teams' + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Match endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        matchesApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            matchesApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Ranking endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}         A promise of the response\n         */\n        rankingApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            rankingApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Preferences endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}         A promise of the response\n         */\n        preferencesApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            preferencesApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Expect a 200 response and return data.\n         * Otherwise, return a rejected promise.\n         */\n        expect200: function (response) {\n          if(response.status === 200){\n            return response.data;\n          }\n          else{\n            return $q.reject(response);\n          }\n        },\n\n        unwrapData: function (response) {\n          return response.data;\n        }\n      };\n\n      var frispoApi = {\n        /** USER API **/\n\n        /**\n         * Register a new user\n         */\n        register: function(userData) {\n          return helpers\n            .userApiCall('post', '/create', {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Authenticate the user\n         */\n        login: function(userData) {\n          return helpers\n            .userApiCall('post', '/login', {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200);\n        },\n\n        refreshToken: function (userData) {\n          return helpers\n            .userApiCall('post', '/refresh_session', {\n              refresh_token: userData.refreshToken\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Authenticate the user using facebook\n         */\n        loginFacebook: function (facebookData) {\n          return helpers\n            .userApiCall('post', '/login_facebook', {\n              // TODO: uncomment this line\n              facebook_token: facebookData.authResponse.accessToken\n              // TODO: remove this line\n              // facebook_token: 'EAAOlGomqNZCEBAP0qxpxsF24LHj0U6f31n9pHfM2dWyBHSlW5P2gD3ZCkragDChLxZC2vmOdOeJxS6NJDHQiRel6schIQaC8aapfzlO9NzMTYBMVug27xr6m9XOW70nHpaiycsqGl33djVykZARc10PIg09g4gANZCa2NcRYKga0F32fZBH7PFNJs54rNf89MZD'\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Logout the user\n         * @param  {Object} userData  an hash containing the 'accessToken'\n         * @return {Promise}          A promise with the response\n         */\n        logout: function (userData) {\n          return helpers\n            .userApiCall('post', '/logout', {\n              access_token: userData.accessToken,\n              anonymous_user: 'siteweb'\n            })\n            .then(helpers.expect200);\n        },\n\n        /* EVENTS API */\n\n        /**\n         * List the events of the current user\n         * @return {Promise} A promise fulfilled with the event list\n         */\n        listEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/add/' + models.currentUser.uuid, eventData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Update an event\n         */\n        updateEvent: function (eventId, eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/' + eventId + '/edit/' + models.currentUser.uuid, eventData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroyEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('delete', '/events/' + eventData.evenId + '/remove/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Show an event\n         * @return {Promise} A promise fulfilled with the event requested\n         */\n        showEvent: function (eventId) {\n          return helpers\n            .eventsApiCall('get', '/event/' + eventId + '/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * List the active regions\n         */\n        listRegions: function () {\n          return helpers\n            .eventsApiCall('get', '/regions/' + models.currentUser.uuid, null, null, true)\n            .then(helpers.expect200);\n        },\n\n        /** RANKING API **/\n\n        /**\n         * Show the scoreboard of an event\n         */\n        showEventScoreboard: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/ranking/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Show the scoreboard of a tournament event\n         */\n        showTournamentScoreboard: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/rankingtournament/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Show the players' scores of the event\n         */\n        showScorers: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/scorers/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /* TEAMS API */\n\n        /**\n         * List the teams of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listTeams: function (eventId) {\n          return helpers\n            .teamsApiCall(eventId, 'get', '/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * update a team\n         */\n        updateTeam: function (eventId, teamId, teamData) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/' + teamId + '/edit/' + models.currentUser.uuid, teamData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * update a team\n         */\n        createTeam: function (eventId, teamData) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/add/' + models.currentUser.uuid, teamData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * destroy a team\n         */\n        destroyTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/' + teamId + '/remove/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * show a team\n         */\n        showTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall(eventId, 'get', '/' + teamId + '/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Add a group of teams to an event\n         * @param {Number} eventId   The id of the event to add the teams to\n         * @param {Object} teamsData An object containing the informations about the teams we want to create\n         */\n        addGroupTeams: function (eventId, teamsData) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/add_group_teams/' + models.currentUser.uuid, teamsData)\n            .then(helpers.expect200);\n        },\n\n        /* PREFERENCES API */\n\n\n        /**\n         * Get the preferences of the current user\n         */\n        showPreferences: function () {\n          return helpers\n            .preferencesApiCall('get', '/list/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n\n        /* MATCHES API */\n\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createMatchesCalendar: function (eventId) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/match/create_calendar/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * List the matches of an event for a given day\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatches: function (eventId, day) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/day/' + day + '/matches/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * List the scorers of a match for a given event\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatchScorers: function (eventId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/match/' + matchId + '/scorers/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Update a match\n         */\n        updateMatch: function (eventId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches/update/' + models.currentUser.uuid, matchData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Create a match\n         */\n        createMatch: function (eventId, matchDayId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/day/' + matchDayId + '/matches/add/' + models.currentUser.uuid, matchData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (eventId, dayData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches_day/add/' + models.currentUser.uuid, dayData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroyMatch: function (eventId, matchDayId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/match_day/' + matchDayId + '/matches/' + matchId + '/remove/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        }\n      };\n\n      return frispoApi;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Error Manager.\n   * Handles common HTTP error messages\n   */\n  .factory('errorManager', function (toastr, $log, $state, $q, longTermMemory, models) {\n    var errorManager = function(err) {\n      // log every errors\n      $log.error(err);\n\n      // Unwrap HTTP errors and take actions if needed\n      if(angular.isObject(err) && err.status){\n        switch(err.status){\n          case 401:\n            $state.go('main.logout');\n            err = err.data;\n            break;\n          case 403:\n            $state.go('main.home');\n            err = err.data;\n            break;\n          case 422:\n            err = err.data;\n            break;\n          case 404:\n            err = err.data;\n            break;\n          case 413:\n            err = 'Il file che stai cercando di caricare è troppo grande';\n            break;\n          case -1:\n            err = 'Il server non è raggiungibile o non sei connesso ad Internet';\n            break;\n          default:\n            break;\n        }\n      }\n\n      var getErrorString = function (err) {\n        if(angular.isString(err)){\n          return err;\n        }\n        else if(angular.isObject(err) && (err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error)){\n          return getErrorString(err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error );\n        }\n        else if(angular.isArray(err)){\n          var myErr = [];\n          for (var i = 0; i < err.length; i++) {\n            myErr[i] = getErrorString(err[i]);\n          }\n          return getErrorString(myErr.join('<br>'));\n        }\n        // Don't manage different kinds of error\n        else{\n          longTermMemory.oblivion(); // Forget everything. We don't want the app to be broken forever!\n          models.reset(); // Reset all the models. We don't want the app to be broken forever!\n          return 'Si è verificato un errore imprevisto. Si prega di riprovare più tardi.';\n        }\n      }\n\n      toastr.error(getErrorString(err), 'Errore');\n\n      return $q.reject(err);\n    };\n\n    return errorManager;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('datepicker', datepicker);\n\n  /** @ngInject */\n  function datepicker() {\n    var directive = {\n      restrict: 'A',\n      link: datepickerLink,\n      scope: {\n        datepicker: '@',\n        model: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function datepickerLink(scope, el) {\n      scope.watchInput = function () {\n        scope.$watch('model', function () {\n          scope.drp.elementChanged();\n        });\n      }\n\n      if(scope.datepicker === 'range'){\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY') + ' -> ' + picker.endDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n      else{\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          singleDatePicker: true,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('compareTo', compareTo);\n\n  /** @ngInject */\n  function compareTo() {\n    var directive = {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=compareTo'\n      },\n      link: compareToLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function compareToLink(scope, element, attrs, ngModel) {\n      ngModel.$validators.compareTo = function (modelvalue) {\n        return modelvalue == scope.otherModelValue;\n      }\n      scope.$watch('otherModelValue', function () {\n        ngModel.$validate();\n      })\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * User models manager\n   */\n   .factory('users', function (frispoApi, errorManager, models, longTermMemory, resPipe, toastr, $state, $q, ezfb, $log) {\n\n      var users = {\n        /**\n         * Register a new user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        register: function (userData) {\n          return frispoApi\n            .register(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email;\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(function (res) {\n              $log.info('Frispo registration');\n              users.showPreferences();\n              return res;\n            })\n            .catch(errorManager);\n        },\n\n        /**\n         * Login a user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        login: function (userData) {\n          return frispoApi\n            .login(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email; // Add the email from the input as it's missing from the response\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.refreshToken)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Refresh the token of a user\n         */\n        refreshToken: function (userData) {\n          return frispoApi\n            .refreshToken(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(function (res) {\n              if(res.accessToken){\n                models.currentUser.accessToken = res.accessToken;\n              }\n              if(res.refreshToken){\n                models.currentUser.refreshToken = res.refreshToken;\n              }\n              if(res.expireIn){\n                models.currentUser.expireIn = res.expireIn;\n              }\n              return models.currentUser;\n            })\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Logout a user\n         * @param  {Object} userData an object containing the user data\n         * @return {Promise}          a promise that will be fullfilled after the logout\n         */\n        logout: function (userData) {\n          if(userData.loggedIn){\n            return frispoApi\n              .logout(models.currentUser)\n              .then(function (res) {\n                toastr.success('Succesfully logged out', 'Logout');\n                $log.info('Frispo logout');\n                return res;\n              })\n              .catch(errorManager)\n              .finally(function() {\n                models.currentUser = {};\n                longTermMemory.forget('currentUser');\n                $state.go('main.login');\n              })\n              .then(function () {\n                ezfb.logout();\n              });\n          }\n          return $q.resolve(userData);\n        },\n\n        /**\n         * Login a user to frispo's server using the facebook login() response data\n         * @param  {Object} facebookData The object returned by the Facebook SDK after a succesful login\n         * @return {Promise}             A promise fulfilled with the authentication data for the user,\n         */\n        loginFacebook: function (facebookData) {\n          return frispoApi\n            .loginFacebook(facebookData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.refreshToken)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Get the preferences of the user\n         */\n        showPreferences: function () {\n          return frispoApi\n            .showPreferences()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePreferences)\n            .then(resPipe.memorizeCurrentUser)\n            .then(resPipe.log)\n            .catch(errorManager);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged in\n         * @param  {Object} userData The object containing the user data\n         * @return {Object}          The same userData, useful for promise chaining\n         */\n        onLoggedIn: function (userData) {\n          toastr.success(\"Benvenuto, \" + (userData.displayName) + \"!\", \"Accesso effettuato\")\n          if($state.current.name === 'main.login' || $state.current.name === 'main.register'){\n            $state.go('main.admin.dashboard');\n          }\n          $log.info('Frispo login');\n          users.showPreferences();\n          return userData;\n        },\n\n        /**\n         * Backup user data and setup the anonymous user for testing purposes\n         */\n        setAnonymousUser: function (res) {\n          models.bkp =  {\n            uuid: models.currentUser.uuid,\n            accessToken: models.currentUser.accessToken\n          }\n          models.currentUser.uuid = 'anonimo';\n          models.currentUser.accessToken = '4e66c966e021918f0b088ddc929847f7'\n          return $q.resolve(res);\n        },\n\n        /**\n         * Restore user backup\n         */\n        unsetAnonymousUser: function (res) {\n          models.currentUser.uuid = models.bkp.uuid;\n          models.currentUser.accessToken = models.bkp.accessToken;\n          delete models.bkp;\n          return $q.resolve(res);\n        }\n      };\n\n      return users;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('teams', function (frispoApi, errorManager, resPipe, $q, models, utils) {\n\n      var teams = {\n        /**\n         * List the teams of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listTeams(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeams)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        show: function (teamId) {\n          return frispoApi\n            .showTeam(models.currentEvent.evenId, teamId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        create: function (team) {\n          return frispoApi\n            .createTeam(models.currentEvent.evenId, team)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        update: function (teamId, team) {\n          return frispoApi\n            .updateTeam(models.currentEvent.evenId, teamId, team)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        destroy: function (team) {\n          return frispoApi\n            .destroyTeam(models.currentEvent.evenId, team.teamId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return team;\n            })\n            .then(resPipe.removeTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a group of teams and add it to an event\n         */\n        addGroup: function (teamsData) {\n          return frispoApi\n            .addGroupTeams(models.currentEvent.evenId, teamsData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from a team form into an teamsData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the teamsData object\n         */\n        form2Teams: function (formData) {\n          var teamsData = { extra: [] };\n          angular.forEach(formData.teams, function (team) {\n            teamsData.extra.push(teams.form2Team(team));\n          });\n          return $q.resolve(teamsData);\n        },\n\n        form2Team: function (formData) {\n          var teamData = {};\n          var teamTime = utils.str2Time(formData.time);\n          if(angular.isDefined(formData.captain)) teamData.team_captain = formData.captain;\n          if(angular.isDefined(teamTime)) teamData.team_time = teamTime;\n          if(angular.isDefined(formData.name)) teamData.team_name = formData.name;\n          if(angular.isDefined(formData.phone)) teamData.team_mobile_phone = formData.phone;\n          if(angular.isDefined(formData.place)) teamData.team_place = formData.place;\n          if(angular.isDefined(formData.round)) teamData.team_groups = formData.round;\n          if(angular.isDefined(formData.desc)) teamData.team_description = formData.desc;\n          return teamData;\n        }\n      };\n\n      return teams;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n  * Models cache\n  */\n  .factory('models', function (longTermMemory) {\n\n    var models = {\n       reset: function () {\n         models.events = longTermMemory.remember('events') || [];\n         models.regions = longTermMemory.remember('regions') || [];\n         models.currentUser = longTermMemory.remember('currentUser') || {};\n         models.currentEvent = models.events.length>0 && longTermMemory.remember('currentEvent') || undefined;\n       }\n    };\n\n    models.reset();\n\n    return models;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Matches models manager\n   */\n   .factory('matches', function (frispoApi, errorManager, resPipe, models, utils, $q) {\n\n      var matches = {\n\n        /**\n         * Create a matches calendar for an event\n         */\n        createCalendar: function (eventId) {\n          return frispoApi\n            .createMatchesCalendar(eventId)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the matches for a day of an event\n         */\n        list: function () {\n          return frispoApi\n            .listMatches(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectMatchDefaults)\n            .then(resPipe.updateMatches)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the scorers of a match\n         */\n        listScorers: function (matchId) {\n          return frispoApi\n            .listMatchScorers(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(function (res) {\n              return resPipe.updateMatchScorers(matchId, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Update a match\n         */\n        update: function (matchDayId, matchData) {\n          return frispoApi\n            .updateMatch(models.currentEvent.evenId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectMatchDefaults)\n            .then(function (res) {\n              res.matcDayId = matchDayId; // Inject the match day ID, as the server returns 0\n              return res;\n            })\n            .then(resPipe.updateMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match\n         */\n        create: function (matchData) {\n          return frispoApi\n            .createMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.log)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (dayData) {\n          return frispoApi\n            .createDay(models.currentEvent.evenId, dayData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.insertMatchDay)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroy: function (matchData) {\n          return frispoApi\n            .destroyMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData.matcId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return matchData;\n            })\n            .then(resPipe.removeMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show a match\n         */\n         show: function (matchId) {\n           return frispoApi\n            .showMatch(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMatch)\n            .then(resPipe.injectMatchDefaults)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n         },\n\n         /**\n          * Translate data from a match form into a matchData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the matchData object\n          */\n         form2Match: function (formData) {\n           var matchData = {};\n           var matchTime = utils.str2Time(formData.time);\n           var matchDate = utils.str2Date(formData.date);\n           if(angular.isDefined(formData.matchId)) matchData.matc_id = formData.matchId;\n           if(formData.teamA && angular.isDefined(formData.teamA.teamId)) matchData.matc_team_id_a = formData.teamA.teamId;\n           if(formData.teamB && angular.isDefined(formData.teamB.teamId)) matchData.matc_team_id_b = formData.teamB.teamId;\n           if(angular.isDefined(formData.scoreA)) matchData.matc_goal_team_a = formData.scoreA;\n           if(angular.isDefined(formData.scoreB)) matchData.matc_goal_team_b = formData.scoreB;\n           if(angular.isString(formData.dateExpected)) matchData.matc_date_expected = formData.dateExpected;\n           if(angular.isString(matchDate)) matchData.matc_date_match = matchDate;\n           if(angular.isString(matchTime)) matchData.matc_time = matchTime;\n           if(angular.isString(formData.address)) matchData.matc_address = formData.address;\n           if(angular.isString(formData.round)) matchData.matc_name_groups = formData.round;\n           if(formData.played && angular.isDefined(formData.played.value)) matchData.matc_flg_play = formData.played.value;\n           if(angular.isDefined(formData.shootoutA)) matchData.matc_shootout_team_a = formData.shootoutA;\n           if(angular.isDefined(formData.shootoutB)) matchData.matc_shootout_team_b = formData.shootoutB;\n           if(angular.isString(formData.place)) matchData.matc_place = formData.place;\n           return $q.resolve(matchData);\n         },\n\n         /**\n          * Translate data from a Day form into an dayData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the dayData object\n          */\n         form2Day: function (formData) {\n           var dayData = {};\n           if(angular.isDefined(formData.name)) dayData.mada_name = formData.name;\n           if(angular.isDefined(formData.desc)) dayData.mada_description = formData.desc;\n           return $q.resolve(dayData);\n         }\n      };\n\n      return matches;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('events', function (frispoApi, errorManager, resPipe, $q, utils) {\n\n      var events = {\n        /**\n         * Show all events\n         */\n         list: function () {\n          return frispoApi\n            .listEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateEvents)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a new event\n         */\n        create: function (eventData) {\n          return frispoApi\n            .createEvent(eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show an event\n         */\n        show: function (eventId) {\n          return frispoApi\n            .showEvent(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show the scoreboard of an event\n         */\n        showScoreboard: function (event) {\n          var apiCall;\n          // Torneo a gironi\n          if(event.evenType === 1){\n            apiCall = frispoApi.showTournamentScoreboard(event.evenId);\n          }\n          else{\n            apiCall = frispoApi.showEventScoreboard(event.evenId);\n          }\n          return apiCall\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateScoreboard)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show the scorers of an event\n         */\n        showScorers: function (event) {\n          frispoApi.showScorers(event.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateScorers)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroy: function (event) {\n          return frispoApi\n            .destroyEvent(event)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return event;\n            })\n            .then(resPipe.removeEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        /**\n         * Update an event\n         */\n        update: function (eventId, eventData) {\n          return frispoApi\n            .updateEvent(eventId, eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n        * List the active regions\n        */\n        listRegions: function () {\n          return frispoApi\n            .listRegions()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateRegions)\n            .then(resPipe.memorizeRegions)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from an event form into an eventData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the eventData object\n         */\n        form2Event: function (formData) {\n          var eventData = {};\n          var dateRange = utils.str2Date(formData.dates);\n          if(angular.isDefined(formData.name)) eventData.even_name = formData.name;\n          if(angular.isDefined(formData.desc)) eventData.even_description = formData.desc;\n          if(angular.isDefined(formData.email)) eventData.even_email = formData.email;\n          if(angular.isDefined(formData.address)) eventData.even_address = formData.address;\n          if(angular.isDefined(formData.type)) eventData.even_type = '' + formData.type;\n          if(angular.isDefined(formData.organizer)) eventData.even_organize_by = formData.organizer;\n          if(angular.isDefined(formData.formula)) eventData.even_formula = '' + formData.formula;\n          if(angular.isDefined(formData.telephone)) eventData.even_mobile_phone = formData.telephone;\n          if(angular.isArray(dateRange) && dateRange.length > 0 && dateRange[0]) eventData.even_date_start = dateRange[0];\n          if(angular.isArray(dateRange) && dateRange.length > 1 && dateRange[1]) eventData.even_date_end = dateRange[1];\n          if(formData.region && formData.region.regiId) eventData.regi_id = formData.region.regiId;\n          // TODO: remove this line: it's a mock\n          else eventData.regi_id = 1;\n          if(formData.currentDay && formData.currentDay.matcDayId) eventData.even_day_active = formData.currentDay.matcDayId;\n          return $q.resolve(eventData);\n        }\n\n      };\n\n      return events;\n   });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(\n    $rootScope,\n    uiState,\n    defaultBodyClasses,\n    ezfb,\n    $log,\n    users,\n    models\n  ) {\n      // Bind the uiState to $rootScope as it's used in index.html\n      $rootScope.uiState = uiState;\n\n      // On state change\n      var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess', function (event, toState) {\n        var pms = toState.params || {};\n        uiState.bodyClasses = pms.bodyClasses || defaultBodyClasses;\n      });\n\n      // Subscribe to FB login\n      ezfb.Event.subscribe('auth.login', function (response) {\n        $log.info('Facebook login');\n        users.loginFacebook(response);\n      });\n\n      // Subscribe to FB logout\n      ezfb.Event.subscribe('auth.logout', function () {\n        $log.info('Facebook logout');\n        if(models.currentUser.loggedIn){\n          users.logout();\n        }\n      });\n\n      // Check FB connection\n      ezfb.getLoginStatus();\n\n      // Destroy watchers\n      $rootScope.$on('$destroy', function() {\n        stateChangeSuccess();\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    var requireLoggedIn = function ($timeout, $state, models) {\n      if(!models.currentUser.loggedIn){\n        $timeout(function() {\n          $state.go('main.login');\n        });\n      }\n    };\n\n    $stateProvider\n      .state('main', {\n        abstract: true,\n        templateUrl: 'app/pages/main/main.html'\n      })\n      .state('main.admin', {\n        abstract: true,\n        templateUrl: 'app/pages/admin/admin.html',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.dashboard', {\n        url: '/',\n        templateUrl: 'app/pages/dashboard/dashboard.html',\n        controller: 'DashboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.createEvent', {\n        url: '/create-event',\n        templateUrl: 'app/pages/createEvent/createEvent.html',\n        controller: 'CreateEventController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.events', {\n        url: '/events',\n        templateUrl: 'app/pages/events/events.html',\n        controller: 'EventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.teams', {\n        url: '/teams',\n        templateUrl: 'app/pages/teams/teams.html',\n        controller: 'TeamsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.calendar', {\n        url: '/calendar',\n        templateUrl: 'app/pages/calendar/calendar.html',\n        controller: 'CalendarController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scoreboard', {\n        url: '/scoreboard',\n        templateUrl: 'app/pages/scoreboard/scoreboard.html',\n        controller: 'ScoreboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scorers', {\n        url: '/scorers',\n        templateUrl: 'app/pages/scorers/scorers.html',\n        controller: 'ScorersController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.news', {\n        url: '/news',\n        templateUrl: 'app/pages/news/news.html',\n        controller: 'NewsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.disciplinary', {\n        url: '/disciplinary',\n        templateUrl: 'app/pages/disciplinary/disciplinary.html',\n        controller: 'DisciplinaryController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.login', {\n        url: '/login',\n        templateUrl: 'app/pages/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition login-page'\n        },\n        onEnter: function ($timeout, $state, models) {\n          if(models.currentUser.loggedIn){\n            $timeout(function () {\n              $state.go('main.admin.dashboard');\n            })\n          }\n        }\n      })\n      .state('main.register', {\n        url: '/register',\n        templateUrl: 'app/pages/register/register.html',\n        controller: 'RegisterController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition register-page'\n        },\n        onEnter: function ($timeout, $state, models) {\n          if(models.currentUser.loggedIn){\n            $timeout(function () {\n              $state.go('main.admin.dashboard');\n            })\n          }\n        }\n      })\n      .state('main.logout', {\n        url: '/logout',\n        onEnter: function(frispoApi, $state, toastr, models, longTermMemory, users) {\n          users.logout(models.currentUser);\n        }\n      });\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('defaultBodyClasses', 'skin-green fixed sidebar-mini')\n    .constant('usersApiUrl', 'http://api.frispo.it:9763/FrispoUsers/1.0.0/api/users/1.0.0/frispo/base/0/users')\n    .constant('eventsApiUrl', 'https://api.frispo.it:8243/api/events/1.0.0/frispo/base/0')\n    .constant('teamsApiUrl', 'https://api.frispo.it:8243/api/teams/1.0.0/football/base/0')\n    .constant('matchesApiUrl', 'https://api.frispo.it:8243/api/matches/1.0.0/football/base/0')\n    .constant('rankingApiUrl', 'https://api.frispo.it:8243/api/ranking/1.0.0/football/base/0')\n    .constant('preferencesApiUrl', 'https://api.frispo.it:8243/api/preferences/1.0.0/frispo/base/0/preferences')\n    .constant('consumerKey', 'K9khQffyZfMXjF6fEIN1GflFDToa')\n    .constant('consumerSecret', 'uBRbkCgAtVmw8f_5qTYYcqAO7iMa');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $animateProvider, $locationProvider, ezfbProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Animate only elements with class \"animate\"\n    $animateProvider.classNameFilter(/animate/);\n\n    // Set options for toastr\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = false;\n    toastrConfig.progressBar = false;\n\n    //Removes '#' from the URL\n    $locationProvider.html5Mode(true);\n    $locationProvider.hashPrefix('!');\n\n    // Configure facebook\n    ezfbProvider.setLocale('it_IT');\n    ezfbProvider.setInitParams({\n      appId: '1025958327498737'\n    });\n  }\n\n})();\n\nangular.module(\"frispo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/frispoFooter/frispoFooter.html\",\"<footer class=main-footer><div class=\\\"pull-right hidden-xs\\\"><b>Version</b> 1.0.0</div><strong>Copyright © 2014-2016 <a href=http://andreaciaccia.it>Andrea Ciaccia</a>.</strong> All rights reserved.</footer>\");\n$templateCache.put(\"app/components/frispoHeader/frispoHeader.html\",\"<header class=\\\"main-header frispo-header\\\"><a ui-sref=main.admin.dashboard class=logo><!-- mini logo for sidebar mini 50x50 pixels --> <span class=logo-mini><img src=/assets/images/logo-64.png></span><!-- logo for regular state and mobile devices --> <span class=logo-lg><img src=/assets/images/logo-title-64.png></span></a><nav class=\\\"navbar navbar-static-top\\\" role=navigation><!-- Sidebar toggle button--> <a href=# class=sidebar-toggle data-toggle=offcanvas role=button><span class=sr-only>Toggle navigation</span> </a><!-- Navbar Right Menu --><div class=navbar-custom-menu><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown user user-menu\\\"><a href=# class=dropdown-toggle data-toggle=dropdown aria-expanded=false><span class=hidden-xs>{{ header.models.currentUser.displayName }}</span></a><ul class=dropdown-menu><!-- User image --><li class=user-header><img src=assets/images/angular.png class=img-circle alt=\\\"User Image\\\"><p>{{ header.models.currentUser.displayName }}</p></li><!-- Menu Footer--><li class=user-footer><div class=pull-left><a href=main.admin.profile class=\\\"btn btn-default btn-flat\\\">Profile</a></div><div class=pull-right><a ui-sref=main.logout class=\\\"btn btn-default btn-flat\\\">Sign out</a></div></li></ul></li></ul></div></nav></header>\");\n$templateCache.put(\"app/components/frispoSidebar/frispoSidebar.html\",\"<div class=main-sidebar><!-- Inner sidebar --><div class=sidebar><!-- Sidebar Menu --><ul class=sidebar-menu><!-- SECTION Main Menu --><li class=header>Main Menu</li><!-- Home --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.home\\'}\\\"><a ui-sref=main.admin.home><i class=\\\"fa fa-home\\\" aria-hidden=true></i> <span>Home</span></a></li><!-- !Home --><!-- Eventi --><li class=treeview><a href=#><i class=\\\"fa fa-star\\\"></i> <span>Eventi</span> <i class=\\\"fa fa-angle-left pull-right\\\"></i></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><!-- Crea Evento --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.createEvent\\'}\\\"><a ui-sref=main.admin.createEvent><i class=\\\"fa fa-circle-o\\\"></i> Crea evento</a></li><!-- Visualizza Eventi --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.events\\'}\\\"><a ui-sref=main.admin.events><i class=\\\"fa fa-circle-o\\\"></i> Visualizza eventi</a></li></ul></li><!-- !Eventi --><!-- Squadre & Giocatori --><li class=treeview><a href=#><i class=\\\"fa fa-futbol-o\\\" aria-hidden=true></i> <span>Squadre &amp; Giocatori</span> <i class=\\\"fa fa-angle-left pull-right\\\"></i></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><!-- Squadre --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.teams\\'}\\\"><a ui-sref=main.admin.teams><i class=\\\"fa fa-circle-o\\\"></i> Squadre</a></li><!-- Giocatori --><li><a href=#><i class=\\\"fa fa-users\\\"></i> Giocatori</a></li></ul></li><!-- !Squadre & Giocatori --><!-- Calendario & Partite --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.calendar\\'}\\\"><a ui-sref=main.admin.calendar><i class=\\\"fa fa-calendar\\\" aria-hidden=true></i> <span>Calendario &amp; Partite</span></a></li><!-- !Calendario & Partite --><!-- Classifica --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scoreboard\\'}\\\"><a ui-sref=main.admin.scoreboard><i class=\\\"fa fa-trophy\\\" aria-hidden=true></i> <span>Classifica</span></a></li><!-- !Classifica --><!-- Marcatori --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scorers\\'}\\\"><a ui-sref=main.admin.scorers><i class=\\\"fa fa-trophy\\\" aria-hidden=true></i> <span>Marcatori</span></a></li><!-- !Marcatori --><!-- !SECTION Main Menu --><!-- SECTION Dirigente --><li class=header>Dirigente</li><!-- Eventi dirigente --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_events\\'}\\\"><a ui-sref=main.admin.manager_events><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Eventi</span></a></li><!-- !Eventi dirigente --><!-- Partite --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_matches\\'}\\\"><a ui-sref=main.admin.manager_matches><i class=\\\"fa fa-bolt\\\"></i> <span>Partite</span></a></li><!-- !Partite --><!-- SECTION Amministra --><li class=header>Amministra</li><!-- Dirigenti --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_events\\'}\\\"><a ui-sref=main.admin.manager_events><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Dirigenti</span></a></li><!-- !Dirigenti --><!-- !SECTION Amministra --><!-- SECTION Utili --><li class=header>Utili</li><!-- News --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.news\\'}\\\"><a ui-sref=main.admin.news><i class=\\\"fa fa-newspaper-o\\\"></i> <span>News</span></a></li><!-- !News --><!-- Disciplinare --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.disciplinary\\'}\\\"><a ui-sref=main.admin.disciplinary><i class=\\\"fa fa-bolt\\\"></i> <span>Disciplinare</span></a></li><!-- !Disciplinare --><!-- !SECTION Utili --><!-- SECTION Support --><li class=header>Support</li><!-- Documentation --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.documentation\\'}\\\"><a ui-sref=main.admin.documentation><i class=\\\"fa fa-info\\\" aria-hidden=true></i> <span>Documentation</span></a></li><!-- !Documentation --><!-- Faq --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.faq\\'}\\\"><a ui-sref=main.admin.faq><i class=\\\"fa fa-comments-o\\\" aria-hidden=true></i> <span>Faq</span></a></li><!-- !Faq --><!-- Contact Us --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.contact\\'}\\\"><a ui-sref=main.admin.contact><i class=\\\"fa fa-envelope\\\" aria-hidden=true></i> <span>Contact Us</span></a></li><!-- !Contact Us --><!-- !SECTION Support --></ul><!-- /.sidebar-menu --></div><!-- /.sidebar --></div><!-- /.main-sidebar -->\");\n$templateCache.put(\"app/pages/admin/admin.html\",\"<div class=wrapper><frispo-header></frispo-header><frispo-sidebar></frispo-sidebar><div class=content-wrapper><div ui-view></div></div><frispo-footer></frispo-footer></div>\");\n$templateCache.put(\"app/pages/calendar/calendar.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"><div class=pull-right><a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewDay()>Crea nuova giornata</a> <a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewMatch()>Crea nuova partita</a></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=table><tr><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Indirizzo</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th>Giocata</th><th></th></tr><tr ng-repeat-start=\\\"match in vm.models.currentEvent.currentDay.matches\\\" match-show=match></tr><tr ng-repeat-end match-edit=match></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/createEvent/createEvent.html\",\"<section class=create-event><section class=content-header><h1>Crea un evento <small>&nbsp;{{ vm.wizard | wizardTextProgress }}</small></h1><wizard-progress wizard=vm.wizard></wizard-progress></section><section class=content><wizard-step-box step=1 wizard=vm.wizard title=\\\"Impostazioni evento\\\"><form id=formStep1 name=formStep1 ng-submit=vm.step1Done()><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.name.$dirty && formStep1.name.$invalid}\\\"><label for=formStep1-name>Nome</label><input id=formStep1-name ng-model=vm.step1.name name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=formStep1.name.$dirty ng-messages=formStep1.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.desc.$dirty && formStep1.desc.$invalid}\\\"><label for=formStep1-desc>Descrizione</label><textarea id=formStep1-desc rows=5 ng-model=vm.step1.desc name=desc class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\"></textarea><span ng-show=formStep1.desc.$dirty ng-messages=formStep1.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.address.$dirty && formStep1.address.$invalid}\\\"><label for=formStep1-address>Indirizzo</label><input id=formStep1-address ng-model=vm.step1.address name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo principale dell\\'evento\\\" required> <span ng-show=formStep1.address.$dirty ng-messages=formStep1.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.type.$dirty && formStep1.type.$invalid}\\\"><label for=formStep1-type>Tipologia</label><select id=formStep1-type ng-init=\\\"vm.step1.type = 0\\\" ng-model=vm.step1.type name=type class=form-control><option ng-selected=\\\"vm.step1.type === 0\\\" value=0>Campionato italiana</option><option ng-selected=\\\"vm.step1.type === 1\\\" value=1>Torneo a gironi</option></select><span ng-show=formStep1.type.$dirty ng-messages=formStep1.type.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.organizer.$dirty && formStep1.organizer.$invalid}\\\"><label for=formStep1-organizer>Organizzatore</label><input id=formStep1-organizer ng-model=vm.step1.organizer name=organizer type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'organizzatore\\\" required> <span ng-show=formStep1.organizer.$dirty ng-messages=formStep1.organizer.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.telephone.$dirty && formStep1.telephone.$invalid}\\\"><label for=formStep1-telephone>Telefono organizzatore</label><input id=formStep1-telephone ng-model=vm.step1.telephone name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore\\\" required> <span ng-show=formStep1.telephone.$dirty ng-messages=formStep1.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.email.$dirty && formStep1.email.$invalid}\\\"><label for=formStep1-email>E-mail organizzatore</label><input id=formStep1-email ng-model=vm.step1.email name=email type=email class=form-control placeholder=\\\"Inserisci l\\'indirizzo e-mail dell\\'organizzatore\\\" required> <span ng-show=formStep1.email.$dirty ng-messages=formStep1.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.dates.$dirty && formStep1.dates.$invalid}\\\"><label for=formStep1-dates>Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=formStep1-dates ng-model=vm.step1.dates model=vm.step1.dates name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><!-- /.input group --> <span ng-show=formStep1.dates.$dirty ng-messages=formStep1.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.formula.$dirty && formStep1.formula.$invalid}\\\"><label for=formStep1-formula>Formula</label><select id=formStep1-formula ng-init=\\\"vm.step1.formula = 0\\\" ng-model=vm.step1.formula name=formula class=form-control placeholder=\\\"Inserisci la formula desiderata\\\"><option ng-selected=\\\"vm.step1.formula === 0\\\" value=0>Anadata e ritorno</option><option ng-selected=\\\"vm.step1.formula === 1\\\" value=1>Solo andata</option></select><span ng-show=formStep1.formula.$dirty ng-messages=formStep1.formula.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><!-- /.col --></div><!-- /.row --><div class=pull-right><input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=2 wizard=vm.wizard title=\\\"Aggiungi squadre\\\"><form id=formStep2 name=formStep2 ng-submit=vm.step2Done()><div class=row><div ng-if=\\\"vm.step1.type == \\'1\\' && !vm.forceManualRounds\\\"><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundType.$dirty && formStep2.roundType.$invalid}\\\"><label for=formStep2-roundType>Inserimento Gironi</label><select id=formStep2-roundType ng-init=\\\"vm.step2.roundType = 0\\\" ng-model=vm.step2.roundType name=roundType class=form-control ng-change=vm.initDefaultTeams()><option value=0>Manuale</option><option value=1>Automatico</option></select><span ng-show=formStep2.roundType.$dirty ng-messages=formStep2.roundType.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-if=\\\"vm.step2.roundType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundNumber.$dirty && formStep2.roundNumber.$invalid}\\\"><label for=formStep2-roundNumber>Numero di gironi</label><input id=formStep2-roundNumber ng-model=team.roundNumber name=roundNumber type=text class=form-control placeholder=\\\"Inserisci il numero di gironi dell\\'evento\\\" required> <span ng-show=formStep2.roundNumber.$dirty ng-messages=formStep2.roundNumber.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=clearfix></div><div class=col-sm-6 ng-repeat=\\\"team in vm.step2.teams\\\"><div class=\\\"panel panel-default\\\"><div class=panel-heading>Squadra {{ $index+1 }} <button tabindex=-1 type=button class=close ng-click=vm.removeTeam($index)><span>&times;</span></button></div><div class=panel-body><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'name\\' + ($index+1)].$dirty && formStep2[\\'name\\' + ($index+1)].$invalid}\\\"><label for=formStep2-name{{$index+1}}>Nome</label><input id=formStep2-name{{$index+1}} ng-model=team.name name=name{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome della squadra\\\" required> <span ng-show=\\\"formStep2[\\'name\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'name\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'desc\\' + ($index+1)].$dirty && formStep2[\\'desc\\' + ($index+1)].$invalid}\\\"><label for=formStep2-desc{{$index+1}}>Descrizione</label><input id=formStep2-desc{{$index+1}} ng-model=team.desc name=desc{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'desc\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'desc\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'captain\\' + ($index+1)].$dirty && formStep2[\\'captain\\' + ($index+1)].$invalid}\\\"><label for=formStep2-captain{{$index+1}}>Capitano</label><input id=formStep2-captain{{$index+1}} ng-model=team.captain name=captain{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome del capitano della squadra\\\" required> <span ng-show=\\\"formStep2[\\'captain\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'captain\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'phone\\' + ($index+1)].$dirty && formStep2[\\'phone\\' + ($index+1)].$invalid}\\\"><label for=formStep2-phone{{$index+1}}>Telefono</label><input id=formStep2-phone{{$index+1}} ng-model=team.phone name=phone{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il numero di telefono della squadra\\\" required> <span ng-show=\\\"formStep2[\\'phone\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'phone\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'time\\' + ($index+1)].$dirty && formStep2[\\'time\\' + ($index+1)].$invalid}\\\"><label for=formStep2-time{{$index+1}}>Orario preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=formStep2-time{{$index+1}} ng-model=team.time name=time{{$index+1}} type=text class=form-control timepicker placeholder=\\\"Inserisci l\\'orario preferito della squadra per le partite\\\" required></div><span ng-show=\\\"formStep2[\\'time\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'time\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'place\\' + ($index+1)].$dirty && formStep2[\\'place\\' + ($index+1)].$invalid}\\\"><label for=formStep2-place{{$index+1}}>Luogo preferito</label><input id=formStep2-place{{$index+1}} ng-model=team.place name=place{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'place\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'place\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div ng-if=\\\"vm.step2.roundType == 0\\\" class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'round\\' + ($index+1)].$dirty && formStep2[\\'round\\' + ($index+1)].$invalid}\\\"><label for=formStep2-round{{$index+1}}>Girone</label><select id=formStep2-round{{$index+1}} ng-init=\\\"team.round = \\'A\\'\\\" ng-model=team.round name=round{{$index+1}} class=form-control ng-options=\\\"roundName as roundName for roundName in vm.roundNames track by roundName\\\" required></select><span ng-show=\\\"formStep2[\\'round\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'round\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></div><div class=clearfix></div><div class=col-md-6><a role=button ng-click=vm.addTeam() class=\\\"btn btn-default btn-block\\\" ng-show=vm.step2.roundType>Aggiungi Squadra</a></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=3 wizard=vm.wizard title=Riepilogo><form id=formStep3 name=formStep3 ng-submit=vm.submitWizard()><div class=row><div class=col-md-6><div class=form-group><label>Nome</label><p class=form-control-static>{{ vm.step1.name }}</p></div><div class=form-group><label>Descrizione</label><p class=form-control-static>{{ vm.step1.desc }}</p></div><div class=form-group><label>Indirizzo</label><p class=form-control-static>{{ vm.step1.address }}</p></div><div class=form-group><label>Tipologia</label><p class=form-control-static>{{ vm.step1.type == \\'1\\' ? \\'Torneo a gironi\\' : \\'Campionato Italiana\\' }}</p></div><div class=form-group><label>Numero di squadre</label><p class=form-control-static>{{ vm.step2.teams.length }}</p></div></div><div class=col-md-6><div class=form-group><label>Organizzatore</label><p class=form-control-static>{{ vm.step1.organizer }}</p></div><div class=form-group><label>Telefono organizzatore</label><p class=form-control-static>{{ vm.step1.telephone }}</p></div><div class=form-group><label>E-mail organizzatore</label><p class=form-control-static>{{ vm.step1.email }}</p></div><div class=form-group><label>Perioto</label><p class=form-control-static>{{ vm.step1.dates }}</p></div><div class=form-group><label>Formula</label><p class=form-control-static>{{ vm.step1.formula == \\'1\\' ? \\'Solo andata\\' : \\'Andata e Ritorno\\' }}</p></div></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Conferma></div></form></wizard-step-box></section></section>\");\n$templateCache.put(\"app/pages/dashboard/dashboard.html\",\"<div class=dashboard>Dashboard page</div>\");\n$templateCache.put(\"app/pages/disciplinary/disciplinary.html\",\"<div class=disciplinary>disciplinary page</div>\");\n$templateCache.put(\"app/pages/events/events.html\",\"<div class=\\\"content events\\\"><div class=row><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.events.length === 0\\\"><div class=box-header><div class=box-title>Eventi</div></div><div class=box-body>Non sono stati trovati eventi. <a ui-sref=main.admin.createEvent>Creane uno ora</a>.</div></div><div class=\\\"box {{ tableFilter.boxClass }}\\\" ng-repeat=\\\"tableFilter in vm.tableFilters\\\" ng-show=\\\"(vm.models.events | filter:tableFilter.eventFilter).length > 0\\\"><div class=box-header><h3 class=box-title>{{ tableFilter.title }}</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.searchFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat-start=\\\"event in vm.models.events | filter:tableFilter.eventFilter | filter:tableFilter.searchFilter\\\" event-show=event></tr><tr ng-repeat-end event-edit=event></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/login/login.html\",\"<div class=\\\"login login-box\\\"><div class=login-logo><img src=/assets/images/logo-title-64.png alt=Frispo></div><!-- /.login-logo --><div class=login-box-body><p class=login-box-msg>Sign in to start your session</p><form id=loginForm name=loginForm ng-submit=vm.login()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.email.$dirty && loginForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=loginForm.email.$dirty ng-messages=loginForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.password.$dirty && loginForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=loginForm.password.$dirty ng-messages=loginForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=row><!-- /.col --><div class=col-xs-12><button ng-disabled=loginForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a ng-click=vm.loginFacebook() class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign in using Facebook</a></div><!-- /.social-auth-links --> <a href=#>I forgot my password</a><br><a ui-sref=main.register class=text-center>Register a new membership</a></div><!-- /.login-box-body --></div>\");\n$templateCache.put(\"app/pages/main/main.html\",\"<div class=animate ui-view></div>\");\n$templateCache.put(\"app/pages/news/news.html\",\"<div class=news>news page</div>\");\n$templateCache.put(\"app/pages/register/register.html\",\"<div class=register-box><div class=register-logo><img src=/assets/images/logo-title-64.png alt=Frispo></div><div class=register-box-body><p class=login-box-msg>Register a new membership</p><form id=registerForm name=registerForm ng-submit=vm.register()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.email.$dirty && registerForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=registerForm.email.$dirty ng-messages=registerForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.password.$dirty && registerForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required minlength=8> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=registerForm.password.$dirty ng-messages=registerForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=minlength>La password deve essere lunga almeno 8 caratteri</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.retypePassword.$dirty && registerForm.retypePassword.$invalid}\\\"><input ng-model=vm.user.retypePassword name=retypePassword type=password class=form-control placeholder=\\\"Retype password\\\" required compare-to=vm.user.password> <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span> <span ng-show=registerForm.retypePassword.$dirty ng-messages=registerForm.retypePassword.$error class=help-block role=alert><span ng-message=compareTo>Le due password non coincidono</span></span></div><!-- <div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.termsAgreement.$dirty && registerForm.termsAgreement.$invalid}\\\">\\n        <div class=\\\"checkbox icheck\\\">\\n          <label for=\\\"termsAgreement\\\">\\n            I agree to the <a href=\\\"#\\\">terms</a>\\n          </label>\\n          <div class=\\\"icheckbox_square-blue pull-right\\\" aria-checked=\\\"false\\\" aria-disabled=\\\"false\\\">\\n            <input id=\\\"termsAgreement\\\" ng-model=\\\"vm.user.termsAgreement\\\" name=\\\"termsAgreement\\\" type=\\\"checkbox\\\" required>\\n          </div>\\n        </div>\\n        <span ng-show=\\\"registerForm.termsAgreement.$dirty\\\" ng-messages=\\\"registerForm.termsAgreement.$error\\\" class=\\\"help-block\\\" role=\\\"alert\\\">\\n          <span ng-message=\\\"required\\\">E\\' obbligatorio accettare i termini</span>\\n        </span>\\n      </div> --><div class=row><!-- /.col --><div class=col-xs-12><button ng-disabled=registerForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Register</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a href=# class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign up using Facebook</a></div><a ui-sref=main.login class=text-center>I already have a membership</a></div><!-- /.form-box --></div><!-- /.register-box -->\");\n$templateCache.put(\"app/pages/scoreboard/scoreboard.html\",\"<div class=calendar><section class=content-header><h1>Classifica</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 0\\\"><table class=table><tr><th>Squadra</th><th>Vittorie</th><th>Sconfitte</th><th>Pareggi</th><th>Goal fatti</th><th>Goal subiti</th><th>Falli</th><th>Punti</th><th>Partite giocate</th></tr><tr ng-repeat=\\\"score in vm.models.currentEvent.scoreboard\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankNumberPlayed }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 1\\\"><div ng-repeat=\\\"scoreboard in vm.models.currentEvent.scoreboard\\\"><h4>Girone {{ scoreboard.tournament[0].rankNameGroups }}</h4><table class=table><tr><th>Squadra</th><th>Vittorie</th><th>Sconfitte</th><th>Pareggi</th><th>Goal fatti</th><th>Goal subiti</th><th>Falli</th><th>Punti</th><th>Partite giocate</th></tr><tr ng-repeat=\\\"score in scoreboard.tournament\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankNumberPlayed }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/scorers/scorers.html\",\"<div class=calendar><section class=content-header><h1>Classifica marcatori</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 0\\\"><table class=table><tr><th>Squadra</th><th>Vittorie</th><th>Sconfitte</th><th>Pareggi</th><th>Goal fatti</th><th>Goal subiti</th><th>Falli</th><th>Punti</th><th>Partite giocate</th></tr><tr ng-repeat=\\\"score in vm.models.currentEvent.scoreboard\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankNumberPlayed }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 1\\\"><div ng-repeat=\\\"scoreboard in vm.models.currentEvent.scoreboard\\\"><h4>Girone {{ scoreboard.tournament[0].rankNameGroups }}</h4><table class=table><tr><th>Squadra</th><th>Vittorie</th><th>Sconfitte</th><th>Pareggi</th><th>Goal fatti</th><th>Goal subiti</th><th>Falli</th><th>Punti</th><th>Partite giocate</th></tr><tr ng-repeat=\\\"score in scoreboard.tournament\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankNumberPlayed }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/teams/teams.html\",\"<div class=teams><section class=content-header><h1>Squadre <small>partecipanti</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewTeam()>Crea nuova squadra</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.teams><table class=table><tr><th>Nome</th><th>Capitano</th><th>Telefono</th><th>Orario Preferito</th><th>Luogo Preferito</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th></th></tr><tr ng-repeat-start=\\\"team in vm.models.currentEvent.teams\\\" team-show=team></tr><tr ng-repeat-end team-edit=team></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/components/wizard/wizardProgress/wizardProgress.html\",\"<div class=wizard-progress><i ng-repeat=\\\"i in wizardProgress.range(wizardProgress.wizard.totalSteps) track by $index\\\" class=fa ng-class=\\\"{\\n      \\'fa-circle\\': $index+1 === wizardProgress.wizard.currentStep,\\n      \\'fa-circle-thin\\': $index+1 !== wizardProgress.wizard.currentStep\\n    }\\\">&nbsp;</i></div>\");\n$templateCache.put(\"app/components/wizard/wizardStepBox/wizardStepBox.html\",\"<div class=\\\"wizard-step-box box\\\" ng-class=\\\"{\\'box-success\\': wizardStepBox.active, \\'box-default\\': !wizardStepBox.active}\\\"><div class=\\\"box-header with-border\\\"><h3 class=box-title>{{ wizardStepBox.title }}</h3><div class=\\\"box-tools pull-right hidden\\\"><button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><!-- /.box-header --><div class=box-body><ng-transclude></ng-transclude></div><!-- /.box-body --><div ng-show=\\\"wizardStepBox.active && wizardStepBox.wizard.loading\\\" class=overlay><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><!-- /.box -->\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/advancedEdit.html\",\"<div class=modal-header><a role=button class=close ng-click=matchAdvEdit.cancel()><span aria-hidden=true>×</span></a><h3 class=text-center>{{matchAdvEdit.match.matcTeamA}} vs {{matchAdvEdit.match.matcTeamB}}</h3></div><div class=\\\"modal-body match-advanced-edit\\\"><form class=\\\"match-adv-edit-form relative\\\" name=matchAdvEditForm ng-submit=matchAdvEdit.submit()><div class=row><div class=\\\"col-xs-6 input-small-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.scoreA.$dirty && matchAdvEditForm.scoreA.$invalid}\\\"><label for=matchAdvEditForm-scoreA>Goal {{matchAdvEdit.match.matcTeamA}}</label><select id=matchAdvEditForm-scoreA ng-model=matchAdvEdit.form.scoreA ng-init=\\\"matchAdvEdit.form.scoreA = matchAdvEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" required></select><span ng-show=matchAdvEditForm.scoreA.$dirty ng-messages=matchAdvEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.scoreB.$dirty && matchAdvEditForm.scoreB.$invalid}\\\"><label for=matchAdvEditForm-scoreB>Goal {{matchAdvEdit.match.matcTeamB}}</label><select id=matchAdvEditForm-scoreB ng-model=matchAdvEdit.form.scoreB ng-init=\\\"matchAdvEdit.form.scoreB = matchAdvEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" required></select><span ng-show=matchAdvEditForm.scoreB.$dirty ng-messages=matchAdvEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.shootoutA.$dirty && matchAdvEditForm.shootoutA.$invalid}\\\"><label for=matchAdvEditForm-shootoutA>Rigori {{matchAdvEdit.match.matcTeamA}}</label><select id=matchAdvEditForm-shootoutA ng-model=matchAdvEdit.form.shootoutA ng-init=\\\"matchAdvEdit.form.shootoutA = matchAdvEdit.match.matcShootoutTeamA\\\" name=shootoutA class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" required></select><span ng-show=matchAdvEditForm.shootoutA.$dirty ng-messages=matchAdvEditForm.shootoutA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.shootoutB.$dirty && matchAdvEditForm.shootoutB.$invalid}\\\"><label for=matchAdvEditForm-shootoutB>Rigori {{matchAdvEdit.match.matcTeamB}}</label><select id=matchAdvEditForm-shootoutB ng-model=matchAdvEdit.form.shootoutB ng-init=\\\"matchAdvEdit.form.shootoutB = matchAdvEdit.match.matcShootoutTeamB\\\" name=shootoutB class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" required></select><span ng-show=matchAdvEditForm.shootoutB.$dirty ng-messages=matchAdvEditForm.shootoutB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></form><div class=row><div class=col-sm-6><div class=\\\"panel panel-primary\\\"><div class=panel-heading>Marcatori {{matchAdvEdit.match.matcTeamA}}</div><div class=panel-body><form id=createMarkerAForm class=create-marker-A name=createMarkerAForm ng-submit=matchAdvEdit.createMarkerA()><div class=row><div class=\\\"col-sm-7 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': createMarkerAForm.name.$dirty && createMarkerAForm.name.$invalid}\\\"><label for=createMarkerAForm-name>Marcatore</label><input type=text id=createMarkerAForm-name ng-model=matchAdvEdit.createMarkerAForm.name name=name class=form-control placeholder=\\\"Cognome Nome\\\" required> <span ng-show=createMarkerAForm.name.$dirty ng-messages=createMarkerAForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-2 small-padding-right small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': createMarkerAForm.goals.$dirty && createMarkerAForm.goals.$invalid}\\\"><label for=createMarkerAForm-goals>Goals</label><select id=createMarkerAForm-goals ng-model=matchAdvEdit.createMarkerAForm.goals ng-init=\\\"matchAdvEdit.createMarkerAForm.goals = 0\\\" name=goals class=\\\"form-control no-padding-right\\\" ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" required></select></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><label>&nbsp;</label><input class=\\\"btn btn-primary form-control\\\" type=submit value=Aggiungi></div></div></form></div></div></div><div class=col-sm-6><div class=\\\"panel panel-primary\\\"><div class=panel-heading>Marcatori {{matchAdvEdit.match.matcTeamB}}</div><div class=panel-body><form id=createMarkerBForm class=create-marker-B name=createMarkerBForm ng-submit=matchAdvEdit.createMarkerB()><div class=row><div class=\\\"col-sm-7 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': createMarkerBForm.name.$dirty && createMarkerBForm.name.$invalid}\\\"><label for=createMarkerBForm-name>Marcatore</label><input type=text id=createMarkerBForm-name ng-model=matchAdvEdit.createMarkerBForm.name name=name class=form-control placeholder=\\\"Cognome Nome\\\" required> <span ng-show=createMarkerBForm.name.$dirty ng-messages=createMarkerBForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-2 small-padding-right small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': createMarkerBForm.goals.$dirty && createMarkerBForm.goals.$invalid}\\\"><label for=createMarkerBForm-goals>Goals</label><select id=createMarkerBForm-goals ng-model=matchAdvEdit.createMarkerBForm.goals ng-init=\\\"matchAdvEdit.createMarkerBForm.goals = 0\\\" name=goals class=\\\"form-control no-padding-right\\\" ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" required></select></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><label>&nbsp;</label><input class=\\\"btn btn-primary form-control\\\" type=submit value=Aggiungi></div></div></form></div></div></div></div></div><div class=modal-footer><a role=button class=\\\"btn btn-default pull-left\\\" ng-click=matchAdvEdit.cancel()>Annulla</a> <a role=button class=\\\"btn btn-success\\\" ng-click=matchAdvEdit.ok()>Chiudi</a></div>\");\n$templateCache.put(\"app/pages/calendar/create/create.html\",\"<form id=matchCreateForm class=\\\"match-create-form relative\\\" name=matchCreateForm ng-submit=matchCreate.ok()><div class=modal-header><a role=button class=close ng-click=matchCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova partita</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamA.$dirty && matchCreateForm.teamA.$invalid}\\\"><label for=matchCreateForm-teamA>Squadra Casa</label><select id=matchCreateForm-teamA ng-model=matchCreate.form.teamA name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamA.$dirty ng-messages=matchCreateForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamB.$dirty && matchCreateForm.teamB.$invalid}\\\"><label for=matchCreateForm-teamB>Squadra Ospite</label><select id=matchCreateForm-teamB ng-model=matchCreate.form.teamB name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamB.$dirty ng-messages=matchCreateForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreA.$dirty && matchCreateForm.scoreA.$invalid}\\\"><label for=matchCreateForm-scoreA>Goal Casa</label><select id=matchCreateForm-scoreA ng-model=matchCreate.form.scoreA name=scoreA class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreA.$dirty ng-messages=matchCreateForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreB.$dirty && matchCreateForm.scoreB.$invalid}\\\"><label for=matchCreateForm-scoreB>Goal Ospiti</label><select id=matchCreateForm-scoreB ng-model=matchCreate.form.scoreB name=scoreB class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreB.$dirty ng-messages=matchCreateForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.date.$dirty && matchCreateForm.date.$invalid}\\\"><label for=matchCreateForm-date>Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=matchCreateForm-date ng-model=matchCreate.form.date model=matchCreate.form.date name=date type=text class=form-control datepicker></div></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.time.$dirty && matchCreateForm.time.$invalid}\\\"><label for=matchCreateForm-time>Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=matchCreateForm-time ng-model=matchCreate.form.time name=time type=text class=form-control timepicker></div></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.address.$dirty && matchCreateForm.address.$invalid}\\\"><label for=matchCreateForm-address>Indirizzo</label><input id=matchCreateForm-address ng-model=matchCreate.form.address name=address type=text class=form-control></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.played.$dirty && matchCreateForm.played.$invalid}\\\"><label for=matchCreateForm-played>Giocata</label><select id=matchCreateForm-played ng-model=matchCreate.form.played name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchCreateForm.played.$dirty ng-messages=matchCreateForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=matchCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea partita\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/createDay/create.html\",\"<form id=dayCreateForm class=\\\"match-create-form relative\\\" name=dayCreateForm ng-submit=dayCreate.ok()><div class=modal-header><a role=button class=close ng-click=dayCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova giornata</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.name.$dirty && dayCreateForm.name.$invalid}\\\"><label for=dayCreateForm-name>Nome giornata</label><input id=dayCreateForm-name ng-model=dayCreate.form.name name=name type=text class=form-control required> <span ng-show=dayCreateForm.name.$dirty ng-messages=dayCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.desc.$dirty && dayCreateForm.desc.$invalid}\\\"><label for=dayCreateForm-desc>Descrizione</label><input id=dayCreateForm-desc ng-model=dayCreate.form.desc name=desc type=text class=form-control> <span ng-show=dayCreateForm.desc.$dirty ng-messages=dayCreateForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=dayCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=dayCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea giornata\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=matchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=matchDestroy.ok()>Elimina partita</a></div>\");\n$templateCache.put(\"app/pages/calendar/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=match-edit-form-{{matchEdit.match.matcId}} class=\\\"accordion-body collapse match-edit-form-{{matchEdit.match.matcId}}\\\"><form class=\\\"match-edit-form relative\\\" name=matchEditForm ng-submit=matchEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamA.$dirty && matchEditForm.teamA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamA>Modifica Squadra Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamA ng-model=matchEdit.form.teamA ng-init=\\\"matchEdit.form.teamA = { teamId: matchEdit.match.matcTeamIdA }\\\" name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamA.$dirty ng-messages=matchEditForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamB.$dirty && matchEditForm.teamB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamB>Modifica Squadra Ospite</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamB ng-model=matchEdit.form.teamB ng-init=\\\"matchEdit.form.teamB = { teamId: matchEdit.match.matcTeamIdB }\\\" name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamB.$dirty ng-messages=matchEditForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreA.$dirty && matchEditForm.scoreA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreA>Modifica Goal Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreA ng-model=matchEdit.form.scoreA ng-init=\\\"matchEdit.form.scoreA = matchEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreA.$dirty ng-messages=matchEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreB.$dirty && matchEditForm.scoreB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreB>Modifica Goal Ospiti</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreB ng-model=matchEdit.form.scoreB ng-init=\\\"matchEdit.form.scoreB = matchEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreB.$dirty ng-messages=matchEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.date.$dirty && matchEditForm.date.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-date>Modifica Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=matchEditForm{{matchEdit.match.matcId}}-date ng-model=matchEdit.form.date model=matchEdit.form.date ng-init=\\\"matchEdit.form.date = matchEdit.match.matcDateMatch\\\" name=date type=text class=form-control datepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.time.$dirty && matchEditForm.time.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-time>Modifica Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=matchEditForm{{matchEdit.match.matcId}}-time ng-model=matchEdit.form.time ng-init=\\\"matchEdit.form.time = matchEdit.match.matcTime\\\" name=time type=text class=form-control timepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.address.$dirty && matchEditForm.address.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-address>Modifica Indirizzo</label><input id=matchEditForm{{matchEdit.match.matcId}}-address ng-model=matchEdit.form.address ng-init=\\\"matchEdit.form.address = matchEdit.match.matcAddress\\\" name=address type=text class=form-control></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.played.$dirty && matchEditForm.played.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-played>Modifica Giocata</label><select id=matchEditForm{{matchEdit.match.matcId}}-played ng-model=matchEdit.form.played ng-init=\\\"matchEdit.form.played = {value: matchEdit.match.matcFlgPlay}\\\" name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchEditForm.played.$dirty ng-messages=matchEditForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=matchEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=matchEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/calendar/show/show.html\",\"<tr><td>{{ matchShow.match.matcTeamA }}</td><td>{{ matchShow.match.matcTeamB }}</td><td>{{ matchShow.match.matcScoreTeamA }}</td><td>{{ matchShow.match.matcScoreTeamB }}</td><td>{{ matchShow.match.matcDateMatchPretty }}</td><td>{{ matchShow.match.matcTime }}</td><td>{{ matchShow.match.matcAddress }}</td><td ng-if=\\\"matchShow.models.currentEvent.evenType == 1\\\">{{ matchShow.match.matcNameGroups }}</td><td>{{ matchShow.match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': matchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default\\\" ng-click=matchShow.advancedEdit() ng-show=\\\"matchShow.match.matcTeamIdA !== 0 && matchShow.match.matcTeamIdB !== 0\\\"><i class=\\\"fa fa-futbol-o\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.match-edit-form-{{matchShow.match.matcId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=matchShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/events/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=eventDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Se elimini questo evento, verranno eliminati anche tutti dati relativi alle squadre e alle partite associate.<br>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventDestroy.ok()>Elimina evento</a></div>\");\n$templateCache.put(\"app/pages/events/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=event-edit-form-{{eventEdit.event.evenId}} class=\\\"accordion-body collapse event-edit-form-{{eventEdit.event.evenId}}\\\"><form class=\\\"event-edit-form relative\\\" name=eventEditForm ng-submit=eventEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.name.$dirty && eventEditForm.name.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-name>Modifica Nome</label><input id=eventEditForm{{eventEdit.event.evenId}}-name ng-model=eventEdit.form.name ng-init=\\\"eventEdit.form.name = eventEdit.event.evenName\\\" name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=eventEditForm.name.$dirty ng-messages=eventEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.desc.$dirty && eventEditForm.desc.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-desc>Modifica Descrizione</label><input id=eventEditForm{{eventEdit.event.evenId}}-desc ng-model=eventEdit.form.desc ng-init=\\\"eventEdit.form.desc = eventEdit.event.evenDescription\\\" name=desc type=text class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\" required> <span ng-show=eventEditForm.desc.$dirty ng-messages=eventEditForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.currentDay.$dirty && eventEditForm.currentDay.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-currentDay>Modifica Giornata Corrente</label><select id=eventEditForm{{eventEdit.event.evenId}}-currentDay ng-model=eventEdit.form.currentDay ng-init=\\\"eventEdit.form.currentDay = eventEdit.event.evenCurrentDay\\\" name=currentDay class=form-control ng-options=\\\"day as day.matcDayName for day in eventEdit.event.matchDays track by day.matcDayId\\\" required></select><span ng-show=eventEditForm.currentDay.$dirty ng-messages=eventEditForm.currentDay.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.dates.$dirty && eventEditForm.dates.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-dates>Modifica Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=eventEditForm{{eventEdit.event.evenId}}-dates ng-model=eventEdit.form.dates model=eventEdit.form.dates ng-init=\\\"eventEdit.form.dates = eventEdit.event.dates\\\" name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><span ng-show=eventEditForm.dates.$dirty ng-messages=eventEditForm.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.address.$dirty && eventEditForm.address.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-address>Modifica Indirizzo</label><input id=eventEditForm{{eventEdit.event.evenId}}-address ng-model=eventEdit.form.address ng-init=\\\"eventEdit.form.address = eventEdit.event.evenAddress\\\" name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo dell\\'evento\\\" required> <span ng-show=eventEditForm.address.$dirty ng-messages=eventEditForm.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.region.$dirty && eventEditForm.region.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-region>Modifica Regione</label><select id=eventEditForm{{eventEdit.event.evenId}}-region ng-model=eventEdit.form.region ng-init=\\\"eventEdit.form.region = eventEdit.event.regions\\\" name=region class=form-control ng-options=\\\"region as region.regiName for region in eventEdit.models.regions track by region.regiId\\\" required></select><span ng-show=eventEditForm.region.$dirty ng-messages=eventEditForm.region.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.telephone.$dirty && eventEditForm.telephone.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-telephone>Modifica Telefono Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-telephone ng-model=eventEdit.form.telephone ng-init=\\\"eventEdit.form.telephone = eventEdit.event.evenMobilePhone\\\" name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.telephone.$dirty ng-messages=eventEditForm.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.email.$dirty && eventEditForm.email.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-email>Modifica E-mail Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-email ng-model=eventEdit.form.email ng-init=\\\"eventEdit.form.email = eventEdit.event.evenEmail\\\" name=email type=text class=form-control placeholder=\\\"Inserisci l\\'e-mail dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.email.$dirty ng-messages=eventEditForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-left><a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.recreateCalendar()>Ricrea calendario</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.publish() ng-show=\\\"eventEdit.event.evenStatoEvento != 1\\\">Pubblica evento</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.unpublish() ng-show=\\\"eventEdit.event.evenStatoEvento == 1\\\">Imposta come offline</a></div><div class=pull-right><div><a role=button class=\\\"btn btn-default\\\" ng-click=eventEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div></div><div ng-show=eventEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/events/edit/recreateCalendar.html\",\"<div class=modal-header><a role=button class=close ng-click=eventRecreateCalendar.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Tutte le partite e le giornate saranno ricreate. Quelle presenti ora verranno eliminate.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventRecreateCalendar.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventRecreateCalendar.ok()>Ricrea calendario dell\\'evento</a></div>\");\n$templateCache.put(\"app/pages/events/show/show.html\",\"<tr><td>{{ eventShow.event.evenName }}</td><td>{{ eventShow.event.evenTypePretty }}</td><td>{{ eventShow.event.evenFormulaPretty }}</td><td>{{ eventShow.event.regions.regiName }}</td><td>{{ eventShow.event.evenDayActiveName }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': eventShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.event-edit-form-{{eventShow.event.evenId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=eventShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/create/create.html\",\"<form id=teamCreateForm class=\\\"team-create-form relative\\\" name=teamCreateForm ng-submit=teamCreate.ok()><div class=modal-header><a role=button class=close ng-click=teamCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova squadra</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.name.$dirty && teamCreateForm.name.$invalid}\\\"><label for=teamCreateForm-name>Nome</label><input id=teamCreateForm-name ng-model=teamCreate.form.name name=name type=text class=form-control required> <span ng-show=teamCreateForm.name.$dirty ng-messages=teamCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.captain.$dirty && teamCreateForm.captain.$invalid}\\\"><label for=teamCreateForm-captain>Capitano</label><input id=teamCreateForm-captain ng-model=teamCreate.form.captain name=captain type=text class=form-control required> <span ng-show=teamCreateForm.captain.$dirty ng-messages=teamCreateForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.phone.$dirty && teamCreateForm.phone.$invalid}\\\"><label for=teamCreateForm-phone>Telefono</label><input id=teamCreateForm-phone ng-model=teamCreate.form.phone name=phone type=text class=form-control required> <span ng-show=teamCreateForm.phone.$dirty ng-messages=teamCreateForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.time.$dirty && teamCreateForm.time.$invalid}\\\"><label for=teamCreateForm-time>Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamCreateForm-time ng-model=teamCreate.form.time name=time type=text class=form-control timepicker required></div><span ng-show=teamCreateForm.time.$dirty ng-messages=teamCreateForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.place.$dirty && teamCreateForm.place.$invalid}\\\"><label for=teamCreateForm-place>Luogo Preferito</label><input id=teamCreateForm-place ng-model=teamCreate.form.place name=place type=text class=form-control required> <span ng-show=teamCreateForm.place.$dirty ng-messages=teamCreateForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-show=\\\"teamCreate.models.currentEvent.evenType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.round.$dirty && teamCreateForm.round.$invalid}\\\"><label for=teamCreateForm-round>Girone</label><select id=teamCreateForm-round ng-init=\\\"teamCreate.form.round = \\'A\\'\\\" ng-model=teamCreate.form.round name=round class=form-control ng-options=\\\"roundName as roundName for roundName in teamCreate.roundNames track by roundName\\\" required></select><span ng-show=teamCreateForm.round.$dirty ng-messages=teamCreateForm.round.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=teamCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/teams/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=teamDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=teamDestroy.ok()>Elimina squadra</a></div>\");\n$templateCache.put(\"app/pages/teams/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=team-edit-form-{{teamEdit.team.teamId}} class=\\\"accordion-body collapse team-edit-form-{{teamEdit.team.teamId}}\\\"><form class=\\\"team-edit-form relative\\\" name=teamEditForm ng-submit=teamEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.name.$dirty && teamEditForm.name.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-name>Modifica Nome</label><input id=teamEditForm{{teamEdit.team.teamId}}-name ng-model=teamEdit.form.name ng-init=\\\"teamEdit.form.name = teamEdit.team.teamName\\\" name=name type=text class=form-control required> <span ng-show=teamEditForm.name.$dirty ng-messages=teamEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.captain.$dirty && teamEditForm.captain.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-captain>Modifica Capitano</label><input id=teamEditForm{{teamEdit.team.teamId}}-captain ng-model=teamEdit.form.captain ng-init=\\\"teamEdit.form.captain = teamEdit.team.teamCaptain\\\" name=captain type=text class=form-control required> <span ng-show=teamEditForm.captain.$dirty ng-messages=teamEditForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.phone.$dirty && teamEditForm.phone.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-phone>Modifica Telefono</label><input id=teamEditForm{{teamEdit.team.teamId}}-phone ng-model=teamEdit.form.phone ng-init=\\\"teamEdit.form.phone = teamEdit.team.teamMobilePhone\\\" name=phone type=text class=form-control required> <span ng-show=teamEditForm.phone.$dirty ng-messages=teamEditForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.time.$dirty && teamEditForm.time.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-time>Modifica Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamEditForm{{teamEdit.team.teamId}}-time ng-model=teamEdit.form.time ng-init=\\\"teamEdit.form.time = teamEdit.team.teamTime\\\" name=time type=text class=form-control timepicker required></div><span ng-show=teamEditForm.time.$dirty ng-messages=teamEditForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.place.$dirty && teamEditForm.place.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-place>Modifica Luogo Preferito</label><input id=teamEditForm{{teamEdit.team.teamId}}-place ng-model=teamEdit.form.place ng-init=\\\"teamEdit.form.place = teamEdit.team.teamPlace\\\" name=place type=text class=form-control required> <span ng-show=teamEditForm.place.$dirty ng-messages=teamEditForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=teamEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=teamEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/show/show.html\",\"<tr><td>{{ teamShow.team.teamName }}</td><td>{{ teamShow.team.teamCaptain }}</td><td>{{ teamShow.team.teamMobilePhone }}</td><td>{{ teamShow.team.teamTime }}</td><td>{{ teamShow.team.teamPlace }}</td><td ng-if=\\\"teamShow.models.currentEvent.evenType == 1\\\">{{ teamShow.team.teamGroups }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': teamShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.team-edit-form-{{teamShow.team.teamId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=teamShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");}]);"],"sourceRoot":"/source/"}