{"version":3,"sources":["scripts/app.js"],"names":["angular","module","cardsBox","CardsBoxController","utils","$q","matches","$scope","teams","vm","this","cardTypes","disqualificationDays","scores","setLoading","res","loading","resolve","unsetLoading","createCard","form","then","form2Card","cardData","matchId","cardsKey","resetForm","destroyCard","card","destroyMatchCard","cardId","resetFormModel","teamId","goals","playId","resetFormFields","$setPristine","$setUntouched","typeaheadName","val","arguments","length","isString","name","isObject","populateForm","typeaheadSurname","surname","obj","isNumber","listPlayers","autocomplete","isArray","forEach","el","push","playFirstname","playSurname","playTeamId","$inject","directive","restrict","templateUrl","controller","controllerAs","bindToController","replace","scope","cards","teamName","scorersBox","ScorersBoxController","splice","createScorer","form2Scorer","scorerData","scorersKey","destroyScorer","scorer","scorers","teamShow","TeamShowController","$uibModal","models","destroy","open","windowClass","result","team","TeamShowLink","attrs","hover","$apply","showControls","link","teamEdit","TeamEditController","submit","form2Team","teamData","update","TeamEditLink","cancel","find","collapse","TeamDestroyController","$uibModalInstance","ok","close","dismiss","TeamCreateController","roundNames","alphabetChars","scorerShow","ScorerShowController","ScorerShowLink","scorerEdit","ScorerEditController","events","createNewScorerMatch","isDefined","form2ScorerMatch","createScorerMatch","ScorerEditLink","scorerMatchShow","ScorerMatchShowController","submitGoal","updateScorerMatch","currentEvent","evenId","scorerMatch","matcId","scor_play_id","scorerMatchPlayerId","scor_goal","goal","showScorers","destroyScorerMatch","ScorerMatchShowLink","ScorerMatchDestroyController","pressShow","PressShowController","press","PressShowLink","PressDestroyController","PressCreateController","copy","multiSelectTranslation","istevenMultiSelectTranslation","selectFields","key","options","id","playerShow","PlayerShowController","destroyPlayer","player","PlayerShowLink","playerEdit","PlayerEditController","form2Player","playerData","updatePlayer","PlayerEditLink","MatchDestroyController","PlayerCreateController","managerMatchShow","ManagerMatchShowController","ManagerMatchShowLink","match","managerMatchEdit","ManagerMatchEditController","form2Match","matchData","matcDayId","ManagerMatchEditLink","invitationShow","InvitationShowController","invitations","invitation","listSent","InvitationShowLink","InvitationDestroyController","InvitationCreateController","eventShow","EventShowController","event","EventShowLink","hideControls","EventRecreateCalendarController","eventEdit","EventEditController","pointsOptions","form2Event","eventData","publish","even_stato_evento","unpublish","recreateCalendar","createCalendar","show","EventEditLink","on","listRegions","$watch","newVal","oldVal","currentDay","evenCurrentDay","EventDestroyController","cardShow","CardShowController","CardShowLink","config","cardEdit","CardEditController","CardEditLink","cardMatchShow","form2CardMatch","updateEventCard","cardMatch","cardMatchPlayerId","cardMatchKey","destroyEventCard","CardMatchDestroyController","matchShow","MatchShowController","advancedEdit","size","MatchShowLink","matchEdit","MatchEditController","MatchEditLink","DayCreateController","MatchCreateController","MatchAdvancedEditController","teamA","matcTeamIdA","teamB","matcTeamIdB","played","value","matcFlgPlay","createAutocompleteObj","players","autocompleteA","autocompleteB","wizardStepBox","WizardStepBoxController","WizardStepBoxLink","step","wizard","currentStep","active","first","addClass","hide","element","AdminLTE","boxWidget","title","transclude","wizardProgress","WizardProgressController","range","n","Array","TeamsController","updateCurrentEvent","i","list","createNewTeam","create","ScorersController","ScoreboardController","showScoreboard","RegisterController","users","$state","onLoggedOut","user","register","onLoggedIn","go","ProfileController","userTypes","num","userSubscriptions","updateForm","type","currentUser","subscription","info","PressController","createNewPress","form2Press","PlayersController","updateTeam","currentTeam","createNewPlayer","createPlayer","ManagerMatchesController","managedEvents","updateMatchDay","matchDays","listManaged","ManagerEventsController","LoginController","ezfb","login","loginFacebook","InvitationsController","createNewInvitation","form2Invitation","EventsController","tableFilters","eventFilter","evenStatoEvento","boxClass","acceptInvitation","accept","listReceived","declineInvitation","decline","DisciplinaryController","eventId","all","listYellows","listDiffides","listSqualifications","cardConfigs","header","emptyMessage","fields","controls","edit","delete","editDetail","deleteDetail","detailFields","daySqualifications","squalificationStatus","note","CreateEventController","Wizard","resPipe","toastr","$log","totalSteps","startFromStep","forceManualRounds","initDefaultTeams","step2","addTeam","roundType","round","removeTeam","index","error","step1Done","step1","next","submitStep1","step2Done","submitStep2","form2Teams","addGroup","step3Done","submitWizard","submitStep3","CalendarController","createNewMatch","createNewDay","form2Day","createDay","AccessController","userToken","wizardTextProgressFilter","filter","factory","defaults","merge","prev","str2Date","str","split","date","trim","date2Str","dateStart","dateEnd","str2Time","selectAll","selectNone","reset","search","nothingSelected","uiState","timepicker","timepickerLink","clockpicker","autoclose","showOnHover","linkFunc","visible","target","removeClass","showAnimate","updateVisibility","$filter","longTermMemory","parseResponse","status_code","data","reject","unwrapArray","camelize","newRes","v","k","injectUserDefaults","displayName","email","updateCurrentUser","updateSentInvitations","sentInvitations","updateReceivedInvitations","receivedInvitations","updateMergeCurrentUser","permissions","updatePreferences","preferences","mockAnonymousUser","accessToken","uuid","memorizeCurrentUser","memorize","injectEventsDefaults","evenFormula","evenFormulaPretty","evenType","evenTypePretty","dates","evenDateStart","evenDateEnd","isUndefined","evenDayActive","evenName","regions","regiName","evenCode","evenSeason","join","sort","a","b","matcProg","injectInvitationsDefaults","status","statusPretty","dateInvitationPretty","dateInvitation","updateEvents","updateManagedEvents","removeEvent","memorizeEvents","updateRegions","memorizeRegions","currentEventMerged","memorizeCurrentEvent","updateMatches","updateMatch","updateMatchScorers","injectMatchDefaults","matcDateMatch","matcDateMatchPretty","matchCardsTeamA","injectCardsDefaults","injectPressDefaults","pressStato","pressStatoPretty","pressDate","pressDatePretty","injectEventCardsDefaults","matcRedCards","matcYellowCards","flgCards","flgCardsPretty","typeSqualifications","typeSqualificationsPretty","insertMatchDay","updateTeams","updateScoreboard","scoreboard","updateScorers","updateYellows","yellows","updateDiffides","diffides","updateSqualifications","squalifications","updatePress","pressId","updatePlayers","insertPlayer","insertScorer","curMatch","insertCard","removeScorer","playerId","j","removeEventCard","curPlayer","removePress","presId","removeScorerMatch","curScorer","scorPlayId","matcScorers","removeMatchCard","removeMatch","log","debugger","allowedKeys","indexOf","localStorage","toJson","remember","fromJson","e","forget","oblivion","clear","frispoSidebar","$timeout","SidebarController","state","manageMenuEntries","SidebarLink","window","trigger","frispoHeader","HeaderController","HeaderLink","frispoFooter","FooterController","FooterLink","$http","provisioningApiUrl","eventsApiUrl","teamsApiUrl","pressApiUrl","matchesApiUrl","cardsApiUrl","scorersApiUrl","rankingApiUrl","authorization","anonymousToken","userApiUrl","cache","helpers","cacheOrHttp","method","fullUrl","headers","keep","toUpperCase","url","promise","err","response","provisioningApiCall","Authorization","eventsApiCall","teamsApiCall","pressApiCall","matchesApiCall","cardsApiCall","scorersApiCall","rankingApiCall","userApiCall","expect200","notification","msg","success","unwrapData","frispoApi","userData","password","facebookData","facebook_token","authResponse","logout","listSentInvitations","listReceivedInvitations","createInvitation","invitationData","updateInvitation","listEvents","listManagedEvents","createEvent","updateEvent","destroyEvent","showEvent","showEventScoreboard","showTournamentScoreboard","scorerMatchData","listPress","pressData","createPress","destroyPress","showPress","listTeams","createTeam","destroyTeam","showTeam","addGroupTeams","teamsData","showPreferences","showUser","updateUser","createMatchesCalendar","listMatches","day","showMatch","listMatchScorers","listYellowCards","updateCard","createMatch","matchDayId","dayData","destroyMatch","errorManager","getErrorString","full_messages","error_description","errors","myErr","datepicker","datepickerLink","watchInput","drp","elementChanged","daterangepicker","autoUpdateInput","locale","format","separator","ev","picker","model","startDate","endDate","singleDatePicker","compareTo","compareToLink","ngModel","$validators","modelvalue","otherModelValue","$validate","require","canDirective","watcher","shown","negative","permission","toShow","permName","can","slice","substr","$on","bootstrapMultiselect","bootstrapMultiselectLink","multiselect","terminal","infoCalls","current","loggedIn","setAnonymousUser","bkp","unsetAnonymousUser","checkFacebookLogin","getLoginStatus","configureFacebookCallbacks","Event","subscribe","formData","extra","teamTime","time","captain","team_captain","team_time","team_name","phone","team_mobile_phone","place","team_place","team_groups","desc","team_description","player_name","player_surname","press_name","ranking","press_ranking","press_matches","press_scorers","yellowcards","press_yellowcards","diffide","press_diffide","press_squalifications","amends","press_amends","press_events","pres_even_id","undefined","listScorers","matchTime","matchDate","matc_id","matc_team_id_a","matc_team_id_b","scoreA","matc_goal_team_a","scoreB","matc_goal_team_b","dateExpected","matc_date_expected","matc_date_match","matc_time","address","matc_address","matc_name_groups","matc_flg_play","shootoutA","matc_shootout_team_a","shootoutB","matc_shootout_team_b","matc_place","team_id","play_id","play_name","play_surname","flg_cards","day_squalification","squalification_status","cardType","mada_name","mada_description","invModel","invitation_id","invitationId","mail_guest","mailGuest","even_id","guestEmail","mail_invitingmember","apiCall","matcScorerGoal","dateRange","even_name","even_description","even_email","even_address","even_type","organizer","even_organize_by","formula","even_formula","telephone","even_mobile_phone","yellowPoints","even_yellow_points","redPoints","even_red_points","yellowDiffide","even_yellow_diffide","yellowDiffide2","even_yellow_diffide2","even_date_start","even_date_end","region","regiId","regi_id","even_day_active","runBlock","$rootScope","defaultBodyClasses","stateChangeSuccess","toState","pms","params","bodyClasses","run","routerConfig","$stateProvider","$urlRouterProvider","requireLoggedIn","abstract","onEnter","otherwise","constant","malarkey","moment","$logProvider","toastrConfig","$animateProvider","$locationProvider","ezfbProvider","debugEnabled","classNameFilter","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","html5Mode","hashPrefix","setLocale","setInitParams","appId","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,UACN,YACA,YACA,aACA,aACA,YACA,sBACA,SACA,OACA,eACA,4BAKN,WACE,YAOA,SAASC,KAqBP,QAASC,GAAmBC,EAAOC,EAAIC,EAASC,EAAQC,GACtD,GAAIC,GAAKC,IAETD,GAAGE,UAAYP,EAAMO,YACrBF,EAAGG,qBAAuBR,EAAMS,SAEhCJ,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGU,WAAa,WACdV,EAAGK,WAAWL,EAAGW,MACdC,KAAKf,EAAQgB,WACbD,KAAK,SAAUE,GACd,MAAOjB,GAAQa,WAAWV,EAAGe,QAASD,EAAUd,EAAGgB,YAEpDJ,KAAKZ,EAAGiB,WALXjB,WAMWA,EAAGS,eAGhBT,EAAGkB,YAAc,SAAUC,GACzBnB,EAAGK,aACAO,KAAK,WACJ,MAAOf,GAAQuB,iBAAiBpB,EAAGe,QAASI,EAAKE,OAAQrB,EAAGgB,YAFhEhB,WAIWA,EAAGS,eAGhBT,EAAGsB,eAAiB,WAClBtB,EAAGW,MAASY,OAAQvB,EAAGuB,OAAQC,MAAO,EAAGC,OAAQ,IAGnDzB,EAAG0B,gBAAkB,WACnB5B,EAAO,iBAAmBE,EAAGuB,QAAQI,eACrC7B,EAAO,iBAAmBE,EAAGuB,QAAQK,iBAGvC5B,EAAGiB,UAAY,SAAUX,GAGvB,MAFAN,GAAGsB,iBACHtB,EAAG0B,kBACIpB,GAITN,EAAG6B,cAAgB,SAAUC,GAC3B,MAAGC,WAAUC,YACRzC,QAAQ0C,SAASH,IAClB9B,EAAGW,KAAKuB,KAAOJ,EACf9B,EAAGW,KAAKc,OAAS,GAEXlC,QAAQ4C,SAASL,IACvB9B,EAAGoC,aAAaN,IAIX9B,EAAGW,KAAKuB,MAKnBlC,EAAGqC,iBAAmB,SAAUP,GAC9B,MAAGC,WAAUC,YACRzC,QAAQ0C,SAASH,IAClB9B,EAAGW,KAAK2B,QAAUR,EAClB9B,EAAGW,KAAKc,OAAS,GAEXlC,QAAQ4C,SAASL,IACvB9B,EAAGoC,aAAaN,IAIX9B,EAAGW,KAAK2B,SAInBtC,EAAGoC,aAAe,SAAUG,GACvBhD,QAAQ0C,SAASM,EAAIL,QAAOlC,EAAGW,KAAKuB,KAAOK,EAAIL,MAC/C3C,QAAQ0C,SAASM,EAAID,WAAUtC,EAAGW,KAAK2B,QAAUC,EAAID,SACrD/C,QAAQiD,SAASD,EAAIhB,UAASvB,EAAGW,KAAKY,OAASgB,EAAIhB,QACnDhC,QAAQiD,SAASD,EAAId,UAASzB,EAAGW,KAAKc,OAASc,EAAId,SAGxD1B,EAAM0C,YAAYzC,EAAGuB,QAClBX,KAAK,SAAUN,GACdN,EAAG0C,gBACAnD,QAAQoD,QAAQrC,IACjBf,QAAQqD,QAAQtC,EAAK,SAAUuC,GAC7B7C,EAAG0C,aAAaI,MACdrB,OAAQoB,EAAGpB,OACXS,KAAMW,EAAGE,cACTT,QAASO,EAAGG,YACZzB,OAAQsB,EAAGI,iBAMrBjD,EAAGsB,iBA3HL5B,EAAmBwD,SAAW,QAAS,KAAM,UAAW,SAAU,QAAlE,IAAIC,IACFC,SAAU,KACVC,YAAa,yDACbC,WAAY5D,EACZ6D,aAAc,WACdC,kBAAkB,EAClBC,SAAS,EACTC,OACEC,MAAO,IACPC,SAAU,IACVrC,OAAQ,IACRR,QAAS,IACTC,SAAU,IACV0B,aAAc,KAIlB,OAAOS,GAvBT5D,QACGC,OAAO,UACP2D,UAAU,WAAY1D,MAqI3B,WACE,YAQA,SAASoE,KAoBP,QAASC,GAAqBnE,EAAOC,EAAIC,EAASE,EAAOD,GACvD,GAAIE,GAAKC,IACTD,GAAGI,OAAST,EAAMS,SAClBJ,EAAGI,OAAO2D,OAAO,EAAE,GAEnB/D,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGgE,aAAe,WAChBhE,EAAGK,WAAWL,EAAGW,MACdC,KAAKf,EAAQoE,aACbrD,KAAK,SAAUsD,GACd,MAAOrE,GAAQmE,aAAahE,EAAGe,QAASmD,EAAYlE,EAAGmE,cAExDvD,KAAKZ,EAAGiB,WALXjB,WAMWA,EAAGS,eAGhBT,EAAGoE,cAAgB,SAAUC,GAC3BrE,EAAGK,aACAO,KAAK,WACJ,MAAOf,GAAQuE,cAAcpE,EAAGe,QAASsD,EAAO5C,OAAQzB,EAAGmE,cAF/DnE,WAIWA,EAAGS,eAGhBT,EAAGsB,eAAiB,WAClBtB,EAAGW,MAASY,OAAQvB,EAAGuB,OAAQC,MAAO,EAAGC,OAAQ,IAGnDzB,EAAG0B,gBAAkB,WACnB5B,EAAO,mBAAqBE,EAAGuB,QAAQI,eACvC7B,EAAO,mBAAqBE,EAAGuB,QAAQK,iBAGzC5B,EAAGiB,UAAY,SAAUX,GAGvB,MAFAN,GAAGsB,iBACHtB,EAAG0B,kBACIpB,GAITN,EAAG6B,cAAgB,SAAUC,GAC3B,MAAGC,WAAUC,YACRzC,QAAQ0C,SAASH,IAClB9B,EAAGW,KAAKuB,KAAOJ,EACf9B,EAAGW,KAAKc,OAAS,GAEXlC,QAAQ4C,SAASL,IACvB9B,EAAGoC,aAAaN,IAIX9B,EAAGW,KAAKuB,MAKnBlC,EAAGqC,iBAAmB,SAAUP,GAC9B,MAAGC,WAAUC,YACRzC,QAAQ0C,SAASH,IAClB9B,EAAGW,KAAK2B,QAAUR,EAClB9B,EAAGW,KAAKc,OAAS,GAEXlC,QAAQ4C,SAASL,IACvB9B,EAAGoC,aAAaN,IAIX9B,EAAGW,KAAK2B,SAInBtC,EAAGoC,aAAe,SAAUG,GACvBhD,QAAQ0C,SAASM,EAAIL,QAAOlC,EAAGW,KAAKuB,KAAOK,EAAIL,MAC/C3C,QAAQ0C,SAASM,EAAID,WAAUtC,EAAGW,KAAK2B,QAAUC,EAAID,SACrD/C,QAAQiD,SAASD,EAAIhB,UAASvB,EAAGW,KAAKY,OAASgB,EAAIhB,QACnDhC,QAAQiD,SAASD,EAAId,UAASzB,EAAGW,KAAKc,OAASc,EAAId,SAGxDzB,EAAGsB,iBA1GLwC,EAAqBZ,SAAW,QAAS,KAAM,UAAW,QAAS,SADnE,IAAIC,IACFC,SAAU,KACVC,YAAa,6DACbC,WAAYQ,EACZP,aAAc,aACdC,kBAAkB,EAClBC,SAAS,EACTC,OACEY,QAAS,IACTV,SAAU,IACVrC,OAAQ,IACRR,QAAS,IACT2B,aAAc,IACdyB,WAAY,KAIhB,OAAOhB,GAvBT5D,QACGC,OAAO,UACP2D,UAAU,aAAcU,MAqH7B,WACE,YASA,SAASU,KAeP,QAASC,GAAmBC,EAAW1E,EAAO2E,GAC5C,GAAI1E,GAAKC,IAETD,GAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,uCACbC,WAAY,wBACZC,aAAc,cACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACTP,EAAM4E,QAAQ3E,EAAG+E,SAKzB/E,EAAG0E,OAASA,EAId,QAASM,GAAatB,EAAOb,EAAIoC,EAAOjF,GACtC6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MA7C1BZ,EAAmBtB,SAAW,YAAa,QAAS,UACpD8B,EAAa9B,SAAW,QAAS,KAAM,QAAS,KAHhD,IAAIC,IACFC,SAAU,KACVC,YAAa,iCACbC,WAAYkB,EACZjB,aAAc,WACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAML,EACNtB,OACEqB,KAAM,aAIV,OAAO5B,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,WAAYoB,MA4D3B,WACE,YAWA,SAASe,KAaP,QAASC,GAAmBb,EAAQ9E,EAAIG,GACtC,GAAIC,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGwF,OAAS,WACV,MAAOxF,GAAGK,WAAWL,EAAGW,MACrBC,KAAKb,EAAM0F,WACX7E,KAAK,SAAU8E,GACd,MAAO3F,GAAM4F,OAAO3F,EAAG+E,KAAKxD,OAAQmE,KAHjC1F,WAKIA,EAAGS,eAIlB,QAASmF,GAAalC,EAAOb,EAAIoC,EAAOjF,GACtCA,EAAG6F,OAAS,WACVhD,EAAGiD,KAAK,mBAAmBC,SAAS,SAvCxCR,EAAmBrC,SAAW,SAAU,KAAM,QAJ9C,IAAIC,IACFC,SAAU,KACVC,YAAa,iCACbC,WAAYiC,EACZhC,aAAc,WACd8B,KAAMO,EACNpC,kBAAkB,EAClBC,SAAS,EACTC,OACEqB,KAAM,aAIV,OAAO5B,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,WAAYmC,MAsD3B,WACE,YAOA,SAASU,GAAsBC,GAC7B,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WARtBJ,EAAsB9C,SAAW,qBALjC3D,QACGC,OAAO,UACP8D,WAAW,wBAAyB0C,MAgBzC,WACE,YAOA,SAASK,GAAqBJ,EAAmBvB,EAAQ/E,GACvD,GAAIK,GAAKC,IAETD,GAAGsG,WAAa3G,EAAM4G,gBACtBvG,EAAG0E,OAASA,EAEZ1E,EAAGkG,GAAK,WACNlG,EAAGO,SAAU,EACb0F,EAAkBE,MAAMnG,EAAGW,OAG7BX,EAAG6F,OAAS,WACVI,EAAkBG,WAXtBC,EAAqBnD,SAAW,oBAAqB,SAAU,SAN/D3D,QACGC,OAAO,UACP8D,WAAW,uBAAwB+C,MAoBxC,WACE,YAcA,SAASG,KAUP,QAASC,GAAqBhC,EAAWC,GACvC,GAAI1E,GAAKC,IACTD,GAAG0E,OAASA,EAId,QAASgC,GAAehD,EAAOb,EAAIoC,EAAOjF,GACxC6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MAxB1BqB,EAAqBvD,SAAW,YAAa,UAC7CwD,EAAexD,SAAW,QAAS,KAAM,QAAS,KARlD,IAAIC,IACFC,SAAU,KACVC,YAAa,mCACbC,WAAYmD,EACZlD,aAAc,aACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAMqB,EACNhD,OACEW,OAAQ,eAIZ,OAAOlB,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,aAAcqD,MA4C7B,WACE,YAgBA,SAASG,KAQP,QAASC,GAAqBlC,EAAQ9E,EAAI6E,EAAWoC,GACnD,GAAI7G,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAG8G,qBAAuB,WACxBrC,EAAUG,MACNvB,YAAa,2CACbC,WAAY,8BACZC,aAAc,oBACdsB,YAAa,kBACZC,OACFlE,KAAK,SAAUN,GACXf,QAAQwH,UAAUzG,IACnBN,EAAGK,WAAWC,GACXM,KAAKiG,EAAOG,kBACZpG,KAAKiG,EAAOI,mBAFfjH,WAGWA,EAAGS,iBAMxB,QAASyG,GAAexD,EAAOb,EAAIoC,EAAOjF,GACxCA,EAAG6F,OAAS,WACVhD,EAAGiD,KAAK,mBAAmBC,SAAS,SA1CxCa,EAAqB1D,SAAW,SAAU,KAAM,YAAa,SAT7D,IAAIC,IACFC,SAAU,KACVC,YAAa,mCACbC,WAAYsD,EACZrD,aAAc,aACd8B,KAAM6B,EACN1D,kBAAkB,EAClBC,SAAS,EACTC,OACEW,OAAQ,eAIZ,OAAOlB,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,aAAcwD,MA8D7B,WACE,YAiBA,SAASQ,KAQP,QAASC,GAA0B3C,EAAWC,EAAQ/E,EAAOkH,GAC3D,GAAI7G,GAAKC,IACTD,GAAGI,OAAST,EAAMS,SAElBJ,EAAGqH,WAAa,WACd,MAAOR,GACJS,kBAAkB5C,EAAO6C,aAAaC,OAAQxH,EAAGyH,YAAYC,QAC5DC,aAAc3H,EAAG4H,oBACjBC,UAAW7H,EAAGW,KAAKmH,OAEpBlH,KAAK,WACJ,MAAOZ,GAAG0E,OAAO6C,aAAaC,SAE/B5G,KAAKiG,EAAOkB,aARRlB,WASI7G,EAAGS,eAGhBT,EAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,6CACbC,WAAY,+BACZC,aAAc,qBACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACTuG,EAAOmB,mBAAmBtD,EAAO6C,aAAaC,OAAQxH,EAAG4H,oBAAqB5H,EAAGyH,gBAKzFzH,EAAG0E,OAASA,EAId,QAASuD,GAAoBvE,EAAOb,EAAIoC,EAAOjF,GAC7C6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MApD1BgC,EAA0BlE,SAAW,YAAa,SAAU,QAAS,UACrE+E,EAAoB/E,SAAW,QAAS,KAAM,QAAS,KAXvD,IAAIC,IACFC,SAAU,KACVC,YAAa,uCACbC,WAAY8D,EACZ7D,aAAc,kBACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAM4C,EACNvE,OACE+D,YAAa,mBACbG,oBAAqB,wBAIzB,OAAOzE,GApBT5D,QACGC,OAAO,UACP2D,UAAU,kBAAmBgE,MA2ElC,WACE,YAOA,SAASe,GAA6BjC,GACpC,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WADtB8B,EAA6BhF,SAAW,qBAZxC3D,QACGC,OAAO,UACP8D,WAAW,+BAAgC4E,MAgBhD,WACE,YAoBA,SAASC,KAIP,QAASC,GAAoB3D,EAAW4D,EAAO3D,GAC7C,GAAI1E,GAAKC,IAETD,GAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,uCACbC,WAAY,yBACZC,aAAc,eACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACT+H,EAAM1D,QAAQ3E,EAAGqI,UAKzBrI,EAAG0E,OAASA,EAId,QAAS4D,GAAc5E,EAAOb,EAAIoC,EAAOjF,GACvC6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MAlC1BgD,EAAoBlF,SAAW,YAAa,QAAS,UACrDoF,EAAcpF,SAAW,QAAS,KAAM,QAAS,KAdjD,IAAIC,IACFC,SAAU,KACVC,YAAa,iCACbC,WAAY8E,EACZ7E,aAAc,YACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAMiD,EACN5E,OACE2E,MAAO,cAIX,OAAOlF,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,YAAagF,MA4D5B,WACE,YAsBA,SAAS7C,KAEP,QAASC,GAAmBb,EAAQ9E,EAAIG,GACtC,GAAIC,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGwF,OAAS,WACV,MAAOxF,GAAGK,WAAWL,EAAGW,MACrBC,KAAKb,EAAM0F,WACX7E,KAAK,SAAU8E,GACd,MAAO3F,GAAM4F,OAAO3F,EAAG+E,KAAKxD,OAAQmE,KAHjC1F,WAKIA,EAAGS,eAIlB,QAASmF,GAAalC,EAAOb,EAAIoC,EAAOjF,GACtCA,EAAG6F,OAAS,WACVhD,EAAGiD,KAAK,mBAAmBC,SAAS,SA5BxCR,EAAmBrC,SAAW,SAAU,KAAM,QAf9C,IAAIC,IACFC,SAAU,KACVC,YAAa,iCACbC,WAAYiC,EACZhC,aAAc,WACd8B,KAAMO,EACNpC,kBAAkB,EAClBC,SAAS,EACTC,OACEqB,KAAM,aAIV,OAAO5B,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,WAAYmC,MAsD3B,WACE,YAOA,SAASiD,GAAuBtC,GAC9B,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WAGtBmC,EAAuBrF,SAAW,qBAhBlC3D,QACGC,OAAO,UACP8D,WAAW,yBAA0BiF,MAgB1C,WACE,YAOA,SAASC,GAAsBvC,EAAmBvB,EAAQ/E,GACxD,GAAIK,GAAKC,IACTD,GAAG0E,OAASA,EAEZ1E,EAAG6G,OAAStH,QAAQkJ,KAAK/D,EAAOmC,QAChC7G,EAAG0I,uBAAyB/I,EAAMgJ,gCAElC3I,EAAGkG,GAAK,WACNlG,EAAGO,SAAU,EACb0F,EAAkBE,MAAMnG,EAAGW,OAG7BX,EAAG6F,OAAS,WACVI,EAAkBG,WAGpBpG,EAAG4I,eAECC,IAAK,UACL3G,KAAM,oBACN4G,UAEIC,GAAI,EACJ7G,KAAM,OAGN6G,GAAI,EACJ7G,KAAM,SAKV2G,IAAK,UACL3G,KAAM,kBACN4G,UAEIC,GAAI,EACJ7G,KAAM,4BAGN6G,GAAI,EACJ7G,KAAM,uCAGN6G,GAAI,EACJ7G,KAAM,0BAKV2G,IAAK,UACL3G,KAAM,mBACN4G,UAEIC,GAAI,EACJ7G,KAAM,oBAGN6G,GAAI,EACJ7G,KAAM,mBAGN6G,GAAI,EACJ7G,KAAM,wBAKV2G,IAAK,cACL3G,KAAM,kBACN4G,UAEIC,GAAI,EACJ7G,KAAM,OAGN6G,GAAI,EACJ7G,KAAM,SAKV2G,IAAK,UACL3G,KAAM,iBACN4G,UAEIC,GAAI,EACJ7G,KAAM,OAGN6G,GAAI,EACJ7G,KAAM,SAKV2G,IAAK,kBACL3G,KAAM,qBACN4G,UAEIC,GAAI,EACJ7G,KAAM,OAGN6G,GAAI,EACJ7G,KAAM,SAKV2G,IAAK,SACL3G,KAAM,iBACN4G,UAEIC,GAAI,EACJ7G,KAAM,OAGN6G,GAAI,EACJ7G,KAAM,SA3GhBsG,EAAsBtF,SAAW,oBAAqB,SAAU,SAjBhE3D,QACGC,OAAO,UACP8D,WAAW,wBAAyBkF,MAkIzC,WACE,YAyBA,SAASQ,KADP,QAASC,GAAqBxE,EAAW1E,EAAO2E,GAC9C,GAAI1E,GAAKC,IAETD,GAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,yCACbC,WAAY,0BACZC,aAAc,gBACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACTP,EAAMmJ,cAAclJ,EAAGmJ,WAK/BnJ,EAAG0E,OAASA,EAId,QAAS0E,GAAe1F,EAAOb,EAAIoC,EAAOjF,GACxC6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MA7B1B6D,EAAqB/F,SAAW,YAAa,QAAS,UACtDkG,EAAelG,SAAW,QAAS,KAAM,QAAS,KAnBlD,IAAIC,IACFC,SAAU,KACVC,YAAa,mCACbC,WAAY2F,EACZ1F,aAAc,aACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAM+D,EACN1F,OACEyF,OAAQ,eAIZ,OAAOhG,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,aAAc6F,MA4D7B,WACE,YA2BA,SAASK,KAHP,QAASC,GAAqB5E,EAAQ9E,EAAIG,EAAOJ,GAC/C,GAAIK,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGwF,OAAS,WACV,MAAOxF,GAAGK,WAAWL,EAAGW,MACrBC,KAAKb,EAAMwJ,aACX3I,KAAK,SAAU4I,GACd,MAAOzJ,GAAM0J,aAAazJ,EAAGmJ,OAAO1H,OAAQ+H,KAHzCxJ,WAKIA,EAAGS,eAGhBT,EAAGI,OAAST,EAAMS,SAElBJ,EAAGW,QAGL,QAAS+I,GAAehG,EAAOb,EAAIoC,EAAOjF,GACxCA,EAAG6F,OAAS,WACVhD,EAAGiD,KAAK,mBAAmBC,SAAS,SA3BxCuD,EAAqBpG,SAAW,SAAU,KAAM,QAAS,QApBzD,IAAIC,IACFC,SAAU,KACVC,YAAa,mCACbC,WAAYgG,EACZ/F,aAAc,aACd8B,KAAMqE,EACNlG,kBAAkB,EAClBC,SAAS,EACTC,OACEyF,OAAQ,eAIZ,OAAOhG,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,aAAckG,MA0D7B,WACE,YAOA,SAASM,GAAuB1D,GAC9B,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WAQtBuD,EAAuBzG,SAAW,qBArBlC3D,QACGC,OAAO,UACP8D,WAAW,yBAA0BqG,MAgB1C,WACE,YAOA,SAASC,GAAuB3D,EAAmBvB,EAAQ/E,GACzD,GAAIK,GAAKC,IAETD,GAAGI,OAAST,EAAMS,SAClBJ,EAAG0E,OAASA,EAEZ1E,EAAGkG,GAAK,WACNlG,EAAGO,SAAU,EACb0F,EAAkBE,MAAMnG,EAAGW,OAG7BX,EAAG6F,OAAS,WACVI,EAAkBG,WAKtBwD,EAAuB1G,SAAW,oBAAqB,SAAU,SAtBjE3D,QACGC,OAAO,UACP8D,WAAW,yBAA0BsG,MAoB1C,WACE,YA8BA,SAASC,KANP,QAASC,GAA2BrF,EAAW5E,EAAS6E,GACtD,GAAI1E,GAAKC,IACTD,GAAG0E,OAASA,EAId,QAASqF,GAAqBrG,EAAOb,EAAIoC,EAAOjF,GAC9C6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MAR1B0E,EAA2B5G,SAAW,YAAa,UAAW,UAC9D6G,EAAqB7G,SAAW,QAAS,KAAM,QAAS,KAxBxD,IAAIC,IACFC,SAAU,KACVC,YAAa,0CACbC,WAAYwG,EACZvG,aAAc,mBACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAM0E,EACNrG,OACEsG,MAAO,qBAIX,OAAO7G,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,mBAAoB0G,MA4CnC,WACE,YAgCA,SAASI,KARP,QAASC,GAA2BxF,EAAQ9E,EAAIC,EAASF,GACvD,GAAIK,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGwF,OAAS,WACV,MAAOxF,GAAGK,WAAWL,EAAGW,MACrBC,KAAKf,EAAQsK,YACbvJ,KAAK,SAAUwJ,GACd,MAAOvK,GAAQ8F,OAAO3F,EAAGgK,MAAMK,UAAWD,KAHvCpK,WAKIA,EAAGS,eAGhBT,EAAGI,OAAST,EAAMS,SAElBJ,EAAGW,MAASI,QAASf,EAAGgK,MAAMtC,QAGhC,QAAS4C,GAAqB5G,EAAOb,EAAIoC,EAAOjF,GAC9CA,EAAG6F,OAAS,WACVhD,EAAGiD,KAAK,mBAAmBC,SAAS,SAtBxCmE,EAA2BhH,SAAW,SAAU,KAAM,UAAW,QAzBjE,IAAIC,IACFC,SAAU,KACVC,YAAa,0CACbC,WAAY4G,EACZ3G,aAAc,mBACd8B,KAAMiF,EACN9G,kBAAkB,EAClBC,SAAS,EACTC,OACEsG,MAAO,qBAIX,OAAO7G,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,mBAAoB8G,MA0DnC,WACE,YAiCA,SAASM,KATP,QAASC,GAAyB/F,EAAWgG,EAAa/F,GACxD,GAAI1E,GAAKC,IAETD,GAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,6CACbC,WAAY,8BACZC,aAAc,oBACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACTmK,EACG9F,QAAQ3E,EAAG0K,YACX9J,KAAK6J,EAAYE,aAK5B3K,EAAG0E,OAASA,EAId,QAASkG,GAAmBlH,EAAOb,EAAIoC,EAAOjF,GAC5C6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MAvB1BoF,EAAyBtH,SAAW,YAAa,cAAe,UAChE0H,EAAmB1H,SAAW,QAAS,KAAM,QAAS,KA3BtD,IAAIC,IACFC,SAAU,KACVC,YAAa,uCACbC,WAAYkH,EACZjH,aAAc,iBACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAMuF,EACNlH,OACEgH,WAAY,mBAIhB,OAAOvH,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,iBAAkBoH,MA8DjC,WACE,YAOA,SAASM,GAA4B5E,GACnC,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WAetByE,EAA4B3H,SAAW,qBA5BvC3D,QACGC,OAAO,UACP8D,WAAW,8BAA+BuH,MAgB/C,WACE,YAOA,SAASC,GAA2B7E,EAAmBvB,EAAQ/E,GAC7D,GAAIK,GAAKC,IACTD,GAAG6G,OAAStH,QAAQkJ,KAAK/D,EAAOmC,QAChC7G,EAAG0I,uBAAyB/I,EAAMgJ,gCAElC3I,EAAGkG,GAAK,WACNlG,EAAGO,SAAU,EACb0F,EAAkBE,MAAMnG,EAAGW,OAG7BX,EAAG6F,OAAS,WACVI,EAAkBG,WAatB0E,EAA2B5H,SAAW,oBAAqB,SAAU,SA7BrE3D,QACGC,OAAO,UACP8D,WAAW,6BAA8BwH,MAmB9C,WACE,YAsCA,SAASC,GAAUlE,GAbjB,QAASmE,GAAoBtG,EAAQD,GACnC,GAAIzE,GAAKC,IAETD,GAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,wCACbC,WAAY,yBACZC,aAAc,eACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACTuG,EAAOlC,QAAQ3E,EAAGiL,UAK1BjL,EAAG0E,OAASA,EAId,QAASwG,GAAcxH,EAAOb,EAAIoC,EAAOjF,GACvC6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MAjB1B4F,EAAoB9H,SAAW,SAAU,aACzCgI,EAAchI,SAAW,QAAS,KAAM,QAAS,KAhCjD,IAAIC,IACFC,SAAU,KACVC,YAAa,kCACbC,WAAY0H,EACZzH,aAAc,YACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAM6F,EACNxH,OACEuH,MAAO,aACPE,aAAc,KAIlB,OAAOhI,GAUT4H,EAAU7H,SAAW,UA9BrB3D,QACGC,OAAO,UACP2D,UAAU,YAAa4H,MA6D5B,WACE,YAOA,SAASK,GAAgCnF,GACvC,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WAoBtBgF,EAAgClI,SAAW,qBAjC3C3D,QACGC,OAAO,UACP8D,WAAW,kCAAmC8H,MAgBnD,WACE,YA0CA,SAASC,GAAUxE,GAlBjB,QAASyE,GAAoB5G,EAAQ7E,EAAS4E,EAAW7E,EAAID,GAC3D,GAAIK,GAAKC,IAETD,GAAG0E,OAASA,EACZ1E,EAAGuL,cAAgB5L,EAAMS,SAEzBJ,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGwF,OAAS,WACV,MAAOxF,GAAGK,WAAWL,EAAGW,MACrBC,KAAKiG,EAAO2E,YACZ5K,KAAK,SAAU6K,GACd,MAAO5E,GAAOlB,OAAO3F,EAAGiL,MAAMzD,OAAQiE,KAHnCzL,WAKIA,EAAGS,eAGhBT,EAAG0L,QAAU,WACX,MAAO1L,GAAGK,aACPO,KAAK,WACJ,MAAOiG,GAAOlB,OAAO3F,EAAGiL,MAAMzD,QAASmE,kBAAmB,MAFvD3L,WAIIA,EAAGS,eAGhBT,EAAG4L,UAAY,WACb,MAAO5L,GAAGK,aACPO,KAAK,WACJ,MAAOiG,GAAOlB,OAAO3F,EAAGiL,MAAMzD,QAASmE,kBAAmB,MAFvD3L,WAIIA,EAAGS,eAGhBT,EAAG6L,iBAAmB,WACpBpH,EAAUG,MACRvB,YAAa,8CACbC,WAAY,kCACZC,aAAc,wBACdsB,YAAa,kBACZC,OACFlE,KAAK,SAAUN,GACd,MAAGA,MAAQ,EACFN,EAAGK,WAAWL,EAAGiL,MAAMzD,QAC3B5G,KAAKf,EAAQiM,gBACblL,KAAK,WACJ,MAAOiG,GAAOkF,KAAK/L,EAAGiL,MAAMzD,UAHzBxH,WAKIA,EAAGS,cANhB,UAaN,QAASuL,GAActI,EAAOb,EAAIoC,EAAOjF,GAEvC6C,EAAGiD,KAAK,mBAAmBmG,GAAG,mBAAoB,WAChDpF,EAAOkF,KAAK/L,EAAGiL,MAAMzD,QACrBX,EAAOqF,gBAGTlM,EAAG6F,OAAS,WACVhD,EAAGiD,KAAK,mBAAmBC,SAAS,SAGtCrC,EAAMyI,OAAO,iCAAkC,SAAUC,EAAQC,GAC5D9M,QAAQwH,UAAUqF,IAAWA,IAAWC,IACzCrM,EAAGW,KAAK2L,WAAatM,EAAGiL,MAAMsB,kBAxDpCjB,EAAoBpI,SAAW,SAAU,UAAW,YAAa,KAAM,QAnCvE,IAAIC,IACFC,SAAU,KACVC,YAAa,kCACbC,WAAYgI,EACZ/H,aAAc,YACd8B,KAAM2G,EACNxI,kBAAkB,EAClBC,SAAS,EACTC,OACEuH,MAAO,cAIX,OAAO9H,GAeTkI,EAAUnI,SAAW,UAlCrB3D,QACGC,OAAO,UACP2D,UAAU,YAAakI,MAuG5B,WACE,YAOA,SAASmB,GAAuBvG,GAC9B,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WAuBtBoG,EAAuBtJ,SAAW,qBApClC3D,QACGC,OAAO,UACP8D,WAAW,yBAA0BkJ,MAgB1C,WACE,YA4CA,SAASC,KAnBP,QAASC,GAAmBjI,EAAW5E,EAAS6E,GAC9C,GAAI1E,GAAKC,IAETD,GAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,8CACbC,WAAY,wBACZC,aAAc,cACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACTT,EAAQ8E,QAAQ3E,EAAGmB,SAK3BnB,EAAG0E,OAASA,EAId,QAASiI,GAAajJ,EAAOb,EAAIoC,EAAOjF,GACtC6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MAX1BsH,EAAmBxJ,SAAW,YAAa,UAAW,UACtDyJ,EAAazJ,SAAW,QAAS,KAAM,QAAS,KAtChD,IAAIC,IACFC,SAAU,KACVC,YAAa,wCACbC,WAAYoJ,EACZnJ,aAAc,WACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAMsH,EACNjJ,OACEvC,KAAM,YACNyL,OAAQ,KAIZ,OAAOzJ,GApBT5D,QACGC,OAAO,UACP2D,UAAU,WAAYsJ,MA6D3B,WACE,YA8CA,SAASI,KArBP,QAASC,GAAmBpI,EAAQ9E,GAClC,GAAII,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAItB,QAASyM,GAAarJ,EAAOb,EAAIoC,EAAOjF,GACtCA,EAAG6F,OAAS,WACVhD,EAAGiD,KAAK,mBAAmBC,SAAS,SAIxC+G,EAAmB5J,SAAW,SAAU,KAvCxC,IAAIC,IACFC,SAAU,KACVC,YAAa,wCACbC,WAAYwJ,EACZvJ,aAAc,WACd8B,KAAM0H,EACNvJ,kBAAkB,EAClBC,SAAS,EACTC,OACEvC,KAAM,YACNyL,OAAQ,KAIZ,OAAOzJ,GApBT5D,QACGC,OAAO,UACP2D,UAAU,WAAY0J,MA8C3B,WACE,YA+CA,SAASG,KArBP,QAAS5F,GAA0B3C,EAAWC,EAAQ/E,EAAOE,GAC3D,GAAIG,GAAKC,IACTD,GAAGI,OAAST,EAAMS,SAElBJ,EAAGwF,OAAS,WACV,MAAO3F,GACJoN,eAAejN,EAAGW,MAClBC,KAAK,SAAUE,GACd,MAAOjB,GAAQqN,gBACblN,EAAGmN,UAAUzF,OACb1H,EAAGoN,kBACHpN,EAAGmN,UAAU9L,OACbrB,EAAGgB,SACHhB,EAAGqN,aACHvM,MAKRd,EAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,2CACbC,WAAY,6BACZC,aAAc,mBACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACTT,EAAQyN,iBAAiBtN,EAAGmN,UAAUzF,OAAQ1H,EAAGoN,kBAAmBpN,EAAGmN,UAAU9L,OAAQrB,EAAG4M,OAAO5L,SAAUhB,EAAG4M,OAAOS,iBAK/HrN,EAAG0E,OAASA,EAId,QAASuD,GAAoBvE,EAAOb,EAAIoC,EAAOjF,GAC7C6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MAzB1BgC,EAA0BlE,SAAW,YAAa,SAAU,QAAS,WACrE+E,EAAoB/E,SAAW,QAAS,KAAM,QAAS,KAzCvD,IAAIC,IACFC,SAAU,KACVC,YAAa,qCACbC,WAAY8D,EACZ7D,aAAc,gBACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAM4C,EACNvE,OACEyJ,UAAW,iBACXP,OAAQ,IACRQ,kBAAmB,sBAIvB,OAAOjK,GArBT5D,QACGC,OAAO,UACP2D,UAAU,gBAAiB6J,MA8EhC,WACE,YAOA,SAASO,GAA2BtH,GAClC,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WA6BtBmH,EAA2BrK,SAAW,qBA1CtC3D,QACGC,OAAO,UACP8D,WAAW,6BAA8BiK,MAgB9C,WACE,YAkDA,SAASC,KA1BP,QAASC,GAAoBhJ,EAAW5E,EAAS6E,GAC/C,GAAI1E,GAAKC,IAETD,GAAG2E,QAAU,WAEXF,EAAUG,MACNvB,YAAa,0CACbC,WAAY,yBACZC,aAAc,eACdsB,YAAa,iBACZC,OACFlE,KAAK,SAAUN,GACXA,KAAQ,GACTT,EAAQ8E,QAAQ3E,EAAGgK,UAK3BhK,EAAG0N,aAAe,WAChBjJ,EAAUG,MACJvB,YAAa,oDACbC,WAAY,8BACZC,aAAc,eACdsB,YAAa,gBACb8I,KAAM,KACNnN,SAAUwJ,MAAOhK,EAAGgK,SACrBlF,OACFlE,QAGLZ,EAAG0E,OAASA,EAId,QAASkJ,GAAclK,EAAOb,EAAIoC,EAAOjF,GACvC6C,EAAGqC,MACD,WACExB,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,KAGtB,WACE1B,EAAMyB,OAAO,WACXnF,EAAGoF,cAAe,MAhB1BqI,EAAoBvK,SAAW,YAAa,UAAW,UACvD0K,EAAc1K,SAAW,QAAS,KAAM,QAAS,KA5CjD,IAAIC,IACFC,SAAU,KACVC,YAAa,oCACbC,WAAYmK,EACZlK,aAAc,YACdC,kBAAkB,EAClBC,SAAS,EACT4B,KAAMuI,EACNlK,OACEsG,MAAO,cAIX,OAAO7G,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,YAAaqK,MAwE5B,WACE,YAoDA,SAASK,KA5BP,QAASC,GAAoBpJ,EAAQ9E,EAAIC,EAASF,GAChD,GAAIK,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGwF,OAAS,WACV,MAAOxF,GAAGK,WAAWL,EAAGW,MACrBC,KAAKf,EAAQsK,YACbvJ,KAAK,SAAUwJ,GACd,MAAOvK,GAAQ8F,OAAO3F,EAAGgK,MAAMK,UAAWD,KAHvCpK,WAKIA,EAAGS,eAGhBT,EAAGI,OAAST,EAAMS,SAElBJ,EAAGW,MAASI,QAASf,EAAGgK,MAAMtC,QAGhC,QAASqG,GAAcrK,EAAOb,EAAIoC,EAAOjF,GACvCA,EAAG6F,OAAS,WACVhD,EAAGiD,KAAK,mBAAmBC,SAAS,SAFxC+H,EAAoB5K,SAAW,SAAU,KAAM,UAAW,QA7C1D,IAAIC,IACFC,SAAU,KACVC,YAAa,oCACbC,WAAYwK,EACZvK,aAAc,YACd8B,KAAM0I,EACNvK,kBAAkB,EAClBC,SAAS,EACTC,OACEsG,MAAO,cAIX,OAAO7G,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,YAAa0K,MA0D5B,WACE,YAOA,SAASlE,GAAuB1D,GAC9B,GAAIjG,GAAKC,IAETD,GAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WAiCtBuD,EAAuBzG,SAAW,qBA9ClC3D,QACGC,OAAO,UACP8D,WAAW,yBAA0BqG,MAgB1C,WACE,YAOA,SAASqE,GAAoB/H,EAAmBvB,GAC9C,GAAI1E,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGkG,GAAK,WACNlG,EAAGO,SAAU,EACb0F,EAAkBE,MAAMnG,EAAGW,OAG7BX,EAAG6F,OAAS,WACVI,EAAkBG,WA+BtB4H,EAAoB9K,SAAW,oBAAqB,UA/CpD3D,QACGC,OAAO,UACP8D,WAAW,sBAAuB0K,MAmBvC,WACE,YAOA,SAASC,GAAsBhI,EAAmBvB,EAAQ/E,GACxD,GAAIK,GAAKC,IAETD,GAAGI,OAAST,EAAMS,SAClBJ,EAAG0E,OAASA,EAEZ1E,EAAGkG,GAAK,WACNlG,EAAGO,SAAU,EACb0F,EAAkBE,MAAMnG,EAAGW,OAG7BX,EAAG6F,OAAS,WACVI,EAAkBG,WA+BtB6H,EAAsB/K,SAAW,oBAAqB,SAAU,SAhDhE3D,QACGC,OAAO,UACP8D,WAAW,wBAAyB2K,MAoBzC,WACE,YAOA,SAASC,GAA4BtO,EAAIqG,EAAmB+D,EAAOrK,EAAOE,EAASE,GACjF,GAAIC,GAAKC,IACTD,GAAGgK,MAAQA,EACXhK,EAAGI,OAAST,EAAMS,SAElBJ,EAAGkG,GAAK,WACND,EAAkBE,OAAM,IAG1BnG,EAAG6F,OAAS,WACVI,EAAkBG,WAGpBpG,EAAGwF,OAAS,WACV,MAAOxF,GAAGK,WAAWL,EAAGW,MACrBC,KAAKf,EAAQsK,YACbvJ,KAAK,SAAUwJ,GACd,MAAOvK,GAAQ8F,OAAO3F,EAAGgK,MAAMK,UAAWD,MAIhDpK,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGW,MACDI,QAASf,EAAGgK,MAAMtC,OAClByG,OAAS5M,OAAQvB,EAAGgK,MAAMoE,aAC1BC,OAAS9M,OAAQvB,EAAGgK,MAAMsE,aAC1BC,QAAUC,MAAOxO,EAAGgK,MAAMyE,cAG5BzO,EAAG0O,sBAAwB,SAAUC,GACnC,GAAIjM,KAWJ,OAVGnD,SAAQoD,QAAQgM,IACjBpP,QAAQqD,QAAQ+L,EAAS,SAAUxF,GACjCzG,EAAaI,MACXrB,OAAQ0H,EAAO1H,OACfS,KAAMiH,EAAOpG,cACbT,QAAS6G,EAAOnG,YAChBzB,OAAQ4H,EAAOlG,eAIdP,GAGT1C,EAAG4O,iBACH5O,EAAG6O,iBAEHhP,EAAQkM,KAAK/L,EAAGgK,MAAMtC,QACnB9G,KAAK,WACJb,EACG0C,YAAYzC,EAAGgK,MAAMoE,aACrBxN,KAAKZ,EAAG0O,uBACR9N,KAAK,SAAUN,GACdN,EAAG4O,cAAgBtO,IAEvBP,EACG0C,YAAYzC,EAAGgK,MAAMsE,aACrB1N,KAAKZ,EAAG0O,uBACR9N,KAAK,SAAUN,GACdN,EAAG6O,cAAgBvO,MAxB7B4N,EAA4BhL,SAAW,KAAM,oBAAqB,QAAS,QAAS,UAAW,SAjD/F3D,QACGC,OAAO,UACP8D,WAAW,8BAA+B4K,MA6E/C,WACE,YAOA,SAASY,KAmBP,QAASC,MAGT,QAASC,GAAkBtL,EAAOb,EAAIoC,EAAOjF,GACxCA,EAAGiP,OAASjP,EAAGkP,OAAOC,YACvBnP,EAAGoP,QAAS,GAGZvM,EAAGiD,KAAK,oBAAoBuJ,QAAQC,SAAS,iBAC7CzM,EAAGiD,KAAK,aAAauJ,QAAQE,QAG/B7L,EAAMyI,OAAO,mCAAoC,SAAUC,EAAQC,GAC9DD,IAAWC,IAEXD,IAAWpM,EAAGiP,MAASjP,EAAGoP,OAKrBhD,IAAWpM,EAAGiP,MAAQjP,EAAGoP,SAC/BpP,EAAGoP,QAAS,EACZ7P,QAAQiQ,QAAQC,SAASC,UAAU3J,SAASlD,EAAGiD,KAAK,oBANpD9F,EAAGoP,QAAS,EACZ7P,QAAQiQ,QAAQC,SAASC,UAAU3J,SAASlD,EAAGiD,KAAK,sBAnC1D,GAAI3C,IACFC,SAAU,IACVC,YAAa,yDACbC,WAAYyL,EACZxL,aAAc,gBACdC,kBAAkB,EAClBE,OACEwL,OAAQ,IACRD,KAAM,IACNU,MAAO,KAETtK,KAAM2J,EACNY,YAAY,EAGd,OAAOzM,GArBT5D,QACGC,OAAO,UACP2D,UAAU,gBAAiB2L,MAoDhC,WACE,YAOA,SAASe,KAeP,QAASC,KACP,GAAI9P,GAAKC,IAETD,GAAG+P,MAAQ,SAAUC,GACnB,MAAO,IAAIC,OAAMD,IAlBrB,GAAI7M,IACFC,SAAU,IACVC,YAAa,2DACbC,WAAYwM,EACZvM,aAAc,iBACdC,kBAAkB,EAClBE,OACEwL,OAAQ,KAIZ,OAAO/L,GAjBT5D,QACGC,OAAO,UACP2D,UAAU,iBAAkB0M,MA6BjC,WACE,YAOA,SAASK,GAAgBxL,EAAQmC,EAAQ9G,EAAOH,EAAI6E,GAClD,GAAIzE,GAAKC,IACTD,GAAG0E,OAASA,EAGZ1E,EAAGmQ,mBAAqB,WAEtB,GAAIzL,EAAO6C,aAAX,CAGA,IAAK,GAAI6I,GAAI,EAAGA,EAAI1L,EAAOmC,OAAO7E,OAAQoO,IACxC,GAAG1L,EAAOmC,OAAOuJ,GAAG5I,SAAW9C,EAAO6C,aAAaC,OAAO,CACxD9C,EAAOmC,OAAOuJ,GAAK1L,EAAO6C,YAC1B,OAIJ,MAAOvH,GACJK,WAAWqE,EAAO6C,aAAaC,QAC/B5G,KAAKb,EAAMsQ,MAFPrQ,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGsQ,cAAgB,WACjB7L,EAAUG,MACNvB,YAAa,qCACbC,WAAY,uBACZC,aAAc,aACdsB,YAAa,kBACZC,OACFlE,KAAK,SAAUN,GACXf,QAAQwH,UAAUzG,IACnBN,EAAGK,WAAWC,GACXM,KAAKb,EAAM0F,WACX7E,KAAKb,EAAMwQ,QACX3P,KAAKb,EAAMsQ,MAHdrQ,WAIWA,EAAGS,iBAKtBoG,EACGwJ,OACAzP,KAAKZ,EAAGmQ,oBARbD,EAAgBhN,SAAW,SAAU,SAAU,QAAS,KAAM,aAlD9D3D,QACGC,OAAO,UACP8D,WAAW,kBAAmB4M,MA4DnC,WACE,YAOA,SAASM,GAAkB9L,EAAQmC,EAAQjH,GACzC,GAAII,GAAKC,IACTD,GAAG0E,OAASA,EAGZ1E,EAAGmQ,mBAAqB,WAEtB,GAAIzL,EAAO6C,aAAX,CAGA,IAAK,GAAI6I,GAAI,EAAGA,EAAI1L,EAAOmC,OAAO7E,OAAQoO,IACxC,GAAG1L,EAAOmC,OAAOuJ,GAAG5I,SAAW9C,EAAO6C,aAAaC,OAAO,CACxD9C,EAAOmC,OAAOuJ,GAAK1L,EAAO6C,YAC1B,OAIJ,MAAOvH,GACJK,WAAWqE,EAAO6C,aAAaC,QAC/B5G,KAAKiG,EAAOkB,aAFR/H,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAIpBuG,EACGwJ,OACAzP,KAAKZ,EAAGmQ,oBAUbK,EAAkBtN,SAAW,SAAU,SAAU,MAnDjD3D,QACGC,OAAO,UACP8D,WAAW,oBAAqBkN,MA2CrC,WACE,YAOA,SAASC,GAAqB/L,EAAQmC,EAAQjH,GAC5C,GAAII,GAAKC,IACTD,GAAG0E,OAASA,EAGZ1E,EAAGmQ,mBAAqB,WAEtB,GAAIzL,EAAO6C,aAAX,CAGA,IAAK,GAAI6I,GAAI,EAAGA,EAAI1L,EAAOmC,OAAO7E,OAAQoO,IACxC,GAAG1L,EAAOmC,OAAOuJ,GAAG5I,SAAW9C,EAAO6C,aAAaC,OAAO,CACxD9C,EAAOmC,OAAOuJ,GAAK1L,EAAO6C,YAC1B,OAIJ,MAAOvH,GACJK,WAAWqE,EAAO6C,cAClB3G,KAAKiG,EAAO6J,gBAFR1Q,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAIpBuG,EACGwJ,OACAzP,KAAKZ,EAAGmQ,oBAWbM,EAAqBvN,SAAW,SAAU,SAAU,MApDpD3D,QACGC,OAAO,UACP8D,WAAW,uBAAwBmN,MA2CxC,WACE,YAOA,SAASE,GAAmBC,EAAOC,GACjC,GAAI7Q,GAAKC,IAET2Q,GAAME,cAEN9Q,EAAG+Q,KAAO/Q,EAAG+Q,SAEb/Q,EAAGgR,SAAW,WACZJ,EACGI,SAAShR,EAAG+Q,MACZnQ,KAAKgQ,EAAMK,YACXrQ,KAAK,WACJiQ,EAAOK,GAAG,kBAoClBP,EAAmBzN,SAAW,QAAS,UArDvC3D,QACGC,OAAO,UACP8D,WAAW,qBAAsBqN,MAqBtC,WACE,YAOA,SAASQ,GAAkBzM,EAAQkM,EAAOhR,GACxC,GAAII,GAAKC,IACTD,GAAG0E,OAASA,EAEZ1E,EAAGoR,YACCC,IAAK,EAAGnP,KAAM,cACdmP,IAAK,EAAGnP,KAAM,kBAGlBlC,EAAGsR,oBACCD,IAAK,EAAGnP,KAAM,aACdmP,IAAK,EAAGnP,KAAM,aACdmP,IAAK,EAAGnP,KAAM,YAGlBlC,EAAGwF,OAAS,WACVxF,EAAGK,WAAWL,EAAGW,MACdC,KAAKgQ,EAAMjL,QACX/E,KAAKZ,EAAGuR,YAFXvR,WAGWA,EAAGS,eAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGuR,WAAa,SAAUjR,GAKxB,MAJAN,GAAGW,MACD6Q,KAAM9M,EAAO+M,YAAYD,KACzBE,aAAchN,EAAO+M,YAAYC,cAE5B9R,EAAGY,QAAQF,IAGpBN,EAAGK,aACAO,KAAKgQ,EAAMe,MACX/Q,KAAKZ,EAAGuR,YACR3Q,KAAKZ,EAAGS,cAMb0Q,EAAkBjO,SAAW,SAAU,QAAS,MAtDhD3D,QACGC,OAAO,UACP8D,WAAW,oBAAqB6N,MAkDrC,WACE,YAOA,SAASS,GAAgBlN,EAAQmC,EAAQwB,EAAOzI,EAAI6E,GAClD,GAAIzE,GAAKC,IACTD,GAAG0E,OAASA,EAGZ1E,EAAGmQ,mBAAqB,WAEtB,GAAIzL,EAAO6C,aAAX,CAGA,IAAK,GAAI6I,GAAI,EAAGA,EAAI1L,EAAOmC,OAAO7E,OAAQoO,IACxC,GAAG1L,EAAOmC,OAAOuJ,GAAG5I,SAAW9C,EAAO6C,aAAaC,OAAO,CACxD9C,EAAOmC,OAAOuJ,GAAK1L,EAAO6C,YAC1B,OAIJ,MAAOvH,GACJK,WAAWqE,EAAO6C,aAAaC,QAC/B5G,KAAKyH,EAAMgI,MAFPrQ,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAG6R,eAAiB,WAClBpN,EAAUG,MACNvB,YAAa,qCACbC,WAAY,wBACZC,aAAc,cACdsB,YAAa,kBACZC,OACFlE,KAAK,SAAUN,GACXf,QAAQwH,UAAUzG,IACnBN,EAAGK,WAAWC,GACXM,KAAKyH,EAAMyJ,YACXlR,KAAKyH,EAAMkI,QACX3P,KAAKyH,EAAMgI,MAHdrQ,WAIWA,EAAGS,iBAKtBoG,EACGwJ,OACAzP,KAAKZ,EAAGmQ,oBAHbyB,EAAgB1O,SAAW,SAAU,SAAU,QAAS,KAAM,aAvD9D3D,QACGC,OAAO,UACP8D,WAAW,kBAAmBsO,MA4DnC,WACE,YAOA,SAASG,GAAkBrN,EAAQmC,EAAQjH,EAAI6E,EAAW1E,GACxD,GAAIC,GAAKC,IACTD,GAAG0E,OAASA,EAGZ1E,EAAGmQ,mBAAqB,WAEtB,GAAIzL,EAAO6C,aAAX,CAGA,IAAK,GAAI6I,GAAI,EAAGA,EAAI1L,EAAOmC,OAAO7E,OAAQoO,IACxC,GAAG1L,EAAOmC,OAAOuJ,GAAG5I,SAAW9C,EAAO6C,aAAaC,OAAO,CACxD9C,EAAOmC,OAAOuJ,GAAK1L,EAAO6C,YAC1B,OAIJ,MAAOvH,GACJK,WAAWqE,EAAO6C,aAAaC,QAC/B5G,KAAKiG,EAAOkF,MACZnL,KAAKb,EAAMsQ,MACXzP,KAAKZ,EAAGgS,YAJJhS,WAKIA,EAAGS,gBAIhBT,EAAGgS,WAAa,WAEd,GAAItN,EAAO6C,cAAiB7C,EAAO6C,aAAaxH,OAA8C,IAArC2E,EAAO6C,aAAaxH,MAAMiC,OAAnF,CAKA,GAAI0C,EAAO6C,aAAa0K,aAMtB,IAAK,GAAI7B,GAAI,EAAGA,EAAI1L,EAAO6C,aAAaxH,MAAMiC,OAAQoO,IACpD,GAAG1L,EAAO6C,aAAaxH,MAAMqQ,GAAG7O,SAAWvB,EAAG0E,OAAO6C,aAAa0K,YAAY1Q,OAAO,CACnFvB,EAAG0E,OAAO6C,aAAa0K,YAAcvN,EAAO6C,aAAaxH,MAAMqQ,EAC/D,YAPJ1L,GAAO6C,aAAa0K,YAAcvN,EAAO6C,aAAaxH,MAAM,EAY9D,OAAOC,GACJK,aACAO,KAAKb,EAAM0C,aAFPzC,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGkS,gBAAkB,WACnBzN,EAAUG,MACNvB,YAAa,uCACbC,WAAY,yBACZC,aAAc,eACdsB,YAAa,kBACZC,OACFlE,KAAK,SAAUN,GACXf,QAAQwH,UAAUzG,IACnBN,EAAGK,WAAWC,GACXM,KAAKb,EAAMwJ,aACX3I,KAAKb,EAAMoS,cAFdnS,WAGWA,EAAGS,iBAMtBoG,EACGwJ,OACAzP,KAAKZ,EAAGmQ,oBAhCb4B,EAAkB7O,SAAW,SAAU,SAAU,KAAM,YAAa,SAxDpE3D,QACGC,OAAO,UACP8D,WAAW,oBAAqByO,MA0FrC,WACE,YAOA,SAASK,GAAyB1N,EAAQmC,EAAQhH,EAASD,EAAI6E,EAAW1E,GACxE,GAAIC,GAAKC,IACTD,GAAG0E,OAASA,EAGZ1E,EAAGmQ,mBAAqB,WAEtB,GAAIzL,EAAO6C,aAAX,CAGA,IAAK,GAAI6I,GAAI,EAAGA,EAAI1L,EAAO+M,YAAYY,cAAcrQ,OAAQoO,IAC3D,GAAG1L,EAAO+M,YAAYY,cAAcjC,GAAG5I,SAAW9C,EAAO6C,aAAaC,OAAO;AAC3E9C,EAAO6C,aAAe7C,EAAO+M,YAAYY,cAAcjC,EACvD,OAIJ,MAAOpQ,GACJK,WAAWqE,EAAO6C,aAAaC,QAC/B5G,KAAKiG,EAAOkF,MACZnL,KAAKb,EAAMsQ,MACXzP,KAAKZ,EAAGsS,gBAJJtS,WAKIA,EAAGS,gBAIhBT,EAAGsS,eAAiB,WAElB,GAAI5N,EAAO6C,cAAiB7C,EAAO6C,aAAagL,WAAsD,IAAzC7N,EAAO6C,aAAagL,UAAUvQ,OAA3F,CAKA,GAAI0C,EAAO6C,aAAa+E,YAMtB,IAAK,GAAI8D,GAAI,EAAGA,EAAI1L,EAAO6C,aAAagL,UAAUvQ,OAAQoO,IACxD,GAAG1L,EAAO6C,aAAagL,UAAUnC,GAAG/F,YAAcrK,EAAG0E,OAAO6C,aAAa+E,WAAWjC,UAAU,CAC5FrK,EAAG0E,OAAO6C,aAAa+E,WAAa5H,EAAO6C,aAAagL,UAAUnC,EAClE,YAPJ1L,GAAO6C,aAAa+E,WAAa5H,EAAO6C,aAAagL,UAAU,EAYjE,OAAOvS,GACJK,aACAO,KAAKf,EAAQwQ,MAFTrQ,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAIpBuG,EACG2L,cACA5R,KAAKZ,EAAGmQ,oBAdbiC,EAAyBlP,SAAW,SAAU,SAAU,UAAW,KAAM,YAAa,SAzDtF3D,QACGC,OAAO,UACP8D,WAAW,2BAA4B8O,MAyE5C,WACE,YAOA,SAASK,GAAwB/N,EAAQmC,GACvC,GAAI7G,GAAKC,IAGTD,GAAG0E,OAASA,EAGZmC,EAAO2L,cA8CTC,EAAwBvP,SAAW,SAAU,UA1D7C3D,QACGC,OAAO,UACP8D,WAAW,0BAA2BmP,MAc3C,WACE,YAOA,SAASC,GAAgB9B,EAAOC,EAAQ8B,GACtC,GAAI3S,GAAKC,IAET2Q,GAAME,cAEN9Q,EAAG+Q,KAAO/Q,EAAG+Q,SAGb/Q,EAAG4S,MAAQ,WACThC,EACGgC,MAAM5S,EAAG+Q,MACTnQ,KAAK,WACJiQ,EAAOK,GAAG,kBAKhBlR,EAAG6S,cAAgB,WACjBF,EAAKC,MAAM,MAAMlP,MAAO,0BAoC5BgP,EAAgBxP,SAAW,QAAS,SAAU,QA3D9C3D,QACGC,OAAO,UACP8D,WAAW,kBAAmBoP,MA0BnC,WACE,YAOA,SAASI,GAAsBpO,EAAQmC,EAAQ4D,EAAa7K,EAAI6E,GAC9D,GAAIzE,GAAKC,IACTD,GAAG0E,OAASA,EAEZ1E,EAAG+S,oBAAsB,WACvBtO,EAAUG,MACNvB,YAAa,2CACbC,WAAY,6BACZC,aAAc,mBACdsB,YAAa,kBACZC,OACFlE,KAAK,SAAUN,GACXf,QAAQwH,UAAUzG,IACnBN,EAAGK,WAAWC,GACXM,KAAK6J,EAAYuI,iBACjBpS,KAAK6J,EAAY8F,QACjB3P,KAAK6J,EAAYE,UAHpB3K,WAIWA,EAAGS,iBAKtBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBuG,EAAOwJ,OACP5F,EAAYE,WAsBdmI,EAAsB5P,SAAW,SAAU,SAAU,cAAe,KAAM,aA5D1E3D,QACGC,OAAO,UACP8D,WAAW,wBAAyBwP,MAwCzC,WACE,YAOA,SAASG,GAAiBvO,EAAQmC,EAAQ4D,EAAamG,GACrD,GAAI5Q,GAAKC,IAGTD,GAAG0E,OAASA,EAGZ1E,EAAGkT,eAGCC,aAAeC,gBAAiB,KAChCzD,MAAO,wBACP0D,SAAU,gBAGVF,aAAeC,gBAAiB,KAChCzD,MAAO,oBACP0D,SAAU,gBAIdrT,EAAGsT,iBAAmB,SAAU5I,GAC9BD,EACG8I,OAAO7I,GACP9J,KAAK6J,EAAY+I,cACjB5S,KAAKgQ,EAAM7E,OAGhB/L,EAAGyT,kBAAoB,SAAU/I,GAC/BD,EACGiJ,QAAQhJ,GACR9J,KAAK6J,EAAY+I,eAItB3M,EAAOwJ,OACP5F,EAAY+I,eAoBdP,EAAiB/P,SAAW,SAAU,SAAU,cAAe,SA7D/D3D,QACGC,OAAO,UACP8D,WAAW,mBAAoB2P,MA2CpC,WACE,YAOA,SAASU,GAAuBjP,EAAQmC,EAAQjH,GAC9C,GAAII,GAAKC,IACTD,GAAG0E,OAASA,EAGZ1E,EAAGmQ,mBAAqB,WAEtB,GAAIzL,EAAO6C,aAAX,CAGA,IAAK,GAAI6I,GAAI,EAAGA,EAAI1L,EAAOmC,OAAO7E,OAAQoO,IACxC,GAAG1L,EAAOmC,OAAOuJ,GAAG5I,SAAW9C,EAAO6C,aAAaC,OAAO,CACxD9C,EAAOmC,OAAOuJ,GAAK1L,EAAO6C,YAC1B,OAIJ,MAAOvH,GACJK,WAAWqE,EAAO6C,aAAaC,QAC/B5G,KAAK,SAAUgT,GACd,MAAOhU,GAAGiU,KACRhN,EAAOiN,YAAYF,GACnB/M,EAAOkN,aAAaH,GACpB/M,EAAOmN,oBAAoBJ,OAN1B5T,WASIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAIpBN,EAAGiU,cAECC,OAAQ,cACRb,SAAU,cACVc,aAAc,2CACdnT,SAAU,UACVqM,aAAc,kBACd+G,SAEIlS,KAAM,iBACN2G,IAAK,aAGL3G,KAAM,oBACN2G,IAAK,gBAGL3G,KAAM,UACN2G,IAAK,aAGL3G,KAAM,qBACN2G,IAAK,mBAGTwL,UACEtI,MAAM,EACNuI,MAAM,EACNC,UAAQ,EACRC,YAAY,EACZC,cAAc,KAIhBP,OAAQ,UACRb,SAAU,cACVc,aAAc,uCACdnT,SAAU,WACVqM,aAAc,kBACd+G,SAEIlS,KAAM,iBACN2G,IAAK,aAGL3G,KAAM,oBACN2G,IAAK,gBAGL3G,KAAM,UACN2G,IAAK,aAGL3G,KAAM,qBACN2G,IAAK,mBAGTwL,UACEtI,MAAM,EACNuI,MAAM,EACNC,UAAQ,EACRC,YAAY,EACZC,cAAc,KAIhBP,OAAQ,cACRb,SAAU,aACVc,aAAc,2CACdnT,SAAU,kBACVqM,aAAc,eACd+G,SAEIlS,KAAM,iBACN2G,IAAK,aAGL3G,KAAM,oBACN2G,IAAK,gBAGL3G,KAAM,UACN2G,IAAK,aAGL3G,KAAM,qBACN2G,IAAK,gBAGT6L,eAEIxS,KAAM,qBACN2G,IAAK,8BAGL3G,KAAM,yBACN2G,IAAK,uBAGL3G,KAAM,QACN2G,IAAK,yBAGL3G,KAAM,OACN2G,IAAK,SAGTwL,UACEtI,MAAM,EACNuI,MAAM,EACNC,UAAQ,EACRC,YACEG,oBACEnD,KAAM,SACN1I,UAAW5G,KAAK,IAAIsM,MAAM,IAAItM,KAAK,IAAIsM,MAAM,IAAItM,KAAK,IAAIsM,MAAM,IAAItM,KAAK,IAAIsM,MAAM,IAAItM,KAAK,IAAIsM,MAAM,IAAItM,KAAK,IAAIsM,MAAM,IAAItM,KAAK,IAAIsM,MAAM,IAAItM,KAAK,IAAIsM,MAAM,IAAItM,KAAK,IAAIsM,MAAM,IAAItM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,KAAKtM,KAAK,KAAKsM,MAAM,MAE1ZoG,sBACEpD,KAAM,SACN1I,UAAW5G,KAAK,eAAesM,MAAM,IAAItM,KAAK,WAAWsM,MAAM,KAEjEqG,MACErD,KAAM,SAGViD,cAAc,KAMpB5N,EACGwJ,OACAzP,KAAKZ,EAAGmQ,oBAnHbwD,EAAuBzQ,SAAW,SAAU,SAAU,MA9DtD3D,QACGC,OAAO,UACP8D,WAAW,yBAA0BqQ,MAmL1C,WACE,YAOA,SAASmB,GAAsBC,EAAQlO,EAAQmO,EAASC,EAAQlV,EAAOF,EAASqV,EAAMrE,EAAQnM,EAAQ/E,GACpG,GAAIK,GAAKC,IAETD,GAAG0E,OAASA,EAEZ1E,EAAGkP,OAAS,GAAI6F,IAAQI,WAAY,EAAGC,cAAe,IAItDpV,EAAGqV,mBAAoB,EAEvBrV,EAAGsG,WAAa3G,EAAM4G,gBAEtBvG,EAAGsV,iBAAmB,WAChBtV,EAAGuV,MAAMxV,QACXC,EAAGuV,MAAMxV,SACTC,EAAGwV,UACHxV,EAAGwV,YAIPxV,EAAGwV,QAAU,WACRxV,EAAGuV,OAAgC,IAAvBvV,EAAGuV,MAAME,UACtBzV,EAAGuV,MAAMxV,MAAM+C,MAAMZ,KAAM,KAG3BlC,EAAGuV,MAAMxV,MAAM+C,MAAMZ,KAAM,GAAIwT,MAAO,MAI1C1V,EAAG2V,WAAa,SAAUC,GACrB5V,EAAGuV,MAAMxV,MAAMiC,QAAU,EAC1BiT,EAAOY,MAAM,4CAA8C,oCAG3D7V,EAAGuV,MAAMxV,MAAMgE,OAAO6R,EAAM,IAIhC5V,EAAG8V,UAAY,WACT9V,EAAGuV,QAAOvV,EAAGuV,UAGG,GAAjBvV,EAAG+V,MAAMvE,MACVxR,EAAGuV,MAAME,UAAY,IACrBzV,EAAGsV,oBAIGtV,EAAGqV,oBACTrV,EAAGuV,MAAME,UAAY,IACrBzV,EAAGsV,oBAGLtV,EAAGkP,OAAO8G,QAGZhW,EAAGiW,YAAc,WAEf,MADAf,GAAKvD,KAAK,sBACH9K,EACJ2E,WAAWxL,EAAG+V,OACdnV,KAAKiG,EAAO0J,SAGjBvQ,EAAGkW,UAAY,WACblW,EAAGkP,OAAO8G,QAGZhW,EAAGmW,YAAc,WAEf,MADAjB,GAAKvD,KAAK,wBACH5R,EACJqW,WAAWpW,EAAGuV,OACd3U,KAAKb,EAAMsW,WAGhBrW,EAAGsW,UAAY,WACbtW,EAAGuW,gBAGLvW,EAAGwW,YAAc,WAEf,MADAtB,GAAKvD,KAAK,2BACH9R,EAAQiM,eAAepH,EAAO6C,aAAaC,SAGpDxH,EAAGuW,aAAe,WAChBvW,EAAGkP,OAAO3O,SAAU,EACpBP,EAAGiW,cACArV,KAAKZ,EAAGmW,aACRvV,KAAKZ,EAAGwW,aACR5V,KAAK,WACJiQ,EAAOK,GAAG,uBAJdlR,WAMW,WACPA,EAAGkP,OAAO3O,SAAU,KAnC5BuU,EAAsB5R,SAAW,SAAU,SAAU,UAAW,SAAU,QAAS,UAAW,OAAQ,SAAU,SAAU,SA/D1H3D,QACGC,OAAO,UACP8D,WAAW,wBAAyBwR,MAsGzC,WACE,YAOA,SAAS2B,GAAmB/R,EAAQmC,EAAQhH,EAASD,EAAI6E,EAAW1E,GAClE,GAAIC,GAAKC,IACTD,GAAG0E,OAASA,EAGZ1E,EAAGmQ,mBAAqB,WAEtB,GAAIzL,EAAO6C,aAAX,CAGA,IAAK,GAAI6I,GAAI,EAAGA,EAAI1L,EAAOmC,OAAO7E,OAAQoO,IACxC,GAAG1L,EAAOmC,OAAOuJ,GAAG5I,SAAW9C,EAAO6C,aAAaC,OAAO,CACxD9C,EAAOmC,OAAOuJ,GAAK1L,EAAO6C,YAC1B,OAIJ,MAAOvH,GACJK,WAAWqE,EAAO6C,aAAaC,QAC/B5G,KAAKiG,EAAOkF,MACZnL,KAAKb,EAAMsQ,MACXzP,KAAKZ,EAAGsS,gBAJJtS,WAKIA,EAAGS,gBAIhBT,EAAGsS,eAAiB,WAElB,GAAI5N,EAAO6C,cAAiB7C,EAAO6C,aAAagL,WAAsD,IAAzC7N,EAAO6C,aAAagL,UAAUvQ,OAA3F,CAKA,GAAI0C,EAAO6C,aAAa+E,YAMtB,IAAK,GAAI8D,GAAI,EAAGA,EAAI1L,EAAO6C,aAAagL,UAAUvQ,OAAQoO,IACxD,GAAG1L,EAAO6C,aAAagL,UAAUnC,GAAG/F,YAAcrK,EAAG0E,OAAO6C,aAAa+E,WAAWjC,UAAU,CAC5FrK,EAAG0E,OAAO6C,aAAa+E,WAAa5H,EAAO6C,aAAagL,UAAUnC,EAClE,YAPJ1L,GAAO6C,aAAa+E,WAAa5H,EAAO6C,aAAagL,UAAU,EAYjE,OAAOvS,GACJK,aACAO,KAAKf,EAAQwQ,MAFTrQ,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAG0W,eAAiB,WAClBjS,EAAUG,MACNvB,YAAa,wCACbC,WAAY,wBACZC,aAAc,cACdsB,YAAa,kBACZC,OACFlE,KAAK,SAAUN,GACXf,QAAQwH,UAAUzG,IACnBN,EAAGK,WAAWC,GACXM,KAAKf,EAAQsK,YACbvJ,KAAKf,EAAQ0Q,QACb3P,KAAKf,EAAQwQ,MAHhBrQ,WAIWA,EAAGS,iBAKtBT,EAAG2W,aAAe,WAChBlS,EAAUG,MACNvB,YAAa,2CACbC,WAAY,sBACZC,aAAc,YACdsB,YAAa,kBACZC,OACFlE,KAAK,SAAUN,GACXf,QAAQwH,UAAUzG,IACnBN,EAAGK,WAAWC,GACXM,KAAKf,EAAQ+W,UACbhW,KAAKf,EAAQgX,WACbjW,KAAK,SAAUN,GAEd,MADAoE,GAAO6C,aAAa+E,WAAahM,EAC1BA,IAERM,KAAKZ,EAAGsS,gBAPXtS,WAQWA,EAAGS,iBAMtBoG,EACGwJ,OACAzP,KAAKZ,EAAGmQ,oBA/CbsG,EAAmBvT,SAAW,SAAU,SAAU,UAAW,KAAM,YAAa,SAhEhF3D,QACGC,OAAO,UACP8D,WAAW,qBAAsBmT,MAiHtC,WACE,YAOA,SAASK,GAAiBpS,EAAQkM,GAE7BlM,EAAO+M,aAAe/M,EAAO+M,YAAYsF,UAC1CnG,EACGK,WAAWvM,EAAO+M,aADrBb,SAESA,EAAME,aAKfF,EAAME,cAkDVgG,EAAiB5T,SAAW,SAAU,SAjEtC3D,QACGC,OAAO,UACP8D,WAAW,mBAAoBwT,MAkBpC,WACE,YAOA,SAASE,KACP,MAAO,UAAS9H,GACd,MAAO,QAAUA,EAAOC,YAAc,OAASD,EAAOiG,YAP1D5V,QACGC,OAAO,UACPyX,OAAO,qBAAsBD,MAalCzX,QAAQC,OAAO,UAIZ0X,QAAQ,SAAU,WACjB,GAAIC,IACFhC,WAAY,EACZC,cAAe,EAGjB,OAAO,UAAiBtM,GACtB7I,KAAK6I,QAAUvJ,QAAQ6X,MAAMD,EAAUrO,GAEvC7I,KAAKkV,WAAalV,KAAK6I,QAAQqM,WAC/BlV,KAAKkP,YAAclP,KAAK6I,QAAQsM,cAEhCnV,KAAK+V,KAAO,WACP/V,KAAKkP,YAAclP,KAAKkV,YACzBlV,KAAKkP,eAITlP,KAAKoX,KAAO,WACPpX,KAAKkP,YAAc,GACpBlP,KAAKkP,kBAQf5P,QAAQC,OAAO,UAIZ0X,QAAQ,QAAS,WAChB,GAAIvX,IACF2X,SAAU,SAAUC,GAClB,GAAIA,EAAJ,CAEA,GAAIjX,MACAyP,EAAQwH,EAAIC,MAAM,KAMtB,OALAjY,SAAQqD,QAAQmN,EAAO,SAAU0H,GAC/B,GAAID,GAAQC,EAAKD,MAAM,IACH,KAAjBA,EAAMxV,QACT1B,EAAIwC,KAAK0U,EAAM,GAAGE,OAAS,IAAMF,EAAM,GAAGE,OAAS,IAAMF,EAAM,GAAGE,UAElD,IAAfpX,EAAI0B,OACE1B,EAAI,GAGJA,IAGXqX,SAAU,SAAUC,EAAWC,GAC7B,GAAID,EAAJ,CAEA,GAAIJ,GAAQI,EAAUJ,MAAM,IAC5B,IAAoB,IAAjBA,EAAMxV,OAAT,CACA,GAAI1B,GAAMkX,EAAM,GAAGE,OAAS,IAAMF,EAAM,GAAGE,OAAS,IAAMF,EAAM,GAAGE,MAKnE,OAHGG,KACDvX,GAAQ,OAASX,EAAMgY,SAASE,IAE3BvX,KAETwX,SAAU,SAAUP,GAClB,MAAOA,IAcThR,cAAe,WACb,OAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAE9GnG,OAAQ,WACN,OAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAE5DuI,8BAA+B,WAC7B,OACIoP,UAAkB,kBAClBC,WAAkB,oBAClBC,MAAkB,QAClBC,OAAkB,WAClBC,gBAAkB,wBAGxBjY,UAAW,WACT,QAEI6I,GAAI,EACJ7G,KAAM,gBAGN6G,GAAI,EACJ7G,KAAM,qCAGN6G,GAAI,EACJ7G,KAAM,wBAMd,OAAOvC,KAKXJ,QAAQC,OAAO,UAKZ0X,QAAQ,UAAW,WAClB,GAAIkB,KAEJ,OAAOA,KAGX,WACE,YAyEA,SAASC,KAzDP,QAASC,GAAe5U,EAAOb,GAC7BA,EAAG0V,aAAaC,WAAW,IAyD7BF,EAAepV,SAAW,QAAS,KAlEnC,IAAIC,IACFC,SAAU,IACViC,KAAMiT,EAGR,OAAOnV,GAXT5D,QACGC,OAAO,UACP2D,UAAU,aAAckV,MAmB7B,WACE,YAOA,SAASI,KAYP,QAASC,GAAShV,EAAOb,GACvB,GAAI8V,IAAU,EACVC,EAASrZ,QAAQiQ,QAAQ9L,EAAM+U,YAEnC/U,GAAMyI,OAAO,cAAe,WAC1ByM,EAAOC,YAAY,wBAAwBA,YAAY,eAAeA,YAAY,gBAClFD,EAASrZ,QAAQiQ,QAAQ9L,EAAM+U,aAC/BG,EAAOtJ,SAAS,wBACb5L,EAAMoV,aACPF,EAAOtJ,SAAS,gBAElB5L,EAAMqV,qBAGRrV,EAAMqV,iBAAmB,WACpBJ,EACDC,EAAOC,YAAY,eAGnBD,EAAOtJ,SAAS,gBAIpBzM,EAAGqC,MAAM,WACDyT,IACFA,GAAU,EACVjV,EAAMqV,qBAGV,WACKJ,IACDA,GAAU,EACVjV,EAAMqV,sBA3Cd,GAAI5V,IACFC,SAAU,IACViC,KAAMqT,EACNhV,OACE+U,YAAa,IACbK,YAAa,KAIjB,OAAO3V,GAfT5D,QACGC,OAAO,UACP2D,UAAU,cAAesV,MA0D9BlZ,QAAQC,OAAO,UAMZ0X,QAAQ,WAAA,KAAA,UAAA,SAAA,iBAAA,OAAA,QAAW,SAAUtX,EAAIoZ,EAAStU,EAAQuU,EAAgB/D,EAAMvV,GACvE,GAAIqV,IAKFkE,cAAe,SAAS5Y,GAEtB,OAAQA,EAAI6Y,aACV,IAAK,KACH,MAAO7Y,GAAI8Y,IACb,SACE,MAAOxZ,GAAGyZ,QAAQxD,MAAOvV,EAAIuV,UAOnCyD,YAAa,SAAUhZ,GACrB,MAAGf,SAAQoD,QAAQrC,IAAuB,IAAfA,EAAI0B,OAAqB1B,EAAI,GACjDA,GAMTiZ,SAAU,SAAUjZ,GAClB,GAAIkZ,EACJ,OAAGja,SAAQoD,QAAQrC,IACjBkZ,KACAja,QAAQqD,QAAQtC,EAAK,SAAUuC,GAC7B2W,EAAO1W,KAAKkS,EAAQuE,SAAS1W,MAExB2W,GAEDja,QAAQ4C,SAAS7B,IACvBkZ,KACAja,QAAQqD,QAAQtC,EAAK,SAASmZ,EAAEC,GAC9BF,EAAOR,EAAQ,YAAYU,IAAM1E,EAAQuE,SAASE,KAE7CD,GAGAlZ,GAOXqZ,mBAAoB,SAAUrZ,GAE5B,MADAA,GAAIsZ,YAActZ,EAAIsZ,aAAetZ,EAAIuZ,OAASvZ,EAAI4B,MAAQ,eACvD5B,GAMTwZ,kBAAmB,SAAUxZ,GAE3B,MADAoE,GAAO+M,YAAcnR,EACdA,GAGTyZ,sBAAuB,SAAUzZ,GAE/B,MADAoE,GAAO+M,YAAYuI,gBAAkB1Z,EAC9BA,GAGT2Z,0BAA2B,SAAU3Z,GAEnC,MADAoE,GAAO+M,YAAYyI,oBAAsB5Z,EAClCA,GAMT6Z,uBAAwB,SAAU7Z,GAEhC,MADGA,GAAI8Z,cAAc1V,EAAO+M,YAAY2I,gBACjC7a,QAAQ6X,MAAM1S,EAAO+M,YAAanR,IAM3C+Z,kBAAmB,SAAU/Z,GAE3B,MADAoE,GAAO+M,YAAY6I,YAAcha,EAC1BA,GAMTia,kBAAmB,SAAUja,GAG3B,MAFAA,GAAIka,YAAc,mCAClBla,EAAIma,KAAO,GACJna,GAMToa,oBAAqB,SAAUpa,GAE7B,MADA2Y,GAAe0B,SAAS,cAAejW,EAAO+M,aACvCnR,GAMTsa,qBAAsB,SAAUta,GAE9B,GAAGf,QAAQoD,QAAQrC,GAAK,CACtB,GAAIkZ,KAIJ,OAHAja,SAAQqD,QAAQtC,EAAK,SAAUuC,GAC7B2W,EAAO1W,KAAKkS,EAAQ4F,qBAAqB/X,MAEpC2W,EA0BT,GAtBuB,IAApBlZ,EAAIua,YACLva,EAAIwa,kBAAoB,mBACE,IAApBxa,EAAIua,cACVva,EAAIwa,kBAAoB,eAGN,IAAjBxa,EAAIya,SACLza,EAAI0a,eAAiB,sBACE,IAAjB1a,EAAIya,WACVza,EAAI0a,eAAiB,oBAGnB1a,EAAI2a,OAAS3a,EAAI4a,eAAiB5a,EAAI6a,cACxC7a,EAAI2a,MAAQtb,EAAMgY,SAASrX,EAAI4a,cAAe5a,EAAI6a,cAIjD5b,QAAQ6b,YAAY9a,EAAI8S,mBACzB9S,EAAI8S,gBAAkB,GAIrB7T,QAAQiD,SAASlC,EAAI+a,gBAAkB9b,QAAQoD,QAAQrC,EAAIiS,WAC5D,IAAK,GAAInC,GAAI,EAAGA,EAAI9P,EAAIiS,UAAUvQ,OAAQoO,IACxC,GAAG9P,EAAIiS,UAAUnC,GAAG/F,YAAc/J,EAAI+a,cAAc,CAClD/a,EAAIiM,eAAiBjM,EAAIiS,UAAUnC,EACnC,OAsBN,MAhBA9P,GAAI4X,QACF5X,EAAIgb,SACJhb,EAAI0a,eACJ1a,EAAIwa,kBACJxa,EAAIib,SAAWjb,EAAIib,QAAQC,UAAY,GACvClb,EAAImb,SACJnb,EAAIob,YACJC,KAAK,KAGJpc,QAAQoD,QAAQrC,EAAIiS,YACrBjS,EAAIiS,UAAUqJ,KAAK,SAAUC,EAAEC,GAC7B,MAAOD,GAAEE,SAAWD,EAAEC,WAInBzb,GAMT0b,0BAA2B,SAAU1b,GAEnC,GAAGf,QAAQoD,QAAQrC,GAAK,CACtB,GAAIkZ,KAIJ,OAHAja,SAAQqD,QAAQtC,EAAK,SAAUuC,GAC7B2W,EAAO1W,KAAKkS,EAAQgH,0BAA0BnZ,MAEzC2W,EAIT,OAAQlZ,EAAI2b,QACV,IAAK,IACH3b,EAAI4b,aAAe,WACnB,MACF,KAAK,IACH5b,EAAI4b,aAAe,WACnB,MACF,KAAK,IACH5b,EAAI4b,aAAe,WACnB,MACF,KAAK,IACH5b,EAAI4b,aAAe,aAWvB,OAJI5b,EAAI6b,sBAAwB7b,EAAI8b,iBAClC9b,EAAI6b,qBAAuBxc,EAAMgY,SAASrX,EAAI8b,iBAGzC9b,GAMT+b,aAAc,SAAU/b,GAEtB,MADAoE,GAAOmC,OAASvG,EACTA,GAMTgc,oBAAqB,SAAUhc,GAE7B,MADAoE,GAAO+M,YAAYY,cAAgB/R,EAC5BA,GAMTic,YAAa,SAAUjc,GAErB,GAAI8P,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAI1L,EAAOmC,OAAO7E,QACvB0C,EAAOmC,OAAOuJ,GAAG5I,SAAWlH,EAAIkH,OADD4I,KASpC,MAHGA,IAAK,GAAKA,EAAI1L,EAAOmC,OAAO7E,QAC7B0C,EAAOmC,OAAO9C,OAAOqM,EAAE,GAElB9P,GAMTkc,eAAgB,SAAUlc,GAExB,MADA2Y,GAAe0B,SAAS,SAAUjW,EAAOmC,QAClCvG,GAMTmc,cAAe,SAAUnc,GAEvB,MADAoE,GAAO6W,QAAUjb,EACVA,GAMToc,gBAAiB,SAAUpc,GAEzB,MADA2Y,GAAe0B,SAAS,UAAWjW,EAAO6W,SACnCjb,GAMT6P,mBAAoB,SAAU7P,GAC5B,GAAIqc,IAAqB,CACtBjY,GAAO6C,cAAgB7C,EAAO6C,aAAaC,SAAWlH,EAAIkH,SAC3DjI,QAAQ6X,MAAM1S,EAAO6C,aAAcjH,GACnCqc,GAAqB,EAGvB,IAAIvM,GAAI,CACR,IAAG7Q,QAAQoD,QAAQ+B,EAAOmC,QACxB,KAAOuJ,EAAI1L,EAAOmC,OAAO7E,OAAQoO,IAC/B,GAAG1L,EAAOmC,OAAOuJ,GAAG5I,SAAWlH,EAAIkH,OAAO,CACrCmV,EACDjY,EAAOmC,OAAOuJ,GAAK1L,EAAO6C,cAG1BhI,QAAQ6X,MAAM1S,EAAOmC,OAAOuJ,GAAI9P,GAChCoE,EAAO6C,aAAe7C,EAAOmC,OAAOuJ,GAEtC,OAaN,MARGA,KAAM1L,EAAOmC,OAAO7E,SACrB0C,EAAO6C,aAAejH,EAClBf,QAAQoD,QAAQ+B,EAAOmC,UACzBnC,EAAOmC,WAETnC,EAAOmC,OAAO/D,KAAK4B,EAAO6C,eAGrB7C,EAAO6C,cAMhBqV,qBAAsB,SAAUtc,GAE9B,MADA2Y,GAAe0B,SAAS,eAAgBjW,EAAO6C,cACxCjH,GAOTuc,cAAe,SAAUvc,GACvB,MAAIoE,GAAO6C,cAAiB7C,EAAO6C,aAAa+E,YAChD5H,EAAO6C,aAAa+E,WAAWzM,QAAUS,EAClCA,GAF4DA,GAQrEwc,YAAa,SAAUxc,GACrB,IAAIoE,EAAO6C,eAAiB7C,EAAO6C,aAAa+E,aAAe/M,QAAQoD,QAAQ+B,EAAO6C,aAAa+E,WAAWzM,SAC5G,MAAOS,EAGT,KAAK,GAAI8P,GAAI,EAAGA,EAAI1L,EAAO6C,aAAa+E,WAAWzM,QAAQmC,OAAQoO,IACjE,GAAG1L,EAAO6C,aAAa+E,WAAWzM,QAAQuQ,GAAG1I,SAAWpH,EAAIoH,OAC1D,MAAOnI,SAAQ6X,MAAM1S,EAAO6C,aAAa+E,WAAWzM,QAAQuQ,GAAI9P,IAQtEyc,mBAAoB,SAAUhc,EAAST,GACrC,IAAIoE,EAAO6C,eAAiB7C,EAAO6C,aAAa+E,aAAe/M,QAAQoD,QAAQ+B,EAAO6C,aAAa+E,WAAWzM,SAC5G,MAAOS,EAGT,KAAK,GAAI8P,GAAI,EAAGA,EAAI1L,EAAO6C,aAAa+E,WAAWzM,QAAQmC,OAAQoO,IACjE,GAAG1L,EAAO6C,aAAa+E,WAAWzM,QAAQuQ,GAAG1I,QAAU3G,EAErD,MADA2D,GAAO6C,aAAa+E,WAAWzM,QAAQuQ,GAAG9L,QAAUhE,EAC7CA,GAKb0c,oBAAqB,SAAU1c,GAe7B,MAdGf,SAAQoD,QAAQrC,GACjBf,QAAQqD,QAAQtC,EAAK0U,EAAQgI,sBAI1B1c,EAAI2c,gBACL3c,EAAI4c,oBAAsBvd,EAAMgY,SAASrX,EAAI2c,gBAG5C1d,QAAQoD,QAAQrC,EAAI6c,kBACrBnI,EAAQoI,oBAAoB9c,EAAI6c,kBAI7B7c,GAGT+c,oBAAqB,SAAU/c,GAC7B,GAAGf,QAAQoD,QAAQrC,GACjBf,QAAQqD,QAAQtC,EAAK0U,EAAQqI,yBAG3B,CACF,OAAQ/c,EAAIgd,YACV,IAAK,IACHhd,EAAIid,iBAAmB,gBACvB,MACF,KAAK,IACHjd,EAAIid,iBAAmB,aAMxBjd,EAAIkd,YACLld,EAAImd,gBAAkB9d,EAAMgY,SAASrX,EAAIkd,YAI7C,MAAOld,IAGTod,yBAA0B,SAAUpd,GAUlC,MATGf,SAAQoD,QAAQrC,GACjBf,QAAQqD,QAAQtC,EAAK0U,EAAQ0I,2BAI1Bpd,EAAIqd,cAAc3I,EAAQoI,oBAAoB9c,EAAIqd,cAClDrd,EAAIsd,iBAAiB5I,EAAQoI,oBAAoB9c,EAAIsd,kBAGnDtd,GAGT8c,oBAAqB,SAAU9c,GAC7B,GAAGf,QAAQoD,QAAQrC,GACjBf,QAAQqD,QAAQtC,EAAK0U,EAAQoI,yBAE3B,CACF,OAAQ9c,EAAIud,UACV,IAAK,GACHvd,EAAIwd,eAAiB,aACrB,MACF,KAAK,GACHxd,EAAIwd,eAAiB,kCACrB,MACF,KAAK,GACHxd,EAAIwd,eAAiB,qBAKzB,OAAQxd,EAAIyd,qBACV,IAAK,GACHzd,EAAI0d,0BAA4B,aAChC,MACF,KAAK,GACH1d,EAAI0d,0BAA4B,kCAChC,MACF,KAAK,GACH1d,EAAI0d,0BAA4B,sBAOtC,MAAO1d,IAMT2d,eAAgB,SAAU3d,GAIxB,MAHGoE,GAAO6C,cAAgBhI,QAAQoD,QAAQ+B,EAAO6C,aAAagL,YAC5D7N,EAAO6C,aAAagL,UAAUzP,KAAKxC,GAE9BA,GAMT4d,YAAa,SAAU5d,GAIrB,MAHGoE,GAAO6C,eACR7C,EAAO6C,aAAaxH,MAAQO,GAEvBA,GAMT6d,iBAAkB,SAAU7d,GAI1B,MAHGoE,GAAO6C,eACR7C,EAAO6C,aAAa6W,WAAa9d,GAE5BA,GAMT+d,cAAe,SAAU/d,GAIvB,MAHGoE,GAAO6C,eACR7C,EAAO6C,aAAajD,QAAUhE,GAEzBA,GAGTge,cAAe,SAAUhe,GAIvB,MAHGoE,GAAO6C,eACR7C,EAAO6C,aAAagX,QAAUje,GAEzBA,GAGTke,eAAgB,SAAUle,GAIxB,MAHGoE,GAAO6C,eACR7C,EAAO6C,aAAakX,SAAWne,GAE1BA,GAGToe,sBAAuB,SAAUpe,GAI/B,MAHGoE,GAAO6C,eACR7C,EAAO6C,aAAaoX,gBAAkBre,GAEjCA,GAGTse,YAAa,SAAUte,GACrB,GAAGoE,EAAO6C,aACR,GAAGhI,QAAQoD,QAAQrC,GACjBoE,EAAO6C,aAAac,MAAQ/H,MAEzB,IAAGf,QAAQwH,UAAUzG,EAAIue,UAAYtf,QAAQoD,QAAQ+B,EAAO6C,aAAac,OAC5E,IAAK,GAAI+H,GAAI,EAAGA,EAAI1L,EAAO6C,aAAac,MAAMrG,OAAQoO,IACpD,GAAG1L,EAAO6C,aAAac,MAAM+H,GAAGyO,UAAYve,EAAIue,QAC9C,MAAOtf,SAAQ6X,MAAM1S,EAAO6C,aAAac,MAAM+H,GAAI9P,EAK3D,OAAOA,IAGT0R,WAAY,SAAU1R,GACpB,GAAGoE,EAAO6C,cAAgBjH,EAAIiB,QAAUhC,QAAQoD,QAAQ+B,EAAO6C,aAAaxH,OAC1E,IAAK,GAAIqQ,GAAI,EAAGA,EAAI1L,EAAO6C,aAAaxH,MAAMiC,OAAQoO,IACpD,GAAG1L,EAAO6C,aAAaxH,MAAMqQ,GAAG7O,SAAWjB,EAAIiB,OAC7C,MAAOhC,SAAQ6X,MAAM1S,EAAO6C,aAAaxH,MAAMqQ,GAAI9P,EAIzD,OAAOA,IAGTwe,cAAe,SAAUxe,GAIvB,MAHGoE,GAAO6C,cAAgB7C,EAAO6C,aAAa0K,cAC5CvN,EAAO6C,aAAa0K,YAAYtD,QAAUrO,GAErCA,GAGTmJ,aAAc,SAAUnJ,GACtB,GAAGoE,EAAO6C,cAAgB7C,EAAO6C,aAAa0K,aAAe1S,QAAQoD,QAAQ+B,EAAO6C,aAAa0K,YAAYtD,SAC3G,IAAK,GAAIyB,GAAI,EAAGA,EAAI1L,EAAO6C,aAAa0K,YAAYtD,QAAQ3M,OAAQoO,IAClE,GAAG1L,EAAO6C,aAAa0K,YAAYtD,QAAQyB,GAAG3O,SAAWnB,EAAImB,OAC3D,MAAOlC,SAAQ6X,MAAM1S,EAAO6C,aAAa0K,YAAYtD,QAAQyB,GAAI9P,EAIvE,OAAOA,IAGTye,aAAc,SAAUze,GAOtB,MANGoE,GAAO6C,cAAgB7C,EAAO6C,aAAa0K,cACxC1S,QAAQoD,QAAQ+B,EAAO6C,aAAa0K,YAAYtD,WAClDjK,EAAO6C,aAAa0K,YAAYtD,YAElCjK,EAAO6C,aAAa0K,YAAYtD,QAAQ7L,KAAKxC,IAExCA,GAGT0e,aAAc,SAAUje,EAAST,EAAK6D,GAEpC,GADIA,IAAYA,EAAa,WAC1BO,EAAO6C,cAAgBhI,QAAQoD,QAAQ+B,EAAO6C,aAAa+E,WAAWzM,SACvE,IAAK,GAAIuQ,GAAI,EAAGA,EAAI1L,EAAO6C,aAAa+E,WAAWzM,QAAQmC,OAAQoO,IAAK,CACtE,GAAI6O,GAAWva,EAAO6C,aAAa+E,WAAWzM,QAAQuQ,EACtD,IAAG6O,EAASvX,SAAW3G,EAAQ,CACzBxB,QAAQoD,QAAQsc,EAAS9a,MAC3B8a,EAAS9a,OAEX8a,EAAS9a,GAAYrB,KAAKxC,EAC1B,QAIN,MAAOA,IAGT4e,WAAY,SAAUne,EAAST,EAAKU,GAElC,GADIA,IAAUA,EAAW,SACtB0D,EAAO6C,cAAgBhI,QAAQoD,QAAQ+B,EAAO6C,aAAa+E,WAAWzM,SACvE,IAAK,GAAIuQ,GAAI,EAAGA,EAAI1L,EAAO6C,aAAa+E,WAAWzM,QAAQmC,OAAQoO,IAAK,CACtE,GAAI6O,GAAWva,EAAO6C,aAAa+E,WAAWzM,QAAQuQ,EACtD,IAAG6O,EAASvX,SAAW3G,EAAQ,CACzBxB,QAAQoD,QAAQsc,EAASje,MAC3Bie,EAASje,OAEXie,EAASje,GAAU8B,KAAKxC,EACxB,QAIN,MAAOA,IAGT6e,aAAc,SAAUpe,EAASqe,EAAUjb,GAEzC,GADIA,IAAYA,EAAa,WAC1BO,EAAO6C,cAAgBhI,QAAQoD,QAAQ+B,EAAO6C,aAAa+E,WAAWzM,SACvE,IAAK,GAAIuQ,GAAI,EAAGA,EAAI1L,EAAO6C,aAAa+E,WAAWzM,QAAQmC,OAAQoO,IAAK,CACtE,GAAI6O,GAAWva,EAAO6C,aAAa+E,WAAWzM,QAAQuQ,EACtD,IAAG6O,EAASvX,SAAW3G,EAAQ,CAC7B,IAAIxB,QAAQoD,QAAQsc,EAAS9a,IAAc,KAE3C,KADA,GAAIkb,GAAI,EACDA,EAAIJ,EAAS9a,GAAYnC,QAC3Bid,EAAS9a,GAAYkb,GAAG5d,SAAW2d,EADAC,KAGxC,GAAGA,EAAIJ,EAAS9a,GAAYnC,OAAO,CACjCid,EAAS9a,GAAYJ,OAAOsb,EAAE,EAC9B,WAUVC,gBAAiB,SAAUve,EAASqe,EAAU/d,EAAQL,EAAUqM,GAC9D,GAAI3I,EAAO6C,cAAiBhI,QAAQoD,QAAQ+B,EAAO6C,aAAavG,IAGhE,IAAK,GAAIoP,GAAI,EAAGA,EAAI1L,EAAO6C,aAAavG,GAAUgB,OAAQoO,IAAK,CAC7D,GAAImP,GAAY7a,EAAO6C,aAAavG,GAAUoP,EAC9C,IAAGmP,EAAU9d,SAAW2d,GAAY7f,QAAQoD,QAAQ4c,EAAUlS,IAG5D,IAFA,GAAIgS,GAAI,EAEDA,EAAIE,EAAUlS,GAAcrL,OAAQqd,IACzC,GAAGE,EAAUlS,GAAcgS,GAAG3X,SAAW3G,EAEvC,WADAwe,GAAUlS,GAActJ,OAAOsb,EAAE,KAW3CnS,gBAAiB,SAAUnM,EAASqe,EAAU/d,EAAQL,EAAUqM,EAAcvM,GAC5E,GAAI4D,EAAO6C,cAAiBhI,QAAQoD,QAAQ+B,EAAO6C,aAAavG,IAGhE,IAAK,GAAIoP,GAAI,EAAGA,EAAI1L,EAAO6C,aAAavG,GAAUgB,OAAQoO,IAAK,CAC7D,GAAImP,GAAY7a,EAAO6C,aAAavG,GAAUoP,EAC9C,IAAGmP,EAAU9d,SAAW2d,GAAY7f,QAAQoD,QAAQ4c,EAAUlS,IAG5D,IAFA,GAAIgS,GAAI,EAEDA,EAAIE,EAAUlS,GAAcrL,OAAQqd,IACzC,GAAGE,EAAUlS,GAAcgS,GAAG3X,SAAW3G,EACvC,MAAOxB,SAAQ6X,MAAMmI,EAAUlS,GAAcgS,GAAIve,KAU3D6U,WAAY,SAAUrV,GACpB,IAAIA,EAAIiB,SAAWmD,EAAO6C,eAAiBhI,QAAQoD,QAAQ+B,EAAO6C,aAAaxH,OAAQ,MAAOO,EAG9F,IAAI8P,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAI1L,EAAO6C,aAAaxH,MAAMiC,QACnC0C,EAAO6C,aAAaxH,MAAMqQ,GAAG7O,SAAWjB,EAAIiB,OADD6O,KAShD,MAHGA,IAAK,GAAKA,EAAI1L,EAAO6C,aAAaxH,MAAMiC,QACzC0C,EAAO6C,aAAaxH,MAAMgE,OAAOqM,EAAE,GAE9B9P,GAMTkf,YAAa,SAAUlf,GACrB,IAAIA,EAAImf,SAAW/a,EAAO6C,eAAiBhI,QAAQoD,QAAQ+B,EAAO6C,aAAac,OAAQ,MAAO/H,EAG9F,IAAI8P,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAI1L,EAAO6C,aAAac,MAAMrG,QACnC0C,EAAO6C,aAAac,MAAM+H,GAAGqP,SAAWnf,EAAImf,OADDrP,KAShD,MAHGA,IAAK,GAAKA,EAAI1L,EAAO6C,aAAac,MAAMrG,QACzC0C,EAAO6C,aAAac,MAAMtE,OAAOqM,EAAE,GAE9B9P,GAMTof,kBAAmB,SAAUN,EAAU9e,GACrC,IAAIA,EAAIoH,SAAWhD,EAAO6C,eAAiBhI,QAAQoD,QAAQ+B,EAAO6C,aAAajD,SAAU,MAAOhE,EAGhG,KAAK,GAAI8P,GAAI,EAAGA,EAAI1L,EAAO6C,aAAajD,QAAQtC,OAAQoO,IAAK,CAC3D,GAAIuP,GAAYjb,EAAO6C,aAAajD,QAAQ8L,EAC5C,IAAGuP,EAAUC,aAAeR,GAAY7f,QAAQoD,QAAQgd,EAAUE,aAGhE,IAFA,GAAIR,GAAI,EAEDA,EAAIM,EAAUE,YAAY7d,OAAQqd,IACvC,GAAGM,EAAUE,YAAYR,GAAG3X,SAAWpH,EAAIoH,OAEzC,MADAiY,GAAUE,YAAY9b,OAAOsb,EAAE,GACxB/e,EAMf,MAAOA,IAMTwf,gBAAiB,SAAU/e,EAASM,EAAQL,GAE1C,GADIA,IAAUA,EAAW,WACtB0D,EAAO6C,cAAgBhI,QAAQoD,QAAQ+B,EAAO6C,aAAa+E,WAAWzM,SACvE,IAAK,GAAIuQ,GAAI,EAAGA,EAAI1L,EAAO6C,aAAa+E,WAAWzM,QAAQmC,OAAQoO,IAAK,CACtE,GAAI6O,GAAWva,EAAO6C,aAAa+E,WAAWzM,QAAQuQ,EACtD,IAAG6O,EAASvX,SAAW3G,EAAQ,CAC7B,IAAIxB,QAAQoD,QAAQsc,EAASje,IAAY,KAEzC,KADA,GAAIqe,GAAI,EACDA,EAAIJ,EAASje,GAAUgB,QACzBid,EAASje,GAAUqe,GAAGhe,SAAWA,EADAge,KAGtC,GAAGA,EAAIJ,EAASje,GAAUgB,OAAO,CAC/Bid,EAASje,GAAU+C,OAAOsb,EAAE,EAC5B,WAUV/X,kBAAmB,SAAU8X,EAAU9e,GACrC,IAAIA,EAAIoH,SAAWhD,EAAO6C,eAAiBhI,QAAQoD,QAAQ+B,EAAO6C,aAAajD,SAAU,MAAOhE,EAGhG,KAAK,GAAI8P,GAAI,EAAGA,EAAI1L,EAAO6C,aAAajD,QAAQtC,OAAQoO,IAAK,CAC3D,GAAIuP,GAAYjb,EAAO6C,aAAajD,QAAQ8L,EAC5C,IAAGuP,EAAUC,aAAeR,GAAY7f,QAAQoD,QAAQgd,EAAUE,aAGhE,IAFA,GAAIR,GAAI,EAEDA,EAAIM,EAAUE,YAAY7d,OAAQqd,IACvC,GAAGM,EAAUE,YAAYR,GAAG3X,SAAWpH,EAAIoH,OACzC,MAAOnI,SAAQ6X,MAAMuI,EAAUE,YAAYR,GAAI/e,GAMvD,MAAOA,IAMTyf,YAAa,SAAUzf,GACrB,KAAIA,EAAIoH,QAAWhD,EAAO6C,cAAiB7C,EAAO6C,aAAa+E,YAAe/M,QAAQoD,QAAQ+B,EAAO6C,aAAa+E,WAAWzM,UAAU,MAAOS,EAG9I,IAAI8P,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAI1L,EAAO6C,aAAa+E,WAAWzM,QAAQmC,QAChD0C,EAAO6C,aAAa+E,WAAWzM,QAAQuQ,GAAG1I,SAAWpH,EAAIoH,OADD0I,KAS7D,MAHGA,IAAK,GAAKA,EAAI1L,EAAO6C,aAAa+E,WAAWzM,QAAQmC,QACtD0C,EAAO6C,aAAa+E,WAAWzM,QAAQkE,OAAOqM,EAAE,GAE3C9P,GAGT0f,IAAK,SAAU1f,GAEb,MADA4U,GAAKvD,KAAKrR,GACHA,GAGT2f,WAAU,SAAU3f,GAElB,MAAOA,IAIX,OAAO0U,MAKXzV,QAAQC,OAAO,UAKZ0X,QAAQ,iBAAkB,WACzB,GAAIgJ,IACF,cACA,SACA,UACA,gBAGEjH,GACF0B,SAAU,SAAS9R,EAAK/G,GACnBoe,EAAYC,QAAQtX,GAAO,IAI9BuX,aAAavX,GAAOtJ,QAAQ8gB,OAAOve,KAGrCwe,SAAU,SAASzX,GACjB,GAAGqX,EAAYC,QAAQtX,GAAO,EAC5B,MAAO,KAGT,KACE,MAAOtJ,SAAQghB,SAASH,aAAavX,IAEvC,MAAM2X,GAEJ,aADOJ,cAAavX,GACb,OAIX4X,OAAQ,SAAS5X,GACf,MAAGqX,GAAYC,QAAQtX,GAAO,EACrB,gBAGFuX,cAAavX,IAGtB6X,SAAU,WACRnhB,QAAQqD,QAAQsd,EAAa,SAASrX,SAC7BuX,cAAavX,KAEtBuX,aAAaO,SAIjB,OAAO1H,KAGX,WACE,YA2EA,SAAS2H,GAAcC,GAvDrB,QAASC,GAAkBpc,EAAQmM,GACjC,GAAI7Q,GAAKC,IAETD,GAAG0E,OAASA,EACZ1E,EAAG+gB,MAAQlQ,EAEX7Q,EAAGghB,mBACD,yBACA,oBACA,mBACA,sBACA,yBAIJ,QAASC,KACPJ,EAAS,WACPthB,QAAQiQ,QAAQ0R,QAAQC,QAAQ,YAuCpCL,EAAkB5d,SAAW,SAAU,SApEvC,IAAIC,IACFC,SAAU,IACVC,YAAa,kDACbC,WAAYwd,EACZvd,aAAc,UACd8B,KAAM4b,EACNzd,kBAAkB,EAGpB,OAAOL,GAoDTyd,EAAc1d,SAAW,YAnEzB3D,QACGC,OAAO,UACP2D,UAAU,gBAAiByd,MAwChC,WACE,YA6EA,SAASQ,GAAaP,GAzDpB,QAASQ,GAAiB3c,GACxB,GAAI1E,GAAKC,IAETD,GAAG0E,OAASA,EAGd,QAAS4c,KACPT,EAAS,WACPthB,QAAQiQ,QAAQ0R,QAAQC,QAAQ,YAkDpCE,EAAiBne,SAAW,SAtE5B,IAAIC,IACFC,SAAU,IACVC,YAAa,gDACbC,WAAY+d,EACZ9d,aAAc,SACd8B,KAAMic,EACN9d,kBAAkB,EAGpB,OAAOL,GAsDTie,EAAale,SAAW,YArExB3D,QACGC,OAAO,UACP2D,UAAU,eAAgBie,MA+B/B,WACE,YA+EA,SAASG,GAAaV,GA3DpB,QAASW,GAAiB9c,GACxB,GAAI1E,GAAKC,IAETD,GAAG0E,OAASA,EAGd,QAAS+c,KACPZ,EAAS,WACPthB,QAAQiQ,QAAQ0R,QAAQC,QAAQ,YAoDpCK,EAAiBte,SAAW,SAxE5B,IAAIC,IACFC,SAAU,IACVC,YAAa,gDACbC,WAAYke,EACZje,aAAc,SACd8B,KAAMoc,EACNje,kBAAkB,EAGpB,OAAOL,GAwDToe,EAAare,SAAW,YAvExB3D,QACGC,OAAO,UACP2D,UAAU,eAAgBoe,MAiC/BhiB,QAAQC,OAAO,UAIX0X,QAAQ,aAAA,KAAA,QAAA,qBAAA,eAAA,cAAA,cAAA,gBAAA,cAAA,gBAAA,gBAAA,gBAAA,iBAAA,SAAA,SAAA,aAAa,SACnBtX,EACA8hB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAnN,EACAvQ,EACA2d,GAGA,GAAIC,MAGAC,GAUFC,YAAa,SAASC,EAAQC,EAAStJ,EAAMuJ,EAASC,GACpD,GAAI/Z,GAAM4Z,EAASC,GAAWtJ,EAAO7Z,QAAQ8gB,OAAOjH,GAAQ,IAExDxM,IAMJ,IALG6V,IAAQ7V,EAAO6V,OAASA,EAAOI,eAC/BH,IAAS9V,EAAOkW,IAAMJ,GACtBtJ,IAAMxM,EAAOwM,KAAOA,GACpBuJ,IAAS/V,EAAO+V,QAAUA,IAExBL,EAAMzZ,GAAM,CACf,GAAIka,GACAC,GAAM,CACV,QAAOP,GACL,IAAK,MACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACHM,EAAUrB,EAAM9U,EAChB,MACF,SACEoW,GAAM,EACND,EAAUnjB,EAAGyZ,SAGb2J,IACFV,EAAMzZ,GAAOka,EAAAA,WAAgB,SAASE,EAASD,GAI7C,MAHIJ,UACKN,GAAMzZ,GAEZma,EAAcpjB,EAAGyZ,OAAO2J,GACxBC,EAAmBA,EAAtB,UAKN,MAAOX,GAAMzZ,IAWfqa,oBAAqB,SAAUT,EAAQK,EAAK1J,EAAMuJ,GAEhD,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAd,EAAqBmB,EACrBvjB,QAAQ6X,SACNgC,GAEF7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,KAaNS,cAAe,SAAUX,EAAQK,EAAK1J,EAAMuJ,EAASC,GAEnD,MADAE,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAb,EAAekB,EACf1J,EACA7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,GAEFC,IAYJS,aAAc,SAAUZ,EAAQK,EAAK1J,EAAMuJ,GAEzC,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAZ,EAAciB,EACd1J,EACA7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,KAaNW,aAAc,SAAUb,EAAQK,EAAK1J,EAAMuJ,GAEzC,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAX,EAAcgB,EACd1J,EACA7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,KAaNY,eAAgB,SAAU3P,EAAS6O,EAAQK,EAAK1J,EAAMuJ,GAEpD,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAV,EAAgB,UAAYnO,EAAUkP,EACtC1J,EACA7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,KAaNa,aAAc,SAAU5P,EAAS6O,EAAQK,EAAK1J,EAAMuJ,GAElD,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAT,EAAc,WAAapO,EAAUkP,EACrC1J,EACA7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,KAaNc,eAAgB,SAAU7P,EAAS7S,EAAS0hB,EAAQK,EAAK1J,EAAMuJ,GAE7D,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAR,EAAgB,WAAarO,EAAU,UAAY7S,EAAU+hB,EAC7D1J,EACA7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,KAaNe,eAAgB,SAAU9P,EAAS6O,EAAQK,EAAK1J,EAAMuJ,GAEpD,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAP,EAAgB,UAAYtO,EAAUkP,EACtC1J,EACA7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,KAaNgB,YAAa,SAAUlB,EAAQK,EAAK1J,EAAMuJ,GAExC,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAJ,EAAaS,EACb1J,EACA7Z,QAAQ6X,OACJ+L,cAAehB,GAEjBQ,KASNiB,UAAW,SAAUX,GACnB,MAAuB,OAApBA,EAAShH,OACHgH,EAAS7J,KAGTxZ,EAAGyZ,OAAO4J,IAIrBY,aAAc,SAAUZ,GAItB,MAHGA,GAASa,KAAgC,MAAzBb,EAAS9J,aAC1BlE,EAAO8O,QAAQd,EAASa,KAEnBb,GAGTe,WAAY,SAAUf,GACpB,MAAOA,GAAS7J,OAIhB6K,GAMFjT,SAAU,SAASkT,GACjB,MAAO3B,GACJW,oBAAoB,OAAQ,wBAA0Bd,GACrDvI,MAAOqK,EAASrK,MAChBsK,SAAUD,EAASC,WAEpBvjB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBjR,MAAO,SAASsR,GACd,MAAO3B,GACJW,oBAAoB,OAAQ,qBAAuBd,GAClDvI,MAAOqK,EAASrK,MAChBsK,SAAUD,EAASC,WAEpBvjB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBhR,cAAe,SAAUuR,GACvB,MAAO7B,GACJW,oBAAoB,OAAQ,8BAAgCd,GAC3DiC,eAAgBD,EAAaE,aAAa9J,YAC1ChJ,KAAM,IAEP5Q,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAOlBU,OAAQ,WACN,MAAOhC,GACJW,oBAAoB,OAAQ,sBAAwBxe,EAAO+M,YAAYsF,WACvEnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAKlBW,oBAAqB,WACnB,MAAOjC,GACJoB,YAAY,MAAO,uDAAyDjf,EAAO+M,YAAYsF,WAC/FnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAGlBY,wBAAyB,WACvB,MAAOlC,GACJoB,YAAY,MAAO,8CAAgDjf,EAAO+M,YAAYsF,WACtFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAGlBa,iBAAkB,SAAUC,GAC1B,MAAOpC,GACJoB,YAAY,OAAQ,yCAA2Cjf,EAAO+M,YAAYsF,UAAW4N,GAC7F/jB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAGlBe,iBAAkB,SAAUD,GAC1B,MAAOpC,GACJoB,YAAY,OAAQ,yCAA2Cjf,EAAO+M,YAAYsF,UAAW4N,GAC7F/jB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eASlBgB,WAAY,WACV,MAAOtC,GACJa,cAAc,MAAO,6BAA+B1e,EAAO+M,YAAYsF,WACvEnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBiB,kBAAmB,WACjB,MAAOvC,GACJa,cAAc,MAAO,4BAA8B1e,EAAO+M,YAAYsF,WACtEnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAOlBkB,YAAa,SAAUtZ,GACrB,MAAO8W,GACJa,cAAc,OAAQ,0BAA4B1e,EAAO+M,YAAYsF,UAAWtL,GAChF7K,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBmB,YAAa,SAAUpR,EAASnI,GAC9B,MAAO8W,GACJa,cAAc,OAAQ,WAAaxP,EAAU,oBAAsBlP,EAAO+M,YAAYsF,UAAWtL,GACjG7K,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBoB,aAAc,SAAUxZ,GACtB,MAAO8W,GACJa,cAAc,SAAU,WAAa3X,EAAUjE,OAAS,sBAAwB9C,EAAO+M,YAAYsF,WACnGnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAOlBqB,UAAW,SAAUtR,GACnB,MAAO2O,GACJa,cAAc,MAAO,UAAYxP,EAAU,eAAiBlP,EAAO+M,YAAYsF,WAC/EnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB3X,YAAa,WACX,MAAOqW,GACJa,cAAc,MAAO,uBAAyB1e,EAAO+M,YAAYsF,UAAW,KAAM,MAAM,GACxFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAQlBsB,oBAAqB,SAAUvR,GAC7B,MAAO2O,GACJmB,eAAe9P,EAAS,MAAO,uBAAyBlP,EAAO+M,YAAYsF,WAC3EnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBuB,yBAA0B,SAAUxR,GAClC,MAAO2O,GACJmB,eAAe9P,EAAS,MAAO,iCAAmClP,EAAO+M,YAAYsF,WACrFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB9b,YAAa,SAAU6L,GACrB,MAAO2O,GACJmB,eAAe9P,EAAS,MAAO,+BAAiClP,EAAO+M,YAAYsF,WACnFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB7f,aAAc,SAAU4P,EAAS7S,EAASmD,GACxC,MAAOqe,GACJkB,eAAe7P,EAAS7S,EAAS,OAAQ,2BAA6B2D,EAAO+M,YAAYsF,UAAW7S,GACpGtD,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB7b,mBAAoB,SAAS4L,EAASwL,EAAUre,GAC9C,MAAOwhB,GACJkB,eAAe7P,EAAS7S,EAAS,SAAU,WAAaqe,EAAW,8BAAgC1a,EAAO+M,YAAYsF,WACtHnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB3iB,YAAa,SAAU0S,EAAS7S,EAASM,GACvC,MAAOkhB,GACJiB,aAAa5P,EAAS,SAAU,UAAY7S,EAAU,UAAYM,EAAS,sBAAwBqD,EAAO+M,YAAYsF,WACtHnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBvc,kBAAmB,SAAUsM,EAAS7S,EAASskB,GAC7C,MAAO9C,GACJkB,eAAe7P,EAAS7S,EAAS,OAAQ,4BAA8B2D,EAAO+M,YAAYsF,UAAWsO,GACrGzkB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eASlByB,UAAW,SAAU1R,GACnB,MAAO2O,GACJe,aAAa,MAAO,UAAY1P,EAAU,qBAAuBlP,EAAO+M,YAAYsF,WACpFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBjF,YAAa,SAAUhL,EAASiL,EAAS0G,GACvC,MAAOhD,GACJe,aAAa,OAAQ,UAAY1P,EAAU,UAAYiL,EAAU,oBAAsBna,EAAO+M,YAAYsF,UAAWwO,GACrH3kB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB2B,YAAa,SAAUD,GACrB,MAAOhD,GACJe,aAAa,OAAQ,4BAA8B5e,EAAO+M,YAAYsF,UAAWwO,GACjF3kB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB4B,aAAc,SAAU7R,EAASiL,GAC/B,MAAO0D,GACJe,aAAa,SAAU,UAAY1P,EAAU,UAAYiL,EAAU,sBAAwBna,EAAO+M,YAAYsF,WAC9GnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB6B,UAAW,SAAU9R,EAASiL,GAC5B,MAAO0D,GACJe,aAAa,MAAO,UAAY1P,EAAU,UAAYiL,EAAU,eAAiBna,EAAO+M,YAAYsF,WACpGnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eASlB8B,UAAW,SAAU/R,GACnB,MAAO2O,GACJc,aAAa,MAAO,WAAazP,EAAU,qBAAuBlP,EAAO+M,YAAYsF,WACrFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB7R,WAAY,SAAU4B,EAASrS,EAAQmE,GACrC,MAAO6c,GACJc,aAAa,OAAQ,WAAazP,EAAU,UAAYrS,EAAS,oBAAsBmD,EAAO+M,YAAYsF,UAAWrR,GACrH9E,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB+B,WAAY,SAAUhS,EAASlO,GAC7B,MAAO6c,GACJc,aAAa,OAAQ,WAAazP,EAAU,yBAA2BlP,EAAO+M,YAAYsF,UAAWrR,GACrG9E,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBgC,YAAa,SAAUjS,EAASrS,GAC9B,MAAOghB,GACJc,aAAa,OAAQ,WAAazP,EAAU,UAAYrS,EAAS,sBAAwBmD,EAAO+M,YAAYsF,WAC5GnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBiC,SAAU,SAAUlS,EAASrS,GAC3B,MAAOghB,GACJc,aAAa,MAAO,WAAazP,EAAU,UAAYrS,EAAS,eAAiBmD,EAAO+M,YAAYsF,WACpGnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAQlBkC,cAAe,SAAUnS,EAASoS,GAChC,MAAOzD,GACJc,aAAa,OAAQ,WAAazP,EAAU,qCAAuClP,EAAO+M,YAAYsF,UAAWiP,GACjHplB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBphB,YAAa,SAAUlB,GACrB,MAAOghB,GACJc,aAAa,MAAO,UAAY9hB,EAAS,4BAA8BmD,EAAO+M,YAAYsF,WAC1FnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAGlBpa,aAAc,SAAUlI,EAAQ6d,EAAU5V,GACxC,MAAO+Y,GACJc,aAAa,OAAQ,UAAY9hB,EAAS,YAAc6d,EAAW,oBAAsB1a,EAAO+M,YAAYsF,UAAWvN,GACvH5I,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAGlB1R,aAAc,SAAU5Q,EAAQiI,GAC9B,MAAO+Y,GAEJc,aAAa,OAAQ,UAAY9hB,EAAS,2BAA6BmD,EAAO+M,YAAYsF,UAAWvN,GACrG5I,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eASlBoC,gBAAiB,WACf,MAAO1D,GACJoB,YAAY,MAAO,gCAAkCjf,EAAO+M,YAAYsF,WACxEnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB;EAMlBqC,SAAU,WACR,MAAO3D,GACJoB,YAAY,MAAO,yBAA2Bjf,EAAO+M,YAAYsF,WACjEnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBsC,WAAY,SAAUjC,GAClB,MAAO3B,GACJoB,YAAY,OAAQ,yBAA2Bjf,EAAO+M,YAAYsF,UAAWmN,GAC7EtjB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAWpBuC,sBAAuB,SAAUxS,GAC/B,MAAO2O,GACJgB,eAAe3P,EAAS,OAAQ,qCAAuClP,EAAO+M,YAAYsF,WAC1FnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAOlBwC,YAAa,SAAUzS,EAAS0S,GAC9B,MAAO/D,GACJgB,eAAe3P,EAAS,MAAO,QAAU0S,EAAM,uBAAyB5hB,EAAO+M,YAAYsF,WAC3FnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB0C,UAAW,SAAU3S,EAAS7S,GAC5B,MAAOwhB,GACJgB,eAAe3P,EAAS,MAAO,UAAY7S,EAAU,eAAiB2D,EAAO+M,YAAYsF,WACzFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAOlB2C,iBAAkB,SAAU5S,EAAS7S,GACnC,MAAOwhB,GACJgB,eAAe3P,EAAS,MAAO,UAAY7S,EAAU,uBAAyB2D,EAAO+M,YAAYsF,WACjGnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB4C,gBAAiB,SAAU7S,GACzB,MAAO2O,GACJiB,aAAa5P,EAAS,MAAO,gCAAkClP,EAAO+M,YAAYsF,WAClFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB9P,aAAc,SAAUH,GACtB,MAAO2O,GACJiB,aAAa5P,EAAS,MAAO,iCAAmClP,EAAO+M,YAAYsF,WACnFnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB7P,oBAAqB,SAAUJ,GAC7B,MAAO2O,GACJiB,aAAa5P,EAAS,MAAO,yCAA2ClP,EAAO+M,YAAYsF,WAC3FnW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBnjB,WAAY,SAAUkT,EAAS7S,EAASD,GACtC,MAAOyhB,GACJiB,aAAa5P,EAAS,OAAQ,UAAY7S,EAAU,yBAA2B2D,EAAO+M,YAAYsF,UAAWjW,GAC7GF,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB6C,WAAY,SAAU9S,EAAS7S,EAASM,EAAQP,GAC9C,MAAOyhB,GACJiB,aAAa5P,EAAS,OAAQ,UAAY7S,EAAU,UAAYM,EAAS,oBAAsBqD,EAAO+M,YAAYsF,UAAWjW,GAC7HF,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB/G,YAAa,SAAUlJ,EAASxJ,GAC9B,MAAOmY,GACJgB,eAAe3P,EAAS,OAAQ,8BAAgClP,EAAO+M,YAAYsF,UAAW3M,GAC9FxJ,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlB8C,YAAa,SAAU/S,EAASgT,EAAYxc,GAC1C,MAAOmY,GACJgB,eAAe3P,EAAS,OAAQ,QAAUgT,EAAa,2BAA6BliB,EAAO+M,YAAYsF,UAAW3M,GAClHxJ,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBhN,UAAW,SAAUjD,EAASiT,GAC5B,MAAOtE,GACJgB,eAAe3P,EAAS,OAAQ,+BAAiClP,EAAO+M,YAAYsF,UAAW8P,GAC/FjmB,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAMlBiD,aAAc,SAAUlT,EAASgT,EAAY7lB,GAC3C,MAAOwhB,GACJgB,eAAe3P,EAAS,SAAU,cAAgBgT,EAAa,YAAc7lB,EAAU,sBAAwB2D,EAAO+M,YAAYsF,WAClInW,KAAK2hB,EAAQqB,WACbhjB,KAAK2hB,EAAQsB,eAIpB,OAAOI,MAKb1kB,QAAQC,OAAO,UAKZ0X,QAAQ,gBAAA,SAAA,OAAA,SAAA,KAAA,iBAAA,SAAgB,SAAUjC,EAAQC,EAAMrE,EAAQjR,EAAIqZ,EAAgBvU,GAC3E,GAAIqiB,GAAe,SAAS/D,GAK1B,GAHA9N,EAAKW,MAAMmN,GAGRzjB,QAAQ4C,SAAS6gB,IAAQA,EAAI/G,OAC9B,OAAO+G,EAAI/G,QACT,IAAK,KACHpL,EAAOK,GAAG,eACV8R,EAAMA,EAAI5J,IACV,MACF,KAAK,KACHvI,EAAOK,GAAG,aACV8R,EAAMA,EAAI5J,IACV,MACF,KAAK,KACH4J,EAAMA,EAAI5J,IACV,MACF,KAAK,KACH4J,EAAMA,EAAI5J,IACV,MACF,KAAK,KACH4J,EAAM,uDACN,MACF,KAAK,GACHA,EAAM,+DAOZ,GAAIgE,GAAiB,SAAUhE,GAC7B,GAAGzjB,QAAQ0C,SAAS+gB,GAClB,MAAOA,EAEJ,IAAGzjB,QAAQ4C,SAAS6gB,KAASA,EAAIiE,eAAiBjE,EAAIkE,mBAAqBlE,EAAImE,QAAUnE,EAAI5J,MAAQ4J,EAAIc,KAAOd,EAAInN,OACvH,MAAOmR,GAAehE,EAAIiE,eAAiBjE,EAAIkE,mBAAqBlE,EAAImE,QAAUnE,EAAI5J,MAAQ4J,EAAIc,KAAOd,EAAInN,MAE1G,IAAGtW,QAAQoD,QAAQqgB,GAAK,CAE3B,IAAK,GADDoE,MACKhX,EAAI,EAAGA,EAAI4S,EAAIhhB,OAAQoO,IAC9BgX,EAAMhX,GAAK4W,EAAehE,EAAI5S,GAEhC,OAAO4W,GAAeI,EAAMzL,KAAK,SAMjC,MAFA1C,GAAeyH,WACfhc,EAAOuT,QACA,yEAMX,OAFAhD,GAAOY,MAAMmR,EAAehE,GAAM,UAE3BpjB,EAAGyZ,OAAO2J,GAGnB,OAAO+D,MAGX,WACE,YAgFA,SAASM,KA5DP,QAASC,GAAe5jB,EAAOb,GAC7Ba,EAAM6jB,WAAa,WACjB7jB,EAAMyI,OAAO,QAAS,WACpBzI,EAAM8jB,IAAIC,oBAIU,UAArB/jB,EAAM2jB,YACP3jB,EAAM8jB,IAAM3kB,EAAG6kB,iBACbC,iBAAiB,EACjBC,QACEC,OAAQ,aACRC,UAAW,UAEZ1O,KAAK,mBACRvW,EAAGoJ,GAAG,wBAAyB,SAAU8b,EAAIC,GAC3CtkB,EAAMyB,OAAO,WACXzB,EAAMukB,MAAQD,EAAOE,UAAUL,OAAO,cAAgB,OAASG,EAAOG,QAAQN,OAAO,kBAGzFhlB,EAAGoJ,GAAG,yBAA0B,WAC9BvI,EAAMyB,OAAO,WACXzB,EAAMukB,MAAQ,OAGlBvkB,EAAM6jB,eAGN7jB,EAAM8jB,IAAM3kB,EAAG6kB,iBACbC,iBAAiB,EACjBS,kBAAkB,EAClBR,QACEC,OAAQ,aACRC,UAAW,UAEZ1O,KAAK,mBACRvW,EAAGoJ,GAAG,wBAAyB,SAAU8b,EAAIC,GAC3CtkB,EAAMyB,OAAO,WACXzB,EAAMukB,MAAQD,EAAOE,UAAUL,OAAO,kBAG1ChlB,EAAGoJ,GAAG,yBAA0B,WAC9BvI,EAAMyB,OAAO,WACXzB,EAAMukB,MAAQ,OAGlBvkB,EAAM6jB,cAeVD,EAAepkB,SAAW,QAAS,KAzEnC,IAAIC,IACFC,SAAU,IACViC,KAAMiiB,EACN5jB,OACE2jB,WAAY,IACZY,MAAO,KAIX,OAAO9kB,GAfT5D,QACGC,OAAO,UACP2D,UAAU,aAAckkB,MAqE7B,WACE,YAiFA,SAASgB,KA7DP,QAASC,GAAc5kB,EAAO8L,EAASvK,EAAOsjB,GAC5CA,EAAQC,YAAYH,UAAY,SAAUI,GACxC,MAAOA,IAAc/kB,EAAMglB,iBAE7BhlB,EAAMyI,OAAO,kBAAmB,WAC9Boc,EAAQI,cAyDZL,EAAcplB,SAAW,QAAS,UAAW,QAAS,UA1EtD,IAAIC,IACFC,SAAU,IACVwlB,QAAS,UACTllB,OACEglB,gBAAiB,cAEnBrjB,KAAMijB,EAGR,OAAOnlB,GAfT5D,QACGC,OAAO,UACP2D,UAAU,YAAaklB,MA4B5B,WACE,YAOA,SAASQ,GAAa3T,EAAMxQ,GAW1B,QAASgU,GAAShV,EAAOb,GACvB,GAAIimB,GACAC,EACAC,EACAC,CACJvlB,GAAMgB,OAASA,CAGf,IAAIqU,GAAmB,WACrB,GAAImQ,IAAS,CACb,IAAG3pB,QAAQoD,QAAQ+B,EAAO+M,YAAY2I,aAClC,IAAK,GAAIhK,GAAI,EAAGA,EAAI1L,EAAO+M,YAAY2I,YAAYpY,OAAQoO,IACzD,GAAG1L,EAAO+M,YAAY2I,YAAYhK,GAAG+Y,WAAaF,EAAW,CAC3DC,GAAS,CACT,OAILF,IAAWE,GAAUA,GAGrBA,IAAWH,GACZlmB,EAAGgW,YAAY,YACfkQ,GAAQ,IAIDG,GAAUH,IACjBlmB,EAAGyM,SAAS,YACZyZ,GAAQ,GAKZC,GAAqC,MAA1BtlB,EAAM0lB,IAAIC,MAAM,EAAG,GAK5BJ,EADCD,EACYtlB,EAAM0lB,IAAIE,OAAO,GAGjB5lB,EAAM0lB,IAIrBL,GAAQ,EACRhQ,IAGA+P,EAAUplB,EAAMyI,OAAO,iCAAkC,SAASC,EAAQC,GACrED,GAAUC,IAAWD,GACtB2M,MAIJrV,EAAM6lB,IAAI,WAAY,WACpBT,MAnEJ,GAAI3lB,IACFC,SAAU,IACViC,KAAMqT,EACNhV,OACE0lB,IAAK,KAIT,OAAOjmB,GA6DT0lB,EAAa3lB,SAAW,OAAQ,UA3EhC3D,QACGC,OAAO,UACP2D,UAAU,MAAO0lB,MA8EtB,WACE,YAmFA,SAASW,KAlEP,QAASC,GAAyB/lB,EAAOb,GACvCA,EAAG6mB,cAkELD,EAAyBvmB,SAAW,QAAS,KA5E7C,IAAIC,IACFC,SAAU,IACViC,KAAMokB,EACNE,UAAU,EAGZ,OAAOxmB,GAZT5D,QACGC,OAAO,UACP2D,UAAU,uBAAwBqmB,MAsBvCjqB,QAAQC,OAAO,UAIX0X,QAAQ,SAAA,YAAA,eAAA,SAAA,iBAAA,UAAA,SAAA,KAAA,OAAA,OAAA,UAAA,WAAS,SAAU+M,EAAW8C,EAAcriB,EAAQuU,EAAgBjE,EAASnE,EAAQjR,EAAI+S,EAAMuC,EAAMkD,EAASyI,GAEpH,GAAIjQ,IAMFI,SAAU,SAAUkT,GAClB,MAAOD,GACJjT,SAASkT,GACTtjB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAK,SAAUN,GAEd,MADAA,GAAIuZ,MAAQqK,EAASrK,MACdvZ,IAERM,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ2E,oBACb/Y,KAAKoU,EAAQ8E,mBACblZ,KAAKoU,EAAQ0F,qBAXTuJ,SAYE8C,IAQXnU,MAAO,SAAUsR,GACf,MAAOD,GACJrR,MAAMsR,GACNtjB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAK,SAAUN,GAEd,MADAA,GAAIuZ,MAAQqK,EAASrK,MACdvZ,IAERM,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ2E,oBACb/Y,KAAKoU,EAAQ8E,mBACblZ,KAAKoU,EAAQ0F,qBACb9Z,KAAKgQ,EAAMK,YAZPgT,SAaE8C,IAQXxC,OAAQ,WACN,MAAG7f,GAAO+M,aAAe/M,EAAO+M,YAAYsF,UACnCkN,EACJM,SACA3jB,KAAK,SAAUN,GAEd,MADA4U,GAAKvD,KAAK,iBACHrR,IAJJ2jB,SAME8C,GANF9C,WAOIrT,EAAME,aACdlQ,KAAK,WACJ+R,EAAK4R,WAGJ3kB,EAAGY,WAQZqS,cAAe,SAAUuR,GACvB,MAAOH,GACJpR,cAAcuR,GACdxjB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ2E,oBACb/Y,KAAKoU,EAAQ8E,mBACblZ,KAAKoU,EAAQ0F,qBACb9Z,KAAKgQ,EAAMK,YARPgT,SASE8C,IAMXpV,KAAM,WACJ,GAAIiY,IACFhZ,EAAMqV,kBACNrV,EAAM7E,OAER,OAAOnM,GAAGiU,IAAI+V,IAMhB7d,KAAM,WACJ,MAAOkY,GACJiC,WACAtlB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQmF,wBACbvZ,KAAKoU,EAAQ0F,qBANTuJ,SAOE8C,IAMXphB,OAAQ,SAAUue,GAChB,MAAOD,GACJkC,WAAWjC,GACXtjB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQmF,wBACbvZ,KAAKoU,EAAQ0F,qBANTuJ,SAOE8C,IAMXd,gBAAiB,WACf,MAAOhC,GACJgC,kBACArlB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQqF,mBACbzZ,KAAKoU,EAAQ0F,qBANTuJ,SAOE8C,IAQX9V,WAAY,SAAUiT,GAOpB,MAN2B,gBAAxBrT,EAAOgZ,QAAQ3nB,MAChB2O,EAAOK,GAAG,qBAEZgE,EAAKvD,KAAK,gBACVf,EAAMe,OACNyG,EAAQ0R,UAAW,EACZlqB,EAAGY,QAAQ0jB,IAMpBpT,YAAa,WACXpM,EAAOuT,QACPgB,EAAeyH,WACftI,EAAQ0R,UAAW,EACQ,eAAxBjZ,EAAOgZ,QAAQ3nB,MAAiD,kBAAxB2O,EAAOgZ,QAAQ3nB,MACxD2e,EAAS,WACPhQ,EAAOK,GAAG,iBAQhB6Y,iBAAkB,SAAUzpB,GAO1B,MANAoE,GAAOslB,KACLvP,KAAM/V,EAAO+M,YAAYgJ,KACzBD,YAAa9V,EAAO+M,YAAY+I,aAElC9V,EAAO+M,YAAYgJ,KAAO,UAC1B/V,EAAO+M,YAAY+I,YAAc,mCAC1B5a,EAAGY,QAAQF,IAMpB2pB,mBAAoB,SAAU3pB,GAI5B,MAHAoE,GAAO+M,YAAYgJ,KAAO/V,EAAOslB,IAAIvP,KACrC/V,EAAO+M,YAAY+I,YAAc9V,EAAOslB,IAAIxP,kBACrC9V,GAAOslB,IACPpqB,EAAGY,QAAQF,IAGpB4pB,mBAAoB,WAClB,MAAOvX,GACJwX,iBACAvpB,KAAK,SAAUN,GACd,MAAkB,cAAfA,EAAI2b,OACE3b,EAGAV,EAAGyZ,OAAO/Y,MAQzB8pB,2BAA4B,SAAU9pB,GAgBpC,MARAqS,GAAK0X,MAAMC,UAAU,cAAe,WAClCpV,EAAKvD,KAAK,mBACPyG,EAAQ0R,UACTlZ,EAAM2T,WAKHjkB,GAGTmF,UAAW,SAAU8kB,GACnB,GAAIrG,KAGJ,OAFG3kB,SAAQwH,UAAUwjB,EAAS/Y,QAAO0S,EAAS1S,KAAO+Y,EAAS/Y,MAC3DjS,QAAQwH,UAAUwjB,EAAS7Y,gBAAewS,EAASxS,aAAe6Y,EAAS7Y,cACvE9R,EAAGY,QAAQ0jB,IAItB,OAAOtT,MAKbrR,QAAQC,OAAO,UAIX0X,QAAQ,SAAA,YAAA,eAAA,UAAA,KAAA,SAAA,QAAS,SAAU+M,EAAW8C,EAAc/R,EAASpV,EAAI8E,EAAQ/E,GAEvE,GAAII,IAIFsQ,KAAM,WACJ,MAAO4T,GACJ0B,UAAUjhB,EAAO6C,aAAaC,QAC9B5G,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQkJ,aACbtd,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBANTyH,SAOE8C,IAGXhb,KAAM,SAAUxK,GACd,MAAO0iB,GACJ6B,SAASphB,EAAO6C,aAAaC,OAAQjG,GACrCX,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQhD,YACbpR,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAGXxW,OAAQ,SAAUxL,GAChB,MAAOkf,GACJ2B,WAAWlhB,EAAO6C,aAAaC,OAAQzC,GACvCnE,KAAKoU,EAAQkE,eAFT+K,SAGE8C,IAGXphB,OAAQ,SAAUpE,EAAQwD,GACxB,MAAOkf,GACJjS,WAAWtN,EAAO6C,aAAaC,OAAQjG,EAAQwD,GAC/CnE,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQhD,YACbpR,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAGXpiB,QAAS,SAAUI,GACjB,MAAOkf,GACJ4B,YAAYnhB,EAAO6C,aAAaC,OAAQzC,EAAKxD,QAC7CX,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,MAAOmE,KAERnE,KAAKoU,EAAQW,YACb/U,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBARTyH,SASE8C,IAMX1Q,SAAU,SAAU2P,GAClB,MAAO/B,GACJ8B,cAAcrhB,EAAO6C,aAAaC,OAAQwe,GAC1CplB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UAJT0K,SAKE8C,IAGXtkB,YAAa,SAAUlB,GACrB,MAAO0iB,GACJxhB,YAAYlB,GAAUmD,EAAO6C,aAAa0K,YAAY1Q,QACtDX,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ8J,eACble,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBANTyH,SAOE8C,IAGXtd,aAAc,SAAU2V,EAAU5V,GAChC,MAAOya,GACJxa,aAAa/E,EAAO6C,aAAa0K,YAAY1Q,OAAQ6d,EAAU5V,GAC/D5I,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQvL,cACb7I,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAGX5U,aAAc,SAAU3I,GACtB,MAAOya,GACJ9R,aAAazN,EAAO6C,aAAa0K,YAAY1Q,OAAQiI,GACrD5I,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ+J,cACbne,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAQX3Q,WAAY,SAAUmU,GACpB,GAAIvE,IAAcwE,SAIlB,OAHAjrB,SAAQqD,QAAQ2nB,EAASxqB,MAAO,SAAUgF,GACxCihB,EAAUwE,MAAM1nB,KAAK/C,EAAM0F,UAAUV,MAEhCnF,EAAGY,QAAQwlB,IAGpBvgB,UAAW,SAAU8kB,GACnB,GAAI7kB,MACA+kB,EAAW9qB,EAAMmY,SAASyS,EAASG,KAQvC,OAPGnrB,SAAQwH,UAAUwjB,EAASI,WAAUjlB,EAASklB,aAAeL,EAASI,SACtEprB,QAAQwH,UAAU0jB,KAAW/kB,EAASmlB,UAAYJ,GAClDlrB,QAAQwH,UAAUwjB,EAASroB,QAAOwD,EAASolB,UAAYP,EAASroB,MAChE3C,QAAQwH,UAAUwjB,EAASQ,SAAQrlB,EAASslB,kBAAoBT,EAASQ,OACzExrB,QAAQwH,UAAUwjB,EAASU,SAAQvlB,EAASwlB,WAAaX,EAASU,OAClE1rB,QAAQwH,UAAUwjB,EAAS7U,SAAQhQ,EAASylB,YAAcZ,EAAS7U,OACnEnW,QAAQwH,UAAUwjB,EAASa,QAAO1lB,EAAS2lB,iBAAmBd,EAASa,MACnE1lB,GAGT6D,YAAa,SAAUghB,GACrB,GAAI/gB,KAGJ,OAFGjK,SAAQwH,UAAUwjB,EAASroB,QAAOsH,EAAW8hB,YAAcf,EAASroB,MACpE3C,QAAQwH,UAAUwjB,EAASjoB,WAAUkH,EAAW+hB,eAAiBhB,EAASjoB,SACtE1C,EAAGY,QAAQgJ,IAItB,OAAOzJ,MAKbR,QAAQC,OAAO,UAIX0X,QAAQ,SAAA,YAAA,eAAA,UAAA,KAAA,SAAS,SAAU+M,EAAW8C,EAAc/R,EAASpV,EAAI8E,GAE/D,GAAI2D,IAIFgI,KAAM,WACJ,MAAO4T,GACJqB,UAAU5gB,EAAO6C,aAAaC,QAC9B5G,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQqI,qBACbzc,KAAKoU,EAAQ4J,aACbhe,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAGXhb,KAAM,SAAU8S,GACd,MAAOoF,GACJyB,UAAUhhB,EAAO6C,aAAaC,OAAQqX,GACtCje,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQqI,qBACbzc,KAAKoU,EAAQ4J,aACbhe,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBARTyH,SASE8C,IAGXxW,OAAQ,SAAUlI,GAChB,MAAO4b,GACJuB,YAAYnd,GACZzH,KAAKoU,EAAQkE,eAFT+K,SAGE8C,IAeXpiB,QAAS,SAAU0D,GACjB,MAAO4b,GACJwB,aAAa/gB,EAAO6C,aAAaC,OAAQa,EAAMoX,QAC/C7e,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,MAAOyH,KAERzH,KAAKoU,EAAQwK,aACb5e,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBARTyH,SASE8C,IAGXjV,WAAY,SAAUyY,GACpB,GAAIhF,KAiBJ,OAhBGhmB,SAAQwH,UAAUwjB,EAASroB,QAAOqjB,EAAUiG,WAAajB,EAASroB,MAClE3C,QAAQwH,UAAUwjB,EAASkB,WAAUlG,EAAUmG,cAAgBnB,EAASkB,QAAQ1iB,IAChFxJ,QAAQwH,UAAUwjB,EAAS1qB,WAAU0lB,EAAUoG,cAAgBpB,EAAS1qB,QAAQkJ,IAChFxJ,QAAQwH,UAAUwjB,EAASjmB,WAAUihB,EAAUqG,cAAgBrB,EAASjmB,QAAQyE,IAChFxJ,QAAQwH,UAAUwjB,EAASsB,eAActG,EAAUuG,kBAAoBvB,EAASsB,YAAY9iB,IAC5FxJ,QAAQwH,UAAUwjB,EAASwB,WAAUxG,EAAUyG,cAAgBzB,EAASwB,QAAQhjB,IAChFxJ,QAAQwH,UAAUwjB,EAAS5L,mBAAkB4G,EAAU0G,sBAAwB1B,EAAS5L,gBAAgB5V,IACxGxJ,QAAQwH,UAAUwjB,EAAS2B,UAAS3G,EAAU4G,aAAe5B,EAAS2B,OAAOnjB,IAC7ExJ,QAAQoD,QAAQ4nB,EAAS1jB,UAC1B0e,EAAU6G,gBACV7sB,QAAQqD,QAAQ2nB,EAAS1jB,OAAQ,SAAUoE,GACzCsa,EAAU6G,aAAatpB,MACrBupB,aAAc,GAAGphB,EAAMzD,YAItB+d,GAIX,OAAOld,MAKb9I,QAAQC,OAAO,UAIZ0X,QAAQ,UAAA,iBAAU,SAAU+B,GAE3B,GAAIvU,IACDuT,MAAO,WACLvT,EAAOmC,OAASoS,EAAeqH,SAAS,cACxC5b,EAAO6W,QAAUtC,EAAeqH,SAAS,eACzC5b,EAAO+M,YAAcwH,EAAeqH,SAAS,mBAC7C5b,EAAO6C,aAAe7C,EAAOmC,OAAO7E,OAAO,GAAKiX,EAAeqH,SAAS,iBAAmBgM,QAMhG,OAFA5nB,GAAOuT,QAEAvT,KAKXnF,QAAQC,OAAO,UAIX0X,QAAQ,WAAA,YAAA,eAAA,UAAA,SAAA,QAAA,KAAW,SAAU+M,EAAW8C,EAAc/R,EAAStQ,EAAQ/E,EAAOC,GAE5E,GAAIC,IAKFiM,eAAgB,SAAU8H,GACxB,MAAOqQ,GACJmC,sBAAsBxS,GADlBqQ,SAEE8C,IAMX1W,KAAM,WACJ,MAAO4T,GACJoC,YAAY3hB,EAAO6C,aAAaC,OAAQ9C,EAAO6C,aAAa+E,WAAWjC,WACvEzJ,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQgI,qBACbpc,KAAKoU,EAAQ6H,eACbjc,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAMXwF,YAAa,SAAUxrB,GACrB,MAAOkjB,GACJuC,iBAAiB9hB,EAAO6C,aAAaC,OAAQzG,GAC7CH,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAK,SAAUN,GACd,MAAO0U,GAAQ+H,mBAAmBhc,EAAST,KAE5CM,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBARTyH,SASE8C,IAMX/iB,aAAc,SAAUjD,EAASmD,EAAYC,GAC3C,MAAO8f,GACJjgB,aAAaU,EAAO6C,aAAaC,OAAQzG,EAASmD,GAClDtD,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAK,SAAUN,GAEd,MADA0U,GAAQgK,aAAaje,EAAST,EAAK6D,GAC5B7D,IAERM,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAVTyH,SAWE8C,IAMXrmB,WAAY,SAAUK,EAASD,EAAUE,GACvC,MAAOijB,GACJvjB,WAAWgE,EAAO6C,aAAaC,OAAQzG,EAASD,GAChDF,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQoI,qBACbxc,KAAK,SAAUN,GAEd,MADA0U,GAAQkK,WAAWne,EAAST,EAAKU,GAC1BV,IAERM,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAXTyH,SAYE8C,IAMX3iB,cAAe,SAAUrD,EAASqe,EAAUjb,GAC1C,MAAO8f,GAAUjc,mBAAmBtD,EAAO6C,aAAaC,OAAQ4X,EAAUre,GACvEH,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,MAAOoU,GAAQmK,aAAape,EAASqe,EAAUjb,KAEhDvD,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBANTyH,SAOE8C,IAMX3lB,iBAAkB,SAAUL,EAASM,EAAQL,GAC3C,MAAOijB,GAAU/iB,YAAYwD,EAAO6C,aAAaC,OAAQzG,EAASM,GAC/DT,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,MAAOoU,GAAQ8K,gBAAgB/e,EAASM,EAAQL,KAEjDJ,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBANTyH,SAOE8C,IAMXzZ,iBAAkB,SAAUvM,EAASqe,EAAU/d,EAAQL,EAAUqM,GAC/D,MAAO4W,GACJ/iB,YAAYwD,EAAO6C,aAAaC,OAAQzG,EAASM,GACjDT,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,MAAOoU,GAAQsK,gBAAgBve,EAASqe,EAAU/d,EAAQL,EAAUqM,KAErEzM,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAMX7Z,gBAAiB,SAAUnM,EAASqe,EAAU/d,EAAQL,EAAUqM,EAAcvM,GAC5E,MAAOmjB,GACJyC,WAAWhiB,EAAO6C,aAAaC,OAAQzG,EAASM,EAAQP,GACxDF,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQoI,qBACbxc,KAAK,SAAUN,GACd,MAAO0U,GAAQ9H,gBAAgBnM,EAASqe,EAAU/d,EAAQL,EAAUqM,EAAc/M,KAEnFM,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAVTyH,SAWE8C,IAMXphB,OAAQ,SAAUihB,EAAYxc,GAC5B,MAAO6Z,GACJnH,YAAYpY,EAAO6C,aAAaC,OAAQ4C,GACxCxJ,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQgI,qBACbpc,KAAK,SAAUN,GAEd,MADAA,GAAI+J,UAAYuc,EACTtmB,IAERM,KAAKoU,EAAQ8H,aACblc,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAZTyH,SAaE8C,IAMXxW,OAAQ,SAAUnG,GAChB,MAAO6Z,GACJ0C,YAAYjiB,EAAO6C,aAAaC,OAAQ9C,EAAO6C,aAAa+E,WAAWjC,UAAWD,GAClFxJ,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQgL,KAHTiE,SAIE8C,IAMXlQ,UAAW,SAAUgQ,GACnB,MAAO5C,GACJpN,UAAUnS,EAAO6C,aAAaC,OAAQqf,GACtCjmB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQiJ,gBACbrd,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAMXpiB,QAAS,SAAUyF,GACjB,MAAO6Z,GACJ6C,aAAapiB,EAAO6C,aAAaC,OAAQ9C,EAAO6C,aAAa+E,WAAWjC,UAAWD,EAAU1C,QAC7F9G,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,MAAOwJ,KAERxJ,KAAKoU,EAAQ+K,aACbnf,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBARTyH,SASE8C,IAMVhb,KAAM,SAAUhL,GACd,MAAOkjB,GACLsC,UAAU7hB,EAAO6C,aAAaC,OAAQzG,GACtCH,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ8H,aACblc,KAAKoU,EAAQgI,qBACbpc,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBARRyH,SASC8C,IAQV5c,WAAY,SAAUogB,GACpB,GAAIngB,MACAoiB,EAAY7sB,EAAMmY,SAASyS,EAASG,MACpC+B,EAAY9sB,EAAM2X,SAASiT,EAAS9S,KAexC,OAdGlY,SAAQwH,UAAUwjB,EAASxpB,WAAUqJ,EAAUsiB,QAAUnC,EAASxpB,SAClEwpB,EAASpc,OAAS5O,QAAQwH,UAAUwjB,EAASpc,MAAM5M,UAAS6I,EAAUuiB,eAAiBpC,EAASpc,MAAM5M,QACtGgpB,EAASlc,OAAS9O,QAAQwH,UAAUwjB,EAASlc,MAAM9M,UAAS6I,EAAUwiB,eAAiBrC,EAASlc,MAAM9M,QACtGhC,QAAQwH,UAAUwjB,EAASsC,UAASziB,EAAU0iB,iBAAmBvC,EAASsC,QAC1EttB,QAAQwH,UAAUwjB,EAASwC,UAAS3iB,EAAU4iB,iBAAmBzC,EAASwC,QAC1ExtB,QAAQ0C,SAASsoB,EAAS0C,gBAAe7iB,EAAU8iB,mBAAqB3C,EAAS0C,cACjF1tB,QAAQ0C,SAASwqB,KAAYriB,EAAU+iB,gBAAkBV,GACzDltB,QAAQ0C,SAASuqB,KAAYpiB,EAAUgjB,UAAYZ,GACnDjtB,QAAQ0C,SAASsoB,EAAS8C,WAAUjjB,EAAUkjB,aAAe/C,EAAS8C,SACtE9tB,QAAQ0C,SAASsoB,EAAS7U,SAAQtL,EAAUmjB,iBAAmBhD,EAAS7U,OACxE6U,EAAShc,QAAUhP,QAAQwH,UAAUwjB,EAAShc,OAAOC,SAAQpE,EAAUojB,cAAgBjD,EAAShc,OAAOC,OACvGjP,QAAQwH,UAAUwjB,EAASkD,aAAYrjB,EAAUsjB,qBAAuBnD,EAASkD,WACjFluB,QAAQwH,UAAUwjB,EAASoD,aAAYvjB,EAAUwjB,qBAAuBrD,EAASoD,WACjFpuB,QAAQ0C,SAASsoB,EAASU,SAAQ7gB,EAAUyjB,WAAatD,EAASU,OAC9DrrB,EAAGY,QAAQ4J,IAQpBnG,YAAa,SAAUsmB,GACrB,GAAIrmB,KAOJ,OANG3E,SAAQwH,UAAUwjB,EAAShpB,UAAS2C,EAAW4pB,QAAU,GAAGvD,EAAShpB,QACrEhC,QAAQwH,UAAUwjB,EAAS9oB,QAASyC,EAAW6pB,QAAU,GAAGxD,EAAS9oB,OACnEyC,EAAW6pB,QAAU,IACvBxuB,QAAQwH,UAAUwjB,EAAS/oB,SAAQ0C,EAAW4D,KAAOyiB,EAAS/oB,OAC9DjC,QAAQwH,UAAUwjB,EAASroB,QAAOgC,EAAW8pB,UAAYzD,EAASroB,MAClE3C,QAAQwH,UAAUwjB,EAASjoB,WAAU4B,EAAW+pB,aAAe1D,EAASjoB,SACpE1C,EAAGY,QAAQ0D,IAQpB+I,eAAgB,SAAUsd,GACxB,GAAIzpB,KAMJ,OALGvB,SAAQwH,UAAUwjB,EAAS9oB,UAASX,EAASitB,QAAUxD,EAAS9oB,QAChElC,QAAQwH,UAAUwjB,EAASxM,uBAAsBjd,EAASotB,UAAY3D,EAASxM,oBAAoBvP,OACnGjP,QAAQwH,UAAUwjB,EAAS5V,sBAAqB7T,EAASqtB,mBAAqB5D,EAAS5V,mBAAmBnG,OAC1GjP,QAAQwH,UAAUwjB,EAAS1V,QAAO/T,EAAS+T,KAAO0V,EAAS1V,MAC3DtV,QAAQwH,UAAUwjB,EAAS3V,wBAAuB9T,EAASstB,sBAAwB7D,EAAS3V,qBAAqBpG,OAC7G5O,EAAGY,QAAQM,IAQpBD,UAAW,SAAU0pB,GACnB,GAAIzpB,KASJ,OARGvB,SAAQwH,UAAUwjB,EAAShpB,UAAST,EAASgtB,QAAU,GAAGvD,EAAShpB,QACnEhC,QAAQwH,UAAUwjB,EAAS9oB,QAASX,EAASitB,QAAU,GAAGxD,EAAS9oB,OACjEX,EAASitB,QAAU,IACrBxuB,QAAQwH,UAAUwjB,EAAS8D,WAAa9uB,QAAQwH,UAAUwjB,EAAS8D,SAAStlB,MAAKjI,EAASotB,UAAY,GAAG3D,EAAS8D,SAAStlB,IAC3HxJ,QAAQwH,UAAUwjB,EAASpqB,wBAAuBW,EAASqtB,mBAAqB,GAAG5D,EAASpqB,sBAC5FZ,QAAQwH,UAAUwjB,EAAS1V,QAAO/T,EAAS+T,KAAO,GAAG0V,EAAS1V,MAC9DtV,QAAQwH,UAAUwjB,EAASroB,QAAOpB,EAASktB,UAAY,GAAGzD,EAASroB,MACnE3C,QAAQwH,UAAUwjB,EAASjoB,WAAUxB,EAASmtB,aAAe,GAAG1D,EAASjoB,SACrE1C,EAAGY,QAAQM,IAQnB8V,SAAU,SAAU2T,GACnB,GAAI1D,KAGJ,OAFGtnB,SAAQwH,UAAUwjB,EAASroB,QAAO2kB,EAAQyH,UAAY/D,EAASroB,MAC/D3C,QAAQwH,UAAUwjB,EAASa,QAAOvE,EAAQ0H,iBAAmBhE,EAASa,MAClExrB,EAAGY,QAAQqmB,IAIvB,OAAOhnB,MAKbN,QAAQC,OAAO,UAIX0X,QAAQ,eAAA,YAAA,eAAA,UAAA,SAAe,SAAU+M,EAAW8C,EAAc/R,EAAStQ,GAEjE,GAAI+F,IAIFE,SAAU,WACR,MAAOsZ,GACJO,sBACA5jB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQgH,2BACbpb,KAAKoU,EAAQ+E,uBACbnZ,KAAKoU,EAAQ0F,qBANTuJ,SAOE8C,IAMXvT,aAAc,WACZ,MAAOyQ,GACJQ,0BACA7jB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQgH,2BACbpb,KAAKoU,EAAQiF,2BACbrZ,KAAKoU,EAAQ0F,qBANTuJ,SAOE8C,IAGXxW,OAAQ,SAAUoU,GAChB,MAAOV,GACJS,iBAAiBC,GACjB/jB,KAAKoU,EAAQkE,eAFT+K,SAGE8C,IAGXpiB,QAAS,SAAUggB,GACjB,GAAI6J,IACFC,cAAe,GAAK9J,EAAe+J,aACnCC,WAAYhK,EAAeiK,UAC3BC,QAASlK,EAAend,OACxByU,OAAQ,IAEV,OAAOgI,GACJW,iBAAiB4J,GACjB5tB,KAAKoU,EAAQkE,eAFT+K,SAGE8C,IAGXxT,OAAQ,SAAUoR,GAChB,GAAI6J,IACFC,cAAe,GAAK9J,EAAe+J,aACnCC,WAAYhK,EAAeiK,UAC3BC,QAASlK,EAAend,OACxByU,OAAQ,IAEV,OAAOgI,GACJW,iBAAiB4J,GACjB5tB,KAAKoU,EAAQkE,eAFT+K,SAGE8C,IAGXrT,QAAS,SAAUiR,GACjB,GAAI6J,IACFC,cAAe,GAAK9J,EAAe+J,aACnCC,WAAYhK,EAAeiK,UAC3BC,QAASlK,EAAend,OACxByU,OAAQ,IAEV,OAAOgI,GACJW,iBAAiB4J,GACjB5tB,KAAKoU,EAAQkE,eAFT+K,SAGE8C,IAGX/T,gBAAiB,SAAUuX,GACzB,GAAI5F,KAWJ,OAVGplB,SAAQoD,QAAQ4nB,EAAS1jB,SAAWtH,QAAQwH,UAAUwjB,EAASuE,cAChEnK,EAAe6F,SACfjrB,QAAQqD,QAAQ2nB,EAAS1jB,OAAQ,SAAUoE,GACzC0Z,EAAe6F,MAAM1nB,MACnBisB,oBAAqBrqB,EAAO+M,YAAYoI,MACxC8U,WAAYpE,EAASuE,WACrBD,QAAS5jB,EAAMzD,YAIdmd,GAgIX,OAAOla,MAKblL,QAAQC,OAAO,UAIX0X,QAAQ,UAAA,YAAA,eAAA,UAAA,KAAA,QAAU,SAAU+M,EAAW8C,EAAc/R,EAASpV,EAAID,GAEhE,GAAIkH,IAIDwJ,KAAM,WACL,MAAO4T,GACJY,aACAjkB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ4F,sBACbha,KAAKoU,EAAQqH,cACbzb,KAAKoU,EAAQwH,gBANTyH,SAOE8C,IAMXvU,YAAa,WACX,MAAOyR,GACJa,oBACAlkB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ4F,sBACbha,KAAKoU,EAAQsH,qBACb1b,KAAKoU,EAAQ0F,qBANTuJ,SAOE8C,IAMXxW,OAAQ,SAAU9E,GAChB,MAAOwY,GACJc,YAAYtZ,GACZ7K,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ4F,sBACbha,KAAKoU,EAAQ7E,oBACbvP,KAAKoU,EAAQ4H,sBAPTqH,SAQE8C,IAMXhb,KAAM,SAAU6H,GACd,MAAOqQ,GACJiB,UAAUtR,GACVhT,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ4F,sBACbha,KAAKoU,EAAQ7E,oBACbvP,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBARTyH,SASE8C,IAMXrW,eAAgB,SAAUzF,GACxB,GAAI+jB,EAQJ,OALEA,GADoB,IAAnB/jB,EAAM8P,SACGkJ,EAAUmB,yBAAyBna,EAAMzD,QAGzCyc,EAAUkB,oBAAoBla,EAAMzD,QAEzCwnB,EACJpuB,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQmJ,kBACbvd,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBALTwS,SAMEjI,IAMXhf,YAAa,SAAU6L,GACrB,MAAOqQ,GAAUlc,YAAY6L,GAC1BhT,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQqJ,eACbzd,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBALTyH,SAME8C,IAGX/e,mBAAoB,SAAU4L,EAASwL,EAAU3X,GAC/C,MAAOwc,GAAUjc,mBAAmB4L,EAASwL,EAAU3X,EAAYC,QAChE9G,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,MAAOoU,GAAQ0K,kBAAkBN,EAAU3X,KAE5C7G,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBANTyH,SAOE8C,IAGXzf,kBAAmB,SAAUsM,EAAS7S,EAASskB,GAC7C,MAAOpB,GAAU3c,kBAAkBsM,EAAS7S,EAASskB,GAClDzkB,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,OACE8G,OAAQ3G,EACRkuB,eAAgB5J,EAAgBxd,aAGnCjH,KAAK,SAAUN,GACd,MAAO0U,GAAQ1N,kBAAkB+d,EAAgB1d,aAAcrH,KAEhEM,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBAZTyH,SAaE8C,IAMXpiB,QAAS,SAAUsG,GACjB,MAAOgZ,GACJgB,aAAaha,GACbrK,KAAKoU,EAAQkE,eACbtY,KAAK,WACJ,MAAOqK,KAERrK,KAAKoU,EAAQuH,aACb3b,KAAKoU,EAAQwH,gBAPTyH,SAQE8C,IAMXphB,OAAQ,SAAUiO,EAASnI,GACzB,MAAOwY,GACJe,YAAYpR,EAASnI,GACrB7K,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQsE,aACb1Y,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ4F,sBACbha,KAAKoU,EAAQ7E,oBACbvP,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBARTyH,SASE8C,IAMX7a,YAAa,WACX,MAAO+X,GACJ/X,cACAtL,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQyH,eACb7b,KAAKoU,EAAQ0H,iBALTuH,SAME8C,IAMXjT,YAAa,SAAUF,GACrB,MAAOqQ,GACJwC,gBAAgB7S,GAChBhT,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ0I,0BACb9c,KAAKoU,EAAQsJ,eACb1d,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBACb5b,KAAKoU,EAAQgL,KARTiE,SASE8C,IAMXhT,aAAc,SAAUH,GACtB,MAAOqQ,GACJlQ,aAAaH,GACbhT,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ0I,0BACb9c,KAAKoU,EAAQwJ,gBACb5d,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBACb5b,KAAKoU,EAAQgL,KARTiE,SASE8C,IAMX/S,oBAAqB,SAAUJ,GAC7B,MAAOqQ,GACJjQ,oBAAoBJ,GACpBhT,KAAKoU,EAAQkE,eACbtY,KAAKoU,EAAQuE,UACb3Y,KAAKoU,EAAQ0I,0BACb9c,KAAKoU,EAAQ0J,uBACb9d,KAAKoU,EAAQ4H,sBACbhc,KAAKoU,EAAQwH,gBACb5b,KAAKoU,EAAQgL,KARTiE,SASE8C,IAQXvb,WAAY,SAAU+e,GACpB,GAAI9e,MACAyjB,EAAYvvB,EAAM2X,SAASiT,EAAStP,MAmBxC,OAlBG1b,SAAQwH,UAAUwjB,EAASroB,QAAOuJ,EAAU0jB,UAAY5E,EAASroB,MACjE3C,QAAQwH,UAAUwjB,EAASa,QAAO3f,EAAU2jB,iBAAmB7E,EAASa,MACxE7rB,QAAQwH,UAAUwjB,EAAS1Q,SAAQpO,EAAU4jB,WAAa9E,EAAS1Q,OACnEta,QAAQwH,UAAUwjB,EAAS8C,WAAU5hB,EAAU6jB,aAAe/E,EAAS8C,SACvE9tB,QAAQwH,UAAUwjB,EAAS/Y,QAAO/F,EAAU8jB,UAAY,GAAKhF,EAAS/Y,MACtEjS,QAAQwH,UAAUwjB,EAASiF,aAAY/jB,EAAUgkB,iBAAmBlF,EAASiF,WAC7EjwB,QAAQwH,UAAUwjB,EAASmF,WAAUjkB,EAAUkkB,aAAe,GAAKpF,EAASmF,SAC5EnwB,QAAQwH,UAAUwjB,EAASqF,aAAYnkB,EAAUokB,kBAAoBtF,EAASqF,WAC9ErwB,QAAQwH,UAAUwjB,EAASuF,gBAAerkB,EAAUskB,mBAAqBxF,EAASuF,cAClFvwB,QAAQwH,UAAUwjB,EAASyF,aAAYvkB,EAAUwkB,gBAAkB1F,EAASyF,WAC5EzwB,QAAQwH,UAAUwjB,EAAS2F,iBAAgBzkB,EAAU0kB,oBAAsB5F,EAAS2F,eACpF3wB,QAAQwH,UAAUwjB,EAAS6F,kBAAiB3kB,EAAU4kB,qBAAuB9F,EAAS6F,gBACtF7wB,QAAQoD,QAAQusB,IAAcA,EAAUltB,OAAS,GAAKktB,EAAU,KAAIzjB,EAAU6kB,gBAAkBpB,EAAU,IAC1G3vB,QAAQoD,QAAQusB,IAAcA,EAAUltB,OAAS,GAAKktB,EAAU,KAAIzjB,EAAU8kB,cAAgBrB,EAAU,IACxG3E,EAASiG,QAAUjG,EAASiG,OAAOC,OAAQhlB,EAAUilB,QAAUnG,EAASiG,OAAOC,OAE7EhlB,EAAUilB,QAAU,EACtBnG,EAASje,YAAcie,EAASje,WAAWjC,YAAWoB,EAAUklB,gBAAkBpG,EAASje,WAAWjC,WAClGzK,EAAGY,QAAQiL,IAKtB,OAAO5E,MAGb,WACE,YAOA,SAAS+pB,GACPC,EACAzY,EACA0Y,EACApsB,EACAkM,GAGEigB,EAAWzY,QAAUA,CAGrB,IAAI2Y,GAAqBF,EAAWtH,IAAI,sBAAuB,SAAUte,EAAO+lB,GAC9E,GAAIC,GAAMD,EAAQE,UAClB9Y,GAAQ+Y,YAAcF,EAAIE,aAAeL,GAIxCpsB,GAAO+M,aAAe/M,EAAO+M,YAAYsF,WAC1CnG,EAAMe,OAIRkf,EAAWtH,IAAI,WAAY,WACzBwH,MAiDNH,EAAS1tB,SAAW,aAAc,UAAW,qBAAsB,SAAU,SA7E7E3D,QACGC,OAAO,UACP4xB,IAAIR,MA+BT,WACE,YAOA,SAASS,GAAaC,EAAgBC,GACpC,GAAIC,GAAkB,SAAU3Q,EAAUhQ,EAAQnM,GAC5CA,EAAO+M,aAAgB/M,EAAO+M,YAAYsF,WAC5C8J,EAAS,WACPhQ,EAAOK,GAAG,iBAmFhBsgB,GAAgBtuB,SAAW,WAAY,SAAU,UA9EjDouB,EACGvQ,MAAM,QACL0Q,YAAU,EACVpuB,YAAa,6BAEd0d,MAAM,cACL0Q,YAAU,EACVpuB,YAAa,6BACbquB,QAASF,IAEVzQ,MAAM,eACL+B,IAAK,IACLzf,YAAa,+BACbC,WAAY,mBACZC,aAAc,OAEfwd,MAAM,sBACL+B,IAAK,WACLzf,YAAa,iCACbC,WAAY,oBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,0BACL+B,IAAK,gBACLzf,YAAa,yCACbC,WAAY,wBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,qBACL+B,IAAK,UACLzf,YAAa,+BACbC,WAAY,mBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,oBACL+B,IAAK,SACLzf,YAAa,6BACbC,WAAY,kBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,sBACL+B,IAAK,WACLzf,YAAa,iCACbC,WAAY,oBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,uBACL+B,IAAK,YACLzf,YAAa,mCACbC,WAAY,qBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,yBACL+B,IAAK,cACLzf,YAAa,uCACbC,WAAY,uBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,sBACL+B,IAAK,WACLzf,YAAa,iCACbC,WAAY,oBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,oBACL+B,IAAK,SACLzf,YAAa,6BACbC,WAAY,kBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,0BACL+B,IAAK,eACLzf,YAAa,yCACbC,WAAY,wBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,2BACL+B,IAAK,gBACLzf,YAAa,2CACbC,WAAY,yBACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,4BACL+B,IAAK,kBACLzf,YAAa,6CACbC,WAAY,0BACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,6BACL+B,IAAK,mBACLzf,YAAa,+CACbC,WAAY,2BACZC,aAAc,KACdmuB,QAASF,IAEVzQ,MAAM,cACL+B,IAAK,SACLzf,YAAa,6BACbC,WAAY,kBACZC,aAAc,KACd2tB,QACEC,YAAa,8BAEfO,SAAA,WAAA,SAAA,UAAS,SAAU7Q,EAAUhQ,EAAQuH,GAChCA,EAAQ0R,UACTjJ,EAAS,WACPhQ,EAAOK,GAAG,qBAKjB6P,MAAM,iBACL+B,IAAK,YACLzf,YAAa,mCACbC,WAAY,qBACZC,aAAc,KACd2tB,QACEC,YAAa,iCAEfO,SAAA,WAAA,SAAA,UAAS,SAAU7Q,EAAUhQ,EAAQuH,GAChCA,EAAQ0R,UACTjJ,EAAS,WACPhQ,EAAOK,GAAG,qBAKjB6P,MAAM,eACL+B,IAAK,UACL4O,SAAA,WAAA,QAAS,SAAS7Q,EAAUjQ,GAC1BiQ,EAAS,WACPjQ,EAAM2T,eAIdgN,EAAmBI,UAAU,KAnF/BN,EAAanuB,SAAW,iBAAkB,sBA9E1C3D,QACGC,OAAO,UACPoN,OAAOykB,MAqKZ,WACE,YAEA9xB,SACGC,OAAO,UACPoyB,SAAS,WAAYC,UACrBD,SAAS,SAAUE,QACnBF,SAAS,qBAAsB,iCAC/BA,SAAS,qBAAsB,oEAC/BA,SAAS,eAAgB,wDACzBA,SAAS,cAAe,yDACxBA,SAAS,cAAe,uDACxBA,SAAS,gBAAiB,2DAC1BA,SAAS,cAAe,yDACxBA,SAAS,gBAAiB,2DAC1BA,SAAS,gBAAiB,2DAC1BA,SAAS,aAAc,uDACvBA,SAAS,gBAAiB,+CAC1BA,SAAS,iBAAkB,uCAGhC,WACE,YAOA,SAAShlB,GAAOmlB,EAAcC,EAAcC,EAAkBC,EAAmBC,GAE/EJ,EAAaK,cAAa,GAG1BH,EAAiBI,gBAAgB,WAGjCL,EAAaM,WAAY,EACzBN,EAAaO,QAAU,IACvBP,EAAaQ,cAAgB,mBAC7BR,EAAaS,mBAAoB,EACjCT,EAAaU,aAAc,EAG3BR,EAAkBS,WAAU,GAC5BT,EAAkBU,WAAW,KAG7BT,EAAaU,UAAU,SACvBV,EAAaW,eACXC,MAAO,qBAsDXnmB,EAAO1J,SAAW,eAAgB,eAAgB,mBAAoB,oBAAqB,gBAhF3F3D,QACGC,OAAO,UACPoN,OAAOA,MA8BZrN,QAAQC,OAAO,UAAU4xB,KAAK,iBAAkB,SAAS4B,GAAiBA,EAAeC,IAAI,gDAAgD,kNAC7ID,EAAeC,IAAI,gDAAgD,i2CACnED,EAAeC,IAAI,kDAAkD;AACrED,EAAeC,IAAI,+BAA+B,wGAClDD,EAAeC,IAAI,6BAA6B,gLAChDD,EAAeC,IAAI,mCAAmC,y0DACtDD,EAAeC,IAAI,yCAAyC,43aAC5DD,EAAeC,IAAI,2CAA2C,4pDAC9DD,EAAeC,IAAI,+BAA+B,umEAClDD,EAAeC,IAAI,yCAAyC,q3BAC5DD,EAAeC,IAAI,6BAA6B,6zDAChDD,EAAeC,IAAI,2BAA2B,qCAC9CD,EAAeC,IAAI,6CAA6C,irCAChED,EAAeC,IAAI,+CAA+C,skDAClED,EAAeC,IAAI,iCAAiC,+gDACpDD,EAAeC,IAAI,6BAA6B,kpCAChDD,EAAeC,IAAI,iCAAiC,gqCACpDD,EAAeC,IAAI,mCAAmC;AACtDD,EAAeC,IAAI,uCAAuC,upEAC1DD,EAAeC,IAAI,iCAAiC,kgCACpDD,EAAeC,IAAI,6BAA6B,0wCAChDD,EAAeC,IAAI,2DAA2D,uTAC9ED,EAAeC,IAAI,yDAAyD,ulBAC5ED,EAAeC,IAAI,oDAAoD,uqJACvED,EAAeC,IAAI,wCAAwC,iuJAC3DD,EAAeC,IAAI,2CAA2C,uiDAC9DD,EAAeC,IAAI,0CAA0C,qcAC7DD,EAAeC,IAAI,oCAAoC,swLACvDD,EAAeC,IAAI,oCAAoC,wkCACvDD,EAAeC,IAAI,2CAA2C,ycAC9DD,EAAeC,IAAI,qCAAqC,g+CACxDD,EAAeC,IAAI,wCAAwC,ygBAC3DD,EAAeC,IAAI,wCAAwC,4jBAC3DD,EAAeC,IAAI,wCAAwC,qjBAC3DD,EAAeC,IAAI,kCAAkC;AACrDD,EAAeC,IAAI,8CAA8C,khBACjED,EAAeC,IAAI,kCAAkC,mqBACrDD,EAAeC,IAAI,2CAA2C,whEAC9DD,EAAeC,IAAI,6CAA6C,sdAChED,EAAeC,IAAI,uCAAuC,sgBAC1DD,EAAeC,IAAI,0CAA0C,0uKAC7DD,EAAeC,IAAI,0CAA0C,k2BAC7DD,EAAeC,IAAI,uCAAuC,smDAC1DD,EAAeC,IAAI,yCAAyC,qcAC5DD,EAAeC,IAAI,mCAAmC,m4DACtDD,EAAeC,IAAI,mCAAmC,+fACtDD,EAAeC,IAAI,qCAAqC,0/EACxDD,EAAeC,IAAI,uCAAuC,wcAC1DD,EAAeC,IAAI,iCAAiC,stHACpDD,EAAeC,IAAI,iCAAiC,onBACpDD,EAAeC,IAAI,6CAA6C,ydAChED,EAAeC,IAAI,uCAAuC,yyBAC1DD,EAAeC,IAAI,mCAAmC,kcACtDD,EAAeC,IAAI,mCAAmC,kfACtDD,EAAeC,IAAI,qCAAqC,izHACxDD,EAAeC,IAAI,uCAAuC,kcAC1DD,EAAeC,IAAI,iCAAiC;AACpDD,EAAeC,IAAI,iCAAiC,yrBACpDD,EAAeC,IAAI,yDAAyD,6zJAC5ED,EAAeC,IAAI,6DAA6D","file":"scripts/app-080b1f1fdb.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('frispo', [\n      'ngAnimate',\n      'ngCookies',\n      'ngSanitize',\n      'ngMessages',\n      'ui.router',\n      'puigcerber.camelize',\n      'toastr',\n      'ezfb',\n      'ui.bootstrap',\n      'isteven-multi-select'\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardsBox', cardsBox);\n\n  /** @ngInject */\n  function cardsBox() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/advancedEdit/cardsBox/cardsBox.html',\n      controller: CardsBoxController,\n      controllerAs: 'cardsBox',\n      bindToController: true,\n      replace: true,\n      scope: {\n        cards: '=',\n        teamName: '=',\n        teamId: '=',\n        matchId: '=',\n        cardsKey: '@',\n        autocomplete: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardsBoxController(utils, $q, matches, $scope, teams) {\n      var vm = this;\n\n      vm.cardTypes = utils.cardTypes();\n      vm.disqualificationDays = utils.scores();\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createCard = function () {\n        vm.setLoading(vm.form)\n          .then(matches.form2Card)\n          .then(function (cardData) {\n            return matches.createCard(vm.matchId, cardData, vm.cardsKey);\n          })\n          .then(vm.resetForm)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroyCard = function (card) {\n        vm.setLoading()\n          .then(function () {\n            return matches.destroyMatchCard(vm.matchId, card.cardId, vm.cardsKey)\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.resetFormModel = function () {\n        vm.form = { teamId: vm.teamId, goals: 1, playId: 0 }\n      }\n\n      vm.resetFormFields = function () {\n        $scope['createCardForm' + vm.teamId].$setPristine();\n        $scope['createCardForm' + vm.teamId].$setUntouched();\n      }\n\n      vm.resetForm = function (res) {\n        vm.resetFormModel();\n        vm.resetFormFields();\n        return res;\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadName = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.name = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.name;\n        }\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadSurname = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.surname = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.surname;\n        }\n      }\n\n      vm.populateForm = function (obj) {\n        if(angular.isString(obj.name)) vm.form.name = obj.name;\n        if(angular.isString(obj.surname)) vm.form.surname = obj.surname;\n        if(angular.isNumber(obj.teamId)) vm.form.teamId = obj.teamId;\n        if(angular.isNumber(obj.playId)) vm.form.playId = obj.playId;\n      }\n\n      teams.listPlayers(vm.teamId)\n        .then(function (res) {\n          vm.autocomplete = [];\n          if(angular.isArray(res)){\n            angular.forEach(res, function (el) {\n              vm.autocomplete.push({\n                playId: el.playId,\n                name: el.playFirstname,\n                surname: el.playSurname,\n                teamId: el.playTeamId\n              });\n            });\n          }\n        });\n\n      vm.resetFormModel();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorersBox', scorersBox);\n\n  /** @ngInject */\n  function scorersBox() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/advancedEdit/scorersBox/scorersBox.html',\n      controller: ScorersBoxController,\n      controllerAs: 'scorersBox',\n      bindToController: true,\n      replace: true,\n      scope: {\n        scorers: '=',\n        teamName: '=',\n        teamId: '=',\n        matchId: '=',\n        autocomplete: '=',\n        scorersKey: '@'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorersBoxController(utils, $q, matches, teams, $scope) {\n      var vm = this;\n      vm.scores = utils.scores();\n      vm.scores.splice(0,1);\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createScorer = function () {\n        vm.setLoading(vm.form)\n          .then(matches.form2Scorer)\n          .then(function (scorerData) {\n            return matches.createScorer(vm.matchId, scorerData, vm.scorersKey);\n          })\n          .then(vm.resetForm)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroyScorer = function (scorer) {\n        vm.setLoading()\n          .then(function () {\n            return matches.destroyScorer(vm.matchId, scorer.playId, vm.scorersKey)\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.resetFormModel = function () {\n        vm.form = { teamId: vm.teamId, goals: 1, playId: 0 }\n      }\n\n      vm.resetFormFields = function () {\n        $scope['createScorerForm' + vm.teamId].$setPristine();\n        $scope['createScorerForm' + vm.teamId].$setUntouched();\n      }\n\n      vm.resetForm = function (res) {\n        vm.resetFormModel();\n        vm.resetFormFields();\n        return res;\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadName = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.name = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.name;\n        }\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadSurname = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.surname = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.surname;\n        }\n      }\n\n      vm.populateForm = function (obj) {\n        if(angular.isString(obj.name)) vm.form.name = obj.name;\n        if(angular.isString(obj.surname)) vm.form.surname = obj.surname;\n        if(angular.isNumber(obj.teamId)) vm.form.teamId = obj.teamId;\n        if(angular.isNumber(obj.playId)) vm.form.playId = obj.playId;\n      }\n\n      vm.resetFormModel();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamShow', teamShow);\n\n  /** @ngInject */\n  function teamShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/show/show.html',\n      controller: TeamShowController,\n      controllerAs: 'teamShow',\n      bindToController: true,\n      replace: true,\n      link: TeamShowLink,\n      scope: {\n        team: '=teamShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamShowController($uibModal, teams, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/teams/destroy/destroy.html',\n            controller: 'TeamDestroyController',\n            controllerAs: 'teamDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              teams.destroy(vm.team);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function TeamShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamEdit', teamEdit);\n\n  /** @ngInject */\n  function teamEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/edit/edit.html',\n      controller: TeamEditController,\n      controllerAs: 'teamEdit',\n      link: TeamEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        team: '=teamEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamEditController(models, $q, teams) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Team)\n          .then(function (teamData) {\n            return teams.update(vm.team.teamId, teamData);\n          })\n          .finally(vm.unsetLoading);\n      }\n    }\n\n    function TeamEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamDestroyController', TeamDestroyController);\n\n  /** @ngInject */\n  function TeamDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamCreateController', TeamCreateController);\n\n  /** @ngInject */\n  function TeamCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.roundNames = utils.alphabetChars();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerShow', scorerShow);\n\n  /** @ngInject */\n  function scorerShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorers/show/show.html',\n      controller: ScorerShowController,\n      controllerAs: 'scorerShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerShowLink,\n      scope: {\n        scorer: '=scorerShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerShowController($uibModal, models) {\n      var vm = this;\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerEdit', scorerEdit);\n\n  /** @ngInject */\n  function scorerEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorers/edit/edit.html',\n      controller: ScorerEditController,\n      controllerAs: 'scorerEdit',\n      link: ScorerEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        scorer: '=scorerEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerEditController(models, $q, $uibModal, events) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createNewScorerMatch = function () {\n        $uibModal.open({\n            templateUrl: 'app/pages/scorerMatch/create/create.html',\n            controller: 'ScorerMatchCreateController',\n            controllerAs: 'scorerMatchCreate',\n            windowClass: 'modal-success'\n          }).result\n          .then(function (res) {\n            if(angular.isDefined(res)){\n              vm.setLoading(res)\n                .then(events.form2ScorerMatch)\n                .then(events.createScorerMatch)\n                .finally(vm.unsetLoading);\n            }\n          })\n      }\n    }\n\n    function ScorerEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerMatchShow', scorerMatchShow);\n\n  /** @ngInject */\n  function scorerMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorerMatch/show/show.html',\n      controller: ScorerMatchShowController,\n      controllerAs: 'scorerMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerMatchShowLink,\n      scope: {\n        scorerMatch: '=scorerMatchShow',\n        scorerMatchPlayerId: '=scorerMatchPlayerId'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerMatchShowController($uibModal, models, utils, events) {\n      var vm = this;\n      vm.scores = utils.scores();\n\n      vm.submitGoal = function (){\n        return events\n          .updateScorerMatch(models.currentEvent.evenId, vm.scorerMatch.matcId, {\n            scor_play_id: vm.scorerMatchPlayerId,\n            scor_goal: vm.form.goal\n          })\n          .then(function () {\n            return vm.models.currentEvent.evenId;\n          })\n          .then(events.showScorers)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/scorerMatch/destroy/destroy.html',\n            controller: 'ScorerMatchDestroyController',\n            controllerAs: 'scorerMatchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroyScorerMatch(models.currentEvent.evenId, vm.scorerMatchPlayerId, vm.scorerMatch);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScorerMatchDestroyController', ScorerMatchDestroyController);\n\n  /** @ngInject */\n  function ScorerMatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('pressShow', pressShow);\n\n  /** @ngInject */\n  function pressShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/press/show/show.html',\n      controller: PressShowController,\n      controllerAs: 'pressShow',\n      bindToController: true,\n      replace: true,\n      link: PressShowLink,\n      scope: {\n        press: '=pressShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PressShowController($uibModal, press, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/press/destroy/destroy.html',\n            controller: 'PressDestroyController',\n            controllerAs: 'pressDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              press.destroy(vm.press);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function PressShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamEdit', teamEdit);\n\n  /** @ngInject */\n  function teamEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/edit/edit.html',\n      controller: TeamEditController,\n      controllerAs: 'teamEdit',\n      link: TeamEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        team: '=teamEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamEditController(models, $q, teams) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Team)\n          .then(function (teamData) {\n            return teams.update(vm.team.teamId, teamData);\n          })\n          .finally(vm.unsetLoading);\n      }\n    }\n\n    function TeamEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressDestroyController', PressDestroyController);\n\n  /** @ngInject */\n  function PressDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressCreateController', PressCreateController);\n\n  /** @ngInject */\n  function PressCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n    vm.models = models;\n\n    vm.events = angular.copy(models.events);\n    vm.multiSelectTranslation = utils.istevenMultiSelectTranslation();\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n\n    vm.selectFields = [\n      {\n        key: 'ranking',\n        name: 'Mostra classifica',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'matches',\n        name: 'Mostra giornate',\n        options: [\n          {\n            id: 1,\n            name: 'Corrente + 2 successive'\n          },\n          {\n            id: 2,\n            name: 'Precedente + Corrente + Successiva'\n          },\n          {\n            id: 3,\n            name: 'Tutto il calendario'\n          }\n        ]\n      },\n      {\n        key: 'scorers',\n        name: 'Mostra marcatori',\n        options: [\n          {\n            id: 1,\n            name: 'Solo i primi 10'\n          },\n          {\n            id: 2,\n            name: 'Solo i primi 3'\n          },\n          {\n            id: 3,\n            name: 'Tutti i marcatori'\n          }\n        ]\n      },\n      {\n        key: 'yellowcards',\n        name: 'Mostra ammoniti',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'diffide',\n        name: 'Mostra diffide',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'squalifications',\n        name: 'Mostra squalifiche',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'amends',\n        name: 'Mostra ammende',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      }\n    ];\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('playerShow', playerShow);\n\n  /** @ngInject */\n  function playerShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/players/show/show.html',\n      controller: PlayerShowController,\n      controllerAs: 'playerShow',\n      bindToController: true,\n      replace: true,\n      link: PlayerShowLink,\n      scope: {\n        player: '=playerShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PlayerShowController($uibModal, teams, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/players/destroy/destroy.html',\n            controller: 'PlayerDestroyController',\n            controllerAs: 'playerDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              teams.destroyPlayer(vm.player);\n            }\n          });\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function PlayerShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('playerEdit', playerEdit);\n\n  /** @ngInject */\n  function playerEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/players/edit/edit.html',\n      controller: PlayerEditController,\n      controllerAs: 'playerEdit',\n      link: PlayerEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        player: '=playerEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PlayerEditController(models, $q, teams, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Player)\n          .then(function (playerData) {\n            return teams.updatePlayer(vm.player.playId, playerData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { };\n    }\n\n    function PlayerEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchDestroyController', MatchDestroyController);\n\n  /** @ngInject */\n  function MatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PlayerCreateController', PlayerCreateController);\n\n  /** @ngInject */\n  function PlayerCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.scores = utils.scores();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('managerMatchShow', managerMatchShow);\n\n  /** @ngInject */\n  function managerMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/managerMatches/show/show.html',\n      controller: ManagerMatchShowController,\n      controllerAs: 'managerMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ManagerMatchShowLink,\n      scope: {\n        match: '=managerMatchShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ManagerMatchShowController($uibModal, matches, models) {\n      var vm = this;\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ManagerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('managerMatchEdit', managerMatchEdit);\n\n  /** @ngInject */\n  function managerMatchEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/managerMatches/edit/edit.html',\n      controller: ManagerMatchEditController,\n      controllerAs: 'managerMatchEdit',\n      link: ManagerMatchEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        match: '=managerMatchEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ManagerMatchEditController(models, $q, matches, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(matches.form2Match)\n          .then(function (matchData) {\n            return matches.update(vm.match.matcDayId, matchData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { matchId: vm.match.matcId };\n    }\n\n    function ManagerMatchEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('invitationShow', invitationShow);\n\n  /** @ngInject */\n  function invitationShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/invitations/show/show.html',\n      controller: InvitationShowController,\n      controllerAs: 'invitationShow',\n      bindToController: true,\n      replace: true,\n      link: InvitationShowLink,\n      scope: {\n        invitation: '=invitationShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function InvitationShowController($uibModal, invitations, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/invitations/destroy/destroy.html',\n            controller: 'InvitationDestroyController',\n            controllerAs: 'invitationDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              invitations\n                .destroy(vm.invitation)\n                .then(invitations.listSent);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function InvitationShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationDestroyController', InvitationDestroyController);\n\n  /** @ngInject */\n  function InvitationDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationCreateController', InvitationCreateController);\n\n  /** @ngInject */\n  function InvitationCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n    vm.events = angular.copy(models.events);\n    vm.multiSelectTranslation = utils.istevenMultiSelectTranslation();\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventShow', eventShow);\n\n  /** @ngInject */\n  function eventShow(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/show/show.html',\n      controller: EventShowController,\n      controllerAs: 'eventShow',\n      bindToController: true,\n      replace: true,\n      link: EventShowLink,\n      scope: {\n        event: '=eventShow',\n        hideControls: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventShowController(models, $uibModal) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/events/destroy/destroy.html',\n            controller: 'EventDestroyController',\n            controllerAs: 'eventDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroy(vm.event);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function EventShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventRecreateCalendarController', EventRecreateCalendarController);\n\n  /** @ngInject */\n  function EventRecreateCalendarController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventEdit', eventEdit);\n\n  /** @ngInject */\n  function eventEdit(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/edit/edit.html',\n      controller: EventEditController,\n      controllerAs: 'eventEdit',\n      link: EventEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        event: '=eventEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventEditController(models, matches, $uibModal, $q, utils) {\n      var vm = this;\n\n      vm.models = models;\n      vm.pointsOptions = utils.scores();\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(events.form2Event)\n          .then(function (eventData) {\n            return events.update(vm.event.evenId, eventData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.publish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 1});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.unpublish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 0});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.recreateCalendar = function () {\n        $uibModal.open({\n          templateUrl: 'app/pages/events/edit/recreateCalendar.html',\n          controller: 'EventRecreateCalendarController',\n          controllerAs: 'eventRecreateCalendar',\n          windowClass: 'modal-warning'\n        }).result\n        .then(function (res) {\n          if(res === true){\n            return vm.setLoading(vm.event.evenId)\n              .then(matches.createCalendar)\n              .then(function () {\n                return events.show(vm.event.evenId);\n              })\n              .finally(vm.unsetLoading);\n          }\n        })\n\n      }\n    }\n\n    function EventEditLink(scope, el, attrs, vm) {\n\n      el.find('.accordion-body').on('show.bs.collapse', function () {\n        events.show(vm.event.evenId);\n        events.listRegions();\n      });\n\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n\n      scope.$watch('eventEdit.event.evenCurrentDay', function (newVal, oldVal) {\n        if(angular.isDefined(newVal) && newVal !== oldVal){\n          vm.form.currentDay = vm.event.evenCurrentDay;\n        }\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventDestroyController', EventDestroyController);\n\n  /** @ngInject */\n  function EventDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardShow', cardShow);\n\n  /** @ngInject */\n  function cardShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/disciplinary/show/show.html',\n      controller: CardShowController,\n      controllerAs: 'cardShow',\n      bindToController: true,\n      replace: true,\n      link: CardShowLink,\n      scope: {\n        card: '=cardShow',\n        config: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardShowController($uibModal, matches, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/disciplinary/destroy/destroy.html',\n            controller: 'CardDestroyController',\n            controllerAs: 'cardDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroy(vm.card);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function CardShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardEdit', cardEdit);\n\n  /** @ngInject */\n  function cardEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/disciplinary/edit/edit.html',\n      controller: CardEditController,\n      controllerAs: 'cardEdit',\n      link: CardEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        card: '=cardEdit',\n        config: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardEditController(models, $q) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n    }\n\n    function CardEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardMatchShow', cardMatchShow);\n\n  /** @ngInject */\n  function cardMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/cardMatch/show/show.html',\n      controller: ScorerMatchShowController,\n      controllerAs: 'cardMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerMatchShowLink,\n      scope: {\n        cardMatch: '=cardMatchShow',\n        config: '=',\n        cardMatchPlayerId: '=cardMatchPlayerId'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerMatchShowController($uibModal, models, utils, matches) {\n      var vm = this;\n      vm.scores = utils.scores();\n\n      vm.submit = function (){\n        return matches\n          .form2CardMatch(vm.form)\n          .then(function (cardData) {\n            return matches.updateEventCard(\n              vm.cardMatch.matcId,\n              vm.cardMatchPlayerId,\n              vm.cardMatch.cardId,\n              vm.cardsKey,\n              vm.cardMatchKey,\n              cardData\n            );\n          })\n      }\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/cardMatch/destroy/destroy.html',\n            controller: 'CardMatchDestroyController',\n            controllerAs: 'cardMatchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroyEventCard(vm.cardMatch.matcId, vm.cardMatchPlayerId, vm.cardMatch.cardId, vm.config.cardsKey, vm.config.cardMatchKey);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CardMatchDestroyController', CardMatchDestroyController);\n\n  /** @ngInject */\n  function CardMatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchShow', matchShow);\n\n  /** @ngInject */\n  function matchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/show/show.html',\n      controller: MatchShowController,\n      controllerAs: 'matchShow',\n      bindToController: true,\n      replace: true,\n      link: MatchShowLink,\n      scope: {\n        match: '=matchShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchShowController($uibModal, matches, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/calendar/destroy/destroy.html',\n            controller: 'MatchDestroyController',\n            controllerAs: 'matchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroy(vm.match);\n            }\n          });\n      }\n\n      vm.advancedEdit = function () {\n        $uibModal.open({\n              templateUrl: 'app/pages/calendar/advancedEdit/advancedEdit.html',\n              controller: 'MatchAdvancedEditController',\n              controllerAs: 'matchAdvEdit',\n              windowClass: 'modal-default',\n              size: 'lg',\n              resolve: {match: vm.match}\n          }).result\n          .then();\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function MatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchEdit', matchEdit);\n\n  /** @ngInject */\n  function matchEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/edit/edit.html',\n      controller: MatchEditController,\n      controllerAs: 'matchEdit',\n      link: MatchEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        match: '=matchEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchEditController(models, $q, matches, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(matches.form2Match)\n          .then(function (matchData) {\n            return matches.update(vm.match.matcDayId, matchData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { matchId: vm.match.matcId };\n    }\n\n    function MatchEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchDestroyController', MatchDestroyController);\n\n  /** @ngInject */\n  function MatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DayCreateController', DayCreateController);\n\n  /** @ngInject */\n  function DayCreateController($uibModalInstance, models) {\n    var vm = this;\n\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchCreateController', MatchCreateController);\n\n  /** @ngInject */\n  function MatchCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.scores = utils.scores();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchAdvancedEditController', MatchAdvancedEditController);\n\n  /** @ngInject */\n  function MatchAdvancedEditController($q, $uibModalInstance, match, utils, matches, teams) {\n    var vm = this;\n    vm.match = match;\n    vm.scores = utils.scores();\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n\n    vm.submit = function () {\n      return vm.setLoading(vm.form)\n        .then(matches.form2Match)\n        .then(function (matchData) {\n          return matches.update(vm.match.matcDayId, matchData);\n        })\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.form = {\n      matchId: vm.match.matcId,\n      teamA: { teamId: vm.match.matcTeamIdA },\n      teamB: { teamId: vm.match.matcTeamIdB },\n      played: { value: vm.match.matcFlgPlay }\n    }\n\n    vm.createAutocompleteObj = function (players) {\n      var autocomplete = [];\n      if(angular.isArray(players)){\n        angular.forEach(players, function (player) {\n          autocomplete.push({\n            playId: player.playId,\n            name: player.playFirstname,\n            surname: player.playSurname,\n            teamId: player.playTeamId\n          });\n        });\n      }\n      return autocomplete;\n    }\n\n    vm.autocompleteA = [];\n    vm.autocompleteB = [];\n\n    matches.show(vm.match.matcId)\n      .then(function () { // Retrieve players for autocomplete\n        teams\n          .listPlayers(vm.match.matcTeamIdA)\n          .then(vm.createAutocompleteObj)\n          .then(function (res) {\n            vm.autocompleteA = res;\n          })\n        teams\n          .listPlayers(vm.match.matcTeamIdB)\n          .then(vm.createAutocompleteObj)\n          .then(function (res) {\n            vm.autocompleteB = res;\n          })\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardStepBox', wizardStepBox);\n\n  /** @ngInject */\n  function wizardStepBox() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardStepBox/wizardStepBox.html',\n      controller: WizardStepBoxController,\n      controllerAs: 'wizardStepBox',\n      bindToController: true,\n      scope: {\n        wizard: '=',\n        step: '=',\n        title: '@'\n      },\n      link: WizardStepBoxLink,\n      transclude: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardStepBoxController() {\n    }\n\n    function WizardStepBoxLink(scope, el, attrs, vm) {\n      if(vm.step === vm.wizard.currentStep){\n        vm.active = true;\n      }\n      else{\n        el.find('.wizard-step-box').first().addClass('collapsed-box');\n        el.find('.box-body').first().hide();\n      }\n\n      scope.$watch('wizardStepBox.wizard.currentStep', function (newVal, oldVal) {\n        if(newVal === oldVal) return;\n        // Activate the box\n        if(newVal === vm.step && !vm.active){\n          vm.active = true;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n        // Deactivate the box\n        else if(newVal !== vm.step && vm.active){\n          vm.active = false;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardProgress', wizardProgress);\n\n  /** @ngInject */\n  function wizardProgress() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardProgress/wizardProgress.html',\n      controller: WizardProgressController,\n      controllerAs: 'wizardProgress',\n      bindToController: true,\n      scope: {\n        wizard: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardProgressController() {\n      var vm = this;\n\n      vm.range = function (n) {\n        return new Array(n);\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamsController', TeamsController);\n\n  /** @ngInject */\n  function TeamsController(models, events, teams, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(teams.list)                       // List the teams of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewTeam = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/teams/create/create.html',\n          controller: 'TeamCreateController',\n          controllerAs: 'teamCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(teams.form2Team)\n              .then(teams.create)\n              .then(teams.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScorersController', ScorersController);\n\n  /** @ngInject */\n  function ScorersController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.showScorers)               // List the scorers of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScoreboardController', ScoreboardController);\n\n  /** @ngInject */\n  function ScoreboardController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent)        // Set a spinning loader on the page\n        .then(events.showScoreboard)            // Get the scoreboard for given event\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController(users, $state) {\n    var vm = this;\n\n    users.onLoggedOut(); // ensure the user is logged out\n\n    vm.user = vm.user || {};\n\n    vm.register = function () {\n      users\n        .register(vm.user)\n        .then(users.onLoggedIn)\n        .then(function () {\n          $state.go('main.access');\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ProfileController', ProfileController);\n\n  /** @ngInject */\n  function ProfileController(models, users, $q) {\n    var vm = this;\n    vm.models = models;\n\n    vm.userTypes = [\n      { num: 0, name: 'Giocatore'},\n      { num: 1, name: 'Organizzatore'}\n    ];\n\n    vm.userSubscriptions = [\n      { num: 0, name: 'Gratuito' },\n      { num: 1, name: 'Standard'},\n      { num: 2, name: 'Premium'}\n    ];\n\n    vm.submit = function () {\n      vm.setLoading(vm.form)\n        .then(users.update)\n        .then(vm.updateForm)\n        .finally(vm.unsetLoading)\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.updateForm = function (res) {\n      vm.form = {\n        type: models.currentUser.type,\n        subscription: models.currentUser.subscription\n      }\n      return $q.resolve(res);\n    }\n\n    vm.setLoading()\n      .then(users.info)\n      .then(vm.updateForm)\n      .then(vm.unsetLoading);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressController', PressController);\n\n  /** @ngInject */\n  function PressController(models, events, press, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(press.list)                       // List the press of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewPress = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/press/create/create.html',\n          controller: 'PressCreateController',\n          controllerAs: 'pressCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(press.form2Press)\n              .then(press.create)\n              .then(press.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PlayersController', PlayersController);\n\n  /** @ngInject */\n  function PlayersController(models, events, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateTeam)                    // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the team (it's been selected now)\n    vm.updateTeam = function () {\n      // No current event selected, or no teams yet -> noop\n      if(!models.currentEvent || !models.currentEvent.teams || models.currentEvent.teams.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentTeam){\n        // An event has been selected -> use it's first available team\n        models.currentEvent.currentTeam = models.currentEvent.teams[0];\n      }\n      // Current day selected -> manually find and copy the real team from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.teams.length; i++) {\n          if(models.currentEvent.teams[i].teamId === vm.models.currentEvent.currentTeam.teamId){\n            vm.models.currentEvent.currentTeam = models.currentEvent.teams[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(teams.listPlayers)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewPlayer = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/players/create/create.html',\n          controller: 'PlayerCreateController',\n          controllerAs: 'playerCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(teams.form2Player)\n              .then(teams.createPlayer)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ManagerMatchesController', ManagerMatchesController);\n\n  /** @ngInject */\n  function ManagerMatchesController(models, events, matches, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.currentUser.managedEvents.length; i++) {\n        if(models.currentUser.managedEvents[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.currentUser.managedEvents[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .listManaged()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ManagerEventsController', ManagerEventsController);\n\n  /** @ngInject */\n  function ManagerEventsController(models, events) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // API call\n    events.listManaged();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController(users, $state, ezfb) {\n    var vm = this;\n\n    users.onLoggedOut(); // ensure the user is logged out\n\n    vm.user = vm.user || {};\n\n    // Login with username and password\n    vm.login = function () {\n      users\n        .login(vm.user)\n        .then(function () {\n          $state.go('main.access');\n        });\n    }\n\n    // Login with facebook\n    vm.loginFacebook = function () {\n      ezfb.login(null,{scope: 'email,public_profile'});\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationsController', InvitationsController);\n\n  /** @ngInject */\n  function InvitationsController(models, events, invitations, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    vm.createNewInvitation = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/invitations/create/create.html',\n          controller: 'InvitationCreateController',\n          controllerAs: 'invitationCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(invitations.form2Invitation)\n              .then(invitations.create)\n              .then(invitations.listSent)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    events.list();\n    invitations.listSent();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventsController', EventsController);\n\n  /** @ngInject */\n  function EventsController(models, events, invitations, users) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // Create filter objects to split events into published and not published\n    vm.tableFilters = [\n      // published events\n      {\n        eventFilter: { evenStatoEvento: '0' },\n        title: 'Eventi non pubblicati',\n        boxClass: 'box-warning'\n      },\n      {\n        eventFilter: { evenStatoEvento: '1' },\n        title: 'Eventi pubblicati',\n        boxClass: 'box-success'\n      }\n    ];\n\n    vm.acceptInvitation = function (invitation) {\n      invitations\n        .accept(invitation)\n        .then(invitations.listReceived)\n        .then(users.show); // Update user data because permissions may change\n    }\n\n    vm.declineInvitation = function (invitation) {\n      invitations\n        .decline(invitation)\n        .then(invitations.listReceived);\n    }\n\n    // API call\n    events.list();\n    invitations.listReceived();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DisciplinaryController', DisciplinaryController);\n\n  /** @ngInject */\n  function DisciplinaryController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(function (eventId) { // List disciplinary stuff\n          return $q.all([\n            events.listYellows(eventId),\n            events.listDiffides(eventId),\n            events.listSqualifications(eventId)\n          ]);\n        })\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n\n    vm.cardConfigs = [\n      {\n        header: 'Ammonizioni',\n        boxClass: 'box-success',\n        emptyMessage: 'Non ci sono ammonizioni in questo evento',\n        cardsKey: 'yellows',\n        cardMatchKey: 'matcYellowCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero ammonizioni',\n            key: 'nroYellowCards'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: true,\n          delete: false,\n          editDetail: false,\n          deleteDetail: true\n        }\n      },\n      {\n        header: 'Diffide',\n        boxClass: 'box-warning',\n        emptyMessage: 'Non ci sono diffide in questo evento',\n        cardsKey: 'diffides',\n        cardMatchKey: 'matcYellowCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero ammonizioni',\n            key: 'nroYellowCards'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: false,\n          delete: false,\n          editDetail: false,\n          deleteDetail: false\n        }\n      },\n      {\n        header: 'Squalifiche',\n        boxClass: 'box-danger',\n        emptyMessage: 'Non ci sono squalifiche in questo evento',\n        cardsKey: 'squalifications',\n        cardMatchKey: 'matcRedCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero squalifiche',\n            key: 'nroRedCards'\n          }\n        ],\n        detailFields: [\n          {\n            name: 'Tipo di squalifica',\n            key: 'typeSqualificationsPretty'\n          },\n          {\n            name: 'Giornate di squalifica',\n            key: 'daySqualifications'\n          },\n          {\n            name: 'Stato',\n            key: 'squalificationStatus'\n          },\n          {\n            name: 'Note',\n            key: 'note'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: true,\n          delete: false,\n          editDetail: {\n            daySqualifications: {\n              type: 'select',\n              options: [{name:'1',value:1},{name:'2',value:2},{name:'3',value:3},{name:'4',value:4},{name:'5',value:5},{name:'6',value:6},{name:'7',value:7},{name:'8',value:8},{name:'9',value:9},{name:'10',value:10},{name:'11',value:11},{name:'12',value:12},{name:'13',value:13},{name:'14',value:14},{name:'15',value:15},{name:'16',value:16},{name:'17',value:17},{name:'18',value:18},{name:'19',value:19},{name:'20',value:20}]\n            },\n            squalificationStatus: {\n              type: 'select',\n              options: [{name:'Non scontata',value:0},{name:'Scontata',value:1}]\n            },\n            note: {\n              type: 'text'\n            }\n          },\n          deleteDetail: true\n        }\n      }\n    ];\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CreateEventController', CreateEventController);\n\n  /** @ngInject */\n  function CreateEventController(Wizard, events, resPipe, toastr, teams, matches, $log, $state, models, utils) {\n    var vm = this;\n\n    vm.models = models;\n    // Initialize the wizard object\n    vm.wizard = new Wizard({totalSteps: 3, startFromStep: 1});\n\n    // If true, the user have to manually insert the rounds.\n    // If false, the user can choose between \"Inserimento gironi manuale\" and \"Inserimento gironi automatico\".\n    vm.forceManualRounds = true;\n\n    vm.roundNames = utils.alphabetChars();\n\n    vm.initDefaultTeams = function () {\n      if(!vm.step2.teams){\n        vm.step2.teams = [];\n        vm.addTeam();\n        vm.addTeam();\n      }\n    }\n\n    vm.addTeam = function () {\n      if(vm.step2 && vm.step2.roundType === 1){\n        vm.step2.teams.push({name: ''});\n      }\n      else{\n        vm.step2.teams.push({name: '', round: ''});\n      }\n    };\n\n    vm.removeTeam = function (index) {\n      if(vm.step2.teams.length <= 2){\n        toastr.error('E\\' obbligatorio inserire almeno 2 squadre', 'Impossibile rimuovere la squadra');\n      }\n      else{\n        vm.step2.teams.splice(index,1);\n      }\n    }\n\n    vm.step1Done = function () {\n      if(!vm.step2) vm.step2 = {}; // Initialize step2 if needed\n\n      // If not \"Torneo a gironi\"\n      if(vm.step1.type != 1){\n        vm.step2.roundType = '1';\n        vm.initDefaultTeams();\n      }\n\n      // If \"torneo a gironi\" and user can't choose manual or automatic round type\n      else if(vm.forceManualRounds){\n        vm.step2.roundType = '0'; // Manual rounds\n        vm.initDefaultTeams();\n      }\n\n      vm.wizard.next();\n    }\n\n    vm.submitStep1 = function () {\n      $log.info('creando l\\'evento..');\n      return events\n        .form2Event(vm.step1)\n        .then(events.create);\n    }\n\n    vm.step2Done = function () {\n      vm.wizard.next();\n    }\n\n    vm.submitStep2 = function () {\n      $log.info('creando le squadre..');\n      return teams\n        .form2Teams(vm.step2)\n        .then(teams.addGroup);\n    }\n\n    vm.step3Done = function () {\n      vm.submitWizard();\n    }\n\n    vm.submitStep3 = function () {\n      $log.info('creando il calendario..');\n      return matches.createCalendar(models.currentEvent.evenId);\n    }\n\n    vm.submitWizard = function () {\n      vm.wizard.loading = true;\n      vm.submitStep1()\n        .then(vm.submitStep2)\n        .then(vm.submitStep3)\n        .then(function () {\n          $state.go('main.admin.events');\n        })\n        .finally(function () {\n          vm.wizard.loading = false;\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CalendarController', CalendarController);\n\n  /** @ngInject */\n  function CalendarController(models, events, matches, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewMatch = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/create/create.html',\n          controller: 'MatchCreateController',\n          controllerAs: 'matchCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Match)\n              .then(matches.create)\n              .then(matches.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    vm.createNewDay = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/createDay/create.html',\n          controller: 'DayCreateController',\n          controllerAs: 'dayCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Day)\n              .then(matches.createDay)\n              .then(function (res) {\n                models.currentEvent.currentDay = res;\n                return res;\n              })\n              .then(vm.updateMatchDay)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('AccessController', AccessController);\n\n  /** @ngInject */\n  function AccessController(models, users) {\n    // User cached\n    if(models.currentUser && models.currentUser.userToken) {\n      users\n        .onLoggedIn(models.currentUser) // Treat the user as logged in\n        .catch(users.onLoggedOut);      // In case of error -> logout\n    }\n\n    // User not logged in and not cached\n    else {\n      users.onLoggedOut();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .filter('wizardTextProgress', wizardTextProgressFilter);\n\n  /** @ngInject */\n  function wizardTextProgressFilter() {\n    return function(wizard) {\n      return 'Step ' + wizard.currentStep + ' di ' + wizard.totalSteps;\n    };\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * A wizard\n   */\n  .factory('Wizard', function () {\n    var defaults = {\n      totalSteps: 1,\n      startFromStep: 1\n    }\n\n    return function Wizard (options) {\n      this.options = angular.merge(defaults, options);\n\n      this.totalSteps = this.options.totalSteps;\n      this.currentStep = this.options.startFromStep;\n\n      this.next = function () {\n        if(this.currentStep < this.totalSteps){\n          this.currentStep++;\n        }\n      }\n\n      this.prev = function () {\n        if(this.currentStep > 1){\n          this.currentStep--;\n        }\n      }\n    };\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Utilities functions.\n   */\n  .factory('utils', function () {\n    var utils = {\n      str2Date: function (str) {\n        if(!str) return;\n\n        var res = [];\n        var range = str.split('->');\n        angular.forEach(range, function (date) {\n          var split = date.split('/');\n          if(split.length !== 3) return;\n          res.push(split[2].trim() + '-' + split[1].trim() + '-' + split[0].trim())\n        })\n        if(res.length === 1){\n          return res[0];\n        }\n        else{\n          return res;\n        }\n      },\n      date2Str: function (dateStart, dateEnd) {\n        if(!dateStart) return;\n\n        var split = dateStart.split('-');\n        if(split.length !== 3) return;\n        var res = split[2].trim() + '/' + split[1].trim() + '/' + split[0].trim();\n\n        if(dateEnd){\n          res +=  ' -> ' + utils.date2Str(dateEnd);\n        }\n        return res;\n      },\n      str2Time: function (str) {\n        return str;\n        // if(!str) return;\n        //\n        // var res = null;\n        // var splitted = str.trim().split(' ');\n        // if(splitted.length == 2){\n        //   var hm = splitted[0].trim().split(':');\n        //   var pmAdd = (splitted[1] == 'PM' ? 12 : 0);\n        //   if(hm.length == 2){\n        //     res = (+hm[0] + pmAdd) + ':' + hm[1];\n        //   }\n        // }\n        // return res;\n      },\n      alphabetChars: function () {\n        return ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n      },\n      scores: function () {\n        return [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\n      },\n      istevenMultiSelectTranslation: function () {\n        return {\n            selectAll       : \"Seleziona tutti\",\n            selectNone      : \"Deseleziona tutti\",\n            reset           : \"Reset\",\n            search          : \"Cerca...\",\n            nothingSelected : \"Nessuno selezionato\"\n        };\n      },\n      cardTypes: function () {\n        return [\n          {\n            id: 0,\n            name: 'Ammonizione'\n          },\n          {\n            id: 1,\n            name: 'Espulsione per somma ammonizioni'\n          },\n          {\n            id: 2,\n            name: 'Espulsione diretta'\n          }\n        ]\n      }\n    };\n\n    return utils;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * UI state service.\n   * Keep application-wide shared variables\n   */\n  .factory('uiState', function () {\n    var uiState = {};\n\n    return uiState;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('timepicker', timepicker);\n\n  /** @ngInject */\n  function timepicker() {\n    var directive = {\n      restrict: 'A',\n      link: timepickerLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function timepickerLink(scope, el) {\n      el.clockpicker({autoclose: true});\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('showOnHover', showOnHover);\n\n  /** @ngInject */\n  function showOnHover() {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        showOnHover: '@',\n        showAnimate: '='\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var visible = false;\n      var target = angular.element(scope.showOnHover);\n\n      scope.$watch('showOnHover', function () {\n        target.removeClass('show-on-hover-target').removeClass('not-visible').removeClass('show-animate');\n        target = angular.element(scope.showOnHover);\n        target.addClass('show-on-hover-target');\n        if(scope.showAnimate){\n          target.addClass('show-animate');\n        }\n        scope.updateVisibility();\n      })\n\n      scope.updateVisibility = function () {\n        if(visible){\n          target.removeClass('not-visible');\n        }\n        else{\n          target.addClass('not-visible');\n        }\n      }\n\n      el.hover(function() {\n          if(!visible){\n            visible = true;\n            scope.updateVisibility();\n          }\n        },\n        function() {\n          if(visible){\n            visible = false;\n            scope.updateVisibility();\n          }\n        }\n      );\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Response management pipeline.\n   * Utilities to process a response from the moment it arrives to the models update.\n   * To use in a promise chain as a pipeline\n   */\n  .factory('resPipe', function ($q, $filter, models, longTermMemory, $log, utils) {\n    var resPipe = {\n\n      /**\n       * Parse the initial response from the Frispo API\n       */\n      parseResponse: function(res) {\n        // Look for the response status_code\n        switch (res.status_code) {\n          case 200:\n            return res.data;\n          default:\n            return $q.reject({error: res.error});\n        }\n      },\n\n      /**\n       * Unwrap the response from a single element array\n       */\n      unwrapArray: function (res) {\n        if(angular.isArray(res) && res.length === 1) return res[0];\n        return res;\n      },\n\n      /**\n       * Camelize the response\n       */\n      camelize: function (res) {\n        var newRes;\n        if(angular.isArray(res)){\n          newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.camelize(el));\n          })\n          return newRes;\n        }\n        else if(angular.isObject(res)){\n          newRes = {};\n          angular.forEach(res, function(v,k){\n            newRes[$filter('camelize')(k)] = resPipe.camelize(v);\n          });\n          return newRes;\n        }\n        else {\n          return res;\n        }\n      },\n\n      /**\n       * Inject default fields to User objects\n       */\n      injectUserDefaults: function (res) {\n        res.displayName = res.displayName || res.email || res.name || 'Nome Cognome';\n        return res;\n      },\n\n      /**\n       * Update the current user\n       */\n      updateCurrentUser: function (res) {\n        models.currentUser = res;\n        return res;\n      },\n\n      updateSentInvitations: function (res) {\n        models.currentUser.sentInvitations = res;\n        return res;\n      },\n\n      updateReceivedInvitations: function (res) {\n        models.currentUser.receivedInvitations = res;\n        return res;\n      },\n\n      /**\n       * Update the current user, merging data instead of replacing\n       */\n      updateMergeCurrentUser: function (res) {\n        if(res.permissions){ models.currentUser.permissions = []; }\n        return angular.merge(models.currentUser, res);\n      },\n\n      /**\n       * Update the preferences current user\n       */\n      updatePreferences: function (res) {\n        models.currentUser.preferences = res;\n        return res;\n      },\n\n      /**\n       * Mock an anonymous user for testing APIs\n       */\n      mockAnonymousUser: function (res) {\n        res.accessToken = '4e66c966e021918f0b088ddc929847f7';\n        res.uuid = '';\n        return res;\n      },\n\n      /**\n      * Memorize the current user in long term memory\n      */\n      memorizeCurrentUser: function (res) {\n        longTermMemory.memorize('currentUser', models.currentUser);\n        return res;\n      },\n\n      /**\n       * Inject default fields to events\n       */\n      injectEventsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectEventsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify evenFormula\n        if(res.evenFormula === 0)\n          res.evenFormulaPretty = 'Andata e ritorno';\n        else if(res.evenFormula === 1)\n          res.evenFormulaPretty = 'Solo andata';\n\n        // Prettify evenType\n        if(res.evenType === 0)\n          res.evenTypePretty = 'Campionato italiana';\n        else if(res.evenType === 1)\n          res.evenTypePretty = 'Torneo a giorni';\n\n        // Make a dateRangePicker compliant field\n        if(!res.dates && res.evenDateStart && res.evenDateEnd){\n          res.dates = utils.date2Str(res.evenDateStart, res.evenDateEnd);\n        }\n\n        // Initialize a default published status\n        if(angular.isUndefined(res.evenStatoEvento)){\n          res.evenStatoEvento = 0; // Set as unpublished\n        }\n\n        // Initialize the currentDay based on its ID\n        if(angular.isNumber(res.evenDayActive) && angular.isArray(res.matchDays)){\n          for (var i = 0; i < res.matchDays.length; i++) {\n            if(res.matchDays[i].matcDayId === res.evenDayActive){\n              res.evenCurrentDay = res.matchDays[i];\n              break;\n            }\n          }\n        }\n\n        // Make a search field\n        res.search = [\n          res.evenName,\n          res.evenTypePretty,\n          res.evenFormulaPretty,\n          res.regions && res.regions.regiName || '',\n          res.evenCode,\n          res.evenSeason\n        ].join(' ');\n\n        // Sort the match days by prog number\n        if(angular.isArray(res.matchDays)){\n          res.matchDays.sort(function (a,b) {\n            return a.matcProg > b.matcProg;\n          });\n        }\n\n        return res;\n      },\n\n      /**\n       * Inject default fields to invitations\n       */\n      injectInvitationsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectInvitationsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify status\n        switch (res.status) {\n          case '0':\n            res.statusPretty = 'In attesa';\n            break;\n          case '1':\n            res.statusPretty = 'Accettato';\n            break;\n          case '2':\n            res.statusPretty = 'Rifiutato';\n            break;\n          case '3':\n            res.statusPretty = 'Cancellato';\n            break;\n          default:\n            break;\n        }\n\n        // Translate date format\n        if(!res.dateInvitationPretty && res.dateInvitation){\n          res.dateInvitationPretty = utils.date2Str(res.dateInvitation);\n        }\n\n        return res;\n      },\n\n      /**\n       * Update the events\n       */\n      updateEvents: function (res) {\n        models.events = res;\n        return res;\n      },\n\n      /**\n       * Update the managed events\n       */\n      updateManagedEvents: function (res) {\n        models.currentUser.managedEvents = res;\n        return res;\n      },\n\n      /**\n       * Remove an event from the cache\n       */\n      removeEvent: function (res) {\n        // Look for the event in cache\n        var i = -1;\n        for (i=0; i < models.events.length; i++) {\n          if(models.events[i].evenId === res.evenId){\n            break;\n          }\n        }\n        // The event was found -> remove it\n        if(i >= 0 && i < models.events.length){\n          models.events.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Memorize the events user in long term memory\n       */\n      memorizeEvents: function (res) {\n        longTermMemory.memorize('events', models.events);\n        return res;\n      },\n\n      /**\n      * Update the regions\n      */\n      updateRegions: function (res) {\n        models.regions = res;\n        return res;\n      },\n\n      /**\n      * Memorize the regions user in long term memory\n      */\n      memorizeRegions: function (res) {\n        longTermMemory.memorize('regions', models.regions);\n        return res;\n      },\n\n      /**\n       * Update the current event\n       */\n      updateCurrentEvent: function (res) {\n        var currentEventMerged = false;\n        if(models.currentEvent && models.currentEvent.evenId === res.evenId){\n          angular.merge(models.currentEvent, res);\n          currentEventMerged = true;\n        }\n\n        var i = 0;\n        if(angular.isArray(models.events)){\n          for (; i < models.events.length; i++) {\n            if(models.events[i].evenId === res.evenId){\n              if(currentEventMerged){\n                models.events[i] = models.currentEvent;\n              }\n              else{\n                angular.merge(models.events[i], res);\n                models.currentEvent = models.events[i];\n              }\n              break;\n            }\n          }\n        }\n\n        if(i === models.events.length){\n          models.currentEvent = res;\n          if(!angular.isArray(models.events)){\n            models.events = [];\n          }\n          models.events.push(models.currentEvent);\n        }\n\n        return models.currentEvent;\n      },\n\n      /**\n      * Memorize the events user in long term memory\n      */\n      memorizeCurrentEvent: function (res) {\n        longTermMemory.memorize('currentEvent', models.currentEvent);\n        return res;\n      },\n\n\n      /**\n       * Update the matches\n       */\n      updateMatches: function (res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay) return res;\n        models.currentEvent.currentDay.matches = res;\n        return res;\n      },\n\n      /**\n       * Update a match\n       */\n      updateMatch: function (res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)){\n          return res;\n        }\n\n        for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            return angular.merge(models.currentEvent.currentDay.matches[i], res);\n          }\n        }\n      },\n\n      /**\n       * Update the scorers of a match\n       */\n      updateMatchScorers: function (matchId, res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)){\n          return res;\n        }\n\n        for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId == matchId){\n            models.currentEvent.currentDay.matches[i].scorers = res;\n            return res;\n          }\n        }\n      },\n\n      injectMatchDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectMatchDefaults);\n        }\n\n        else{\n          if(res.matcDateMatch){\n            res.matcDateMatchPretty = utils.date2Str(res.matcDateMatch);\n          }\n\n          if(angular.isArray(res.matchCardsTeamA)){\n            resPipe.injectCardsDefaults(res.matchCardsTeamA);\n          }\n        }\n\n        return res;\n      },\n\n      injectPressDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectPressDefaults);\n        }\n\n        else{\n          switch (res.pressStato) {\n            case '0':\n              res.pressStatoPretty = 'Non pubblicato';\n              break;\n            case '1':\n              res.pressStatoPretty = 'Pubblicato';\n              break;\n            default:\n              break;\n          }\n\n          if(res.pressDate){\n            res.pressDatePretty = utils.date2Str(res.pressDate);\n          }\n        }\n\n        return res;\n      },\n\n      injectEventCardsDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectEventCardsDefaults);\n        }\n\n        else{\n          if(res.matcRedCards) resPipe.injectCardsDefaults(res.matcRedCards);\n          if(res.matcYellowCards) resPipe.injectCardsDefaults(res.matcYellowCards);\n        }\n\n        return res;\n      },\n\n      injectCardsDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectCardsDefaults);\n        }\n        else{\n          switch (res.flgCards) {\n            case 0:\n              res.flgCardsPretty = 'Ammonizione';\n              break;\n            case 1:\n              res.flgCardsPretty = 'Espulsione per somma ammonizioni';\n              break;\n            case 2:\n              res.flgCardsPretty = 'Espulsione diretta';\n              break;\n            default:\n              break;\n          }\n          switch (res.typeSqualifications) {\n            case 0:\n              res.typeSqualificationsPretty = 'Ammonizione';\n              break;\n            case 1:\n              res.typeSqualificationsPretty = 'Espulsione per somma ammonizioni';\n              break;\n            case 2:\n              res.typeSqualificationsPretty = 'Espulsione diretta';\n              break;\n            default:\n              break;\n          }\n        }\n\n        return res;\n      },\n\n      /**\n       * Insert a match day into current event\n       */\n      insertMatchDay: function (res) {\n        if(models.currentEvent && angular.isArray(models.currentEvent.matchDays)) {\n          models.currentEvent.matchDays.push(res);\n        }\n        return res;\n      },\n\n      /**\n       * Update the teams of current event\n       */\n      updateTeams: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.teams = res;\n        }\n        return res;\n      },\n\n      /**\n       * Update the scoreboard of current event\n       */\n      updateScoreboard: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.scoreboard = res;\n        }\n        return res;\n      },\n\n      /**\n       * Update the scorers of current event\n       */\n      updateScorers: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.scorers = res;\n        }\n        return res;\n      },\n\n      updateYellows: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.yellows = res;\n        }\n        return res;\n      },\n\n      updateDiffides: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.diffides = res;\n        }\n        return res;\n      },\n\n      updateSqualifications: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.squalifications = res;\n        }\n        return res;\n      },\n\n      updatePress: function (res) {\n        if(models.currentEvent){\n          if(angular.isArray(res)){\n            models.currentEvent.press = res;\n          }\n          else if(angular.isDefined(res.pressId) && angular.isArray(models.currentEvent.press)){\n            for (var i = 0; i < models.currentEvent.press.length; i++) {\n              if(models.currentEvent.press[i].pressId === res.pressId){\n                return angular.merge(models.currentEvent.press[i], res);\n              }\n            }\n          }\n        }\n        return res;\n      },\n\n      updateTeam: function (res) {\n        if(models.currentEvent && res.teamId && angular.isArray(models.currentEvent.teams)){\n          for (var i = 0; i < models.currentEvent.teams.length; i++) {\n            if(models.currentEvent.teams[i].teamId === res.teamId){\n              return angular.merge(models.currentEvent.teams[i], res);\n            }\n          }\n        }\n        return res;\n      },\n\n      updatePlayers: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam){\n          models.currentEvent.currentTeam.players = res;\n        }\n        return res;\n      },\n\n      updatePlayer: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam && angular.isArray(models.currentEvent.currentTeam.players)){\n          for (var i = 0; i < models.currentEvent.currentTeam.players.length; i++) {\n            if(models.currentEvent.currentTeam.players[i].playId === res.playId){\n              return angular.merge(models.currentEvent.currentTeam.players[i], res);\n            }\n          }\n        }\n        return res;\n      },\n\n      insertPlayer: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam){\n          if(!angular.isArray(models.currentEvent.currentTeam.players)){\n            models.currentEvent.currentTeam.players = [];\n          }\n          models.currentEvent.currentTeam.players.push(res);\n        }\n        return res;\n      },\n\n      insertScorer: function (matchId, res, scorersKey) {\n        if(!scorersKey) scorersKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[scorersKey])){\n                curMatch[scorersKey] = [];\n              }\n              curMatch[scorersKey].push(res);\n              break;\n            }\n          }\n        }\n        return res;\n      },\n\n      insertCard: function (matchId, res, cardsKey) {\n        if(!cardsKey) cardsKey = 'cards';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[cardsKey])){\n                curMatch[cardsKey] = [];\n              }\n              curMatch[cardsKey].push(res);\n              break;\n            }\n          }\n        }\n        return res;\n      },\n\n      removeScorer: function (matchId, playerId, scorersKey) {\n        if(!scorersKey) scorersKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[scorersKey])) break;\n              var j = 0;\n              for (; j < curMatch[scorersKey].length; j++) {\n                if(curMatch[scorersKey][j].playId === playerId) break;\n              }\n              if(j < curMatch[scorersKey].length){\n                curMatch[scorersKey].splice(j,1);\n                break;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Remove a card from the cache\n       */\n      removeEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey) {\n        if(!models.currentEvent || !angular.isArray(models.currentEvent[cardsKey])) return;\n\n        // Look for the right player\n        for (var i = 0; i < models.currentEvent[cardsKey].length; i++) {\n          var curPlayer = models.currentEvent[cardsKey][i]\n          if(curPlayer.playId === playerId && angular.isArray(curPlayer[cardMatchKey])){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curPlayer[cardMatchKey].length; j++) {\n              if(curPlayer[cardMatchKey][j].matcId === matchId){\n                curPlayer[cardMatchKey].splice(j,1);\n                return;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Update a card in cache\n       */\n      updateEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey, cardData) {\n        if(!models.currentEvent || !angular.isArray(models.currentEvent[cardsKey])) return;\n\n        // Look for the right player\n        for (var i = 0; i < models.currentEvent[cardsKey].length; i++) {\n          var curPlayer = models.currentEvent[cardsKey][i]\n          if(curPlayer.playId === playerId && angular.isArray(curPlayer[cardMatchKey])){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curPlayer[cardMatchKey].length; j++) {\n              if(curPlayer[cardMatchKey][j].matcId === matchId){\n                return angular.merge(curPlayer[cardMatchKey][j], cardData);\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Remove a team from the cache\n       */\n      removeTeam: function (res) {\n        if(!res.teamId || !models.currentEvent || !angular.isArray(models.currentEvent.teams)) return res;\n\n        // Look for the team in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.teams.length; i++) {\n          if(models.currentEvent.teams[i].teamId === res.teamId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.teams.length){\n          models.currentEvent.teams.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Remove a press from the cache\n       */\n      removePress: function (res) {\n        if(!res.presId || !models.currentEvent || !angular.isArray(models.currentEvent.press)) return res;\n\n        // Look for the press in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.press.length; i++) {\n          if(models.currentEvent.press[i].presId === res.presId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.press.length){\n          models.currentEvent.press.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Remove a ScorerMatch from the cache\n       */\n      removeScorerMatch: function (playerId, res) {\n        if(!res.matcId || !models.currentEvent || !angular.isArray(models.currentEvent.scorers)) return res;\n\n        // Look for the right scorer\n        for (var i = 0; i < models.currentEvent.scorers.length; i++) {\n          var curScorer = models.currentEvent.scorers[i]\n          if(curScorer.scorPlayId === playerId && angular.isArray(curScorer.matcScorers)){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curScorer.matcScorers.length; j++) {\n              if(curScorer.matcScorers[j].matcId === res.matcId){\n                curScorer.matcScorers.splice(j,1);\n                return res;\n              }\n            }\n          }\n        }\n\n        return res;\n      },\n\n       /**\n        * Remove a card from a match\n        */\n      removeMatchCard: function (matchId, cardId, cardsKey) {\n        if(!cardsKey) cardsKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[cardsKey])) break;\n              var j = 0;\n              for (; j < curMatch[cardsKey].length; j++) {\n                if(curMatch[cardsKey][j].cardId === cardId) break;\n              }\n              if(j < curMatch[cardsKey].length){\n                curMatch[cardsKey].splice(j,1);\n                break;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n      * Update a ScorerMatch in cache\n      */\n      updateScorerMatch: function (playerId, res) {\n        if(!res.matcId || !models.currentEvent || !angular.isArray(models.currentEvent.scorers)) return res;\n\n        // Look for the right scorer\n        for (var i = 0; i < models.currentEvent.scorers.length; i++) {\n          var curScorer = models.currentEvent.scorers[i]\n          if(curScorer.scorPlayId === playerId && angular.isArray(curScorer.matcScorers)){\n            var j = 0;\n            // Look for the right scorerMatch and update it\n            for (; j < curScorer.matcScorers.length; j++) {\n              if(curScorer.matcScorers[j].matcId === res.matcId){\n                return angular.merge(curScorer.matcScorers[j], res);\n              }\n            }\n          }\n        }\n\n        return res;\n      },\n\n      /**\n       * Remove a match from the cache\n       */\n      removeMatch: function (res) {\n        if(!res.matcId || !models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)) return res;\n\n        // Look for the match in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.currentDay.matches.length){\n          models.currentEvent.currentDay.matches.splice(i,1);\n        }\n        return res;\n      },\n\n      log: function (res) {\n        $log.info(res);\n        return res;\n      },\n\n      debugger: function (res) {\n        debugger; // eslint-disable-line no-debugger\n        return res;\n      }\n    };\n\n    return resPipe;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Long Term Memory\n   * Persist data to make it available after the browser is closed\n   */\n  .factory('longTermMemory', function () {\n    var allowedKeys = [\n      'currentUser',\n      'events',\n      'regions',\n      'currentEvent'\n    ];\n\n    var longTermMemory = {\n      memorize: function(key, val) {\n        if(allowedKeys.indexOf(key) < 0){\n          return;\n        }\n\n        localStorage[key] = angular.toJson(val);\n      },\n\n      remember: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        try {\n          return angular.fromJson(localStorage[key]);\n        }\n        catch(e){\n          delete localStorage[key];\n          return null;\n        }\n      },\n\n      forget: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        delete localStorage[key];\n      },\n\n      oblivion: function() {\n        angular.forEach(allowedKeys, function(key) {\n          delete localStorage[key];\n        });\n        localStorage.clear();\n      }\n    };\n\n    return longTermMemory;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoSidebar', frispoSidebar);\n\n  /** @ngInject */\n  function frispoSidebar($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoSidebar/frispoSidebar.html',\n      controller: SidebarController,\n      controllerAs: 'sidebar',\n      link: SidebarLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function SidebarController(models, $state) {\n      var vm = this;\n\n      vm.models = models;\n      vm.state = $state;\n\n      vm.manageMenuEntries = [\n        'main.admin.createEvent',\n        'main.admin.events',\n        'main.admin.teams',\n        'main.admin.calendar',\n        'main.admin.scoreboard'\n      ]\n    }\n\n    function SidebarLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoHeader', frispoHeader);\n\n  /** @ngInject */\n  function frispoHeader($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoHeader/frispoHeader.html',\n      controller: HeaderController,\n      controllerAs: 'header',\n      link: HeaderLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function HeaderController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function HeaderLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoFooter', frispoFooter);\n\n  /** @ngInject */\n  function frispoFooter($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoFooter/frispoFooter.html',\n      controller: FooterController,\n      controllerAs: 'footer',\n      link: FooterLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function FooterController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function FooterLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * My Project Overview API service\n   */\n   .factory('frispoApi', function (\n      $q,\n      $http,\n      provisioningApiUrl,\n      eventsApiUrl,\n      teamsApiUrl,\n      pressApiUrl,\n      matchesApiUrl,\n      cardsApiUrl,\n      scorersApiUrl,\n      rankingApiUrl,\n      authorization,\n      anonymousToken,\n      toastr,\n      models,\n      userApiUrl\n    ) {\n      // Cache the promises (just to avoid to call the same API before the previous has finished)\n      var cache = {};\n\n      // Api Helpers (accessible only from this factory)\n      var helpers = {\n        /**\n         * Try to retrieve the result from cache, or make HTTP call\n         * @param  {String} method  The HTTP method\n         * @param  {String} fullUrl The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @param  {Boolean} keep   If true, the promise is cached even after it's been fulfilled\n         * @return {Promise}        A promise of the response\n         */\n        cacheOrHttp: function(method, fullUrl, data, headers, keep) {\n          var key = method + fullUrl + (data ? angular.toJson(data) : '');\n\n          var config = {};\n          if(method) config.method = method.toUpperCase();\n          if(fullUrl) config.url = fullUrl;\n          if(data) config.data = data;\n          if(headers) config.headers = headers;\n\n          if (!cache[key]) {\n            var promise;\n            var err = false;\n            switch(method){\n              case 'get':\n              case 'GET':\n              case 'post':\n              case 'POST':\n              case 'put':\n              case 'PUT':\n              case 'patch':\n              case 'PATCH':\n              case 'delete':\n              case 'DELETE':\n                promise = $http(config);\n                break;\n              default:\n                err = true;\n                promise = $q.reject();\n                break;\n            }\n            if(!err){\n              cache[key] = promise.finally(function(response,err) {\n                if(!keep){\n                  delete cache[key]; // delete the cache, so the next call will be fresh\n                }\n                if(err) { return $q.reject(err); }\n                if(response) { return response; }\n              });\n            }\n          }\n\n          return cache[key];\n        },\n\n        /**\n         * Perform an API call to the Users endpoint, using preset headers and required data\n         * @param  {String} method  The HTTP method\n         * @param  {String} url The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        provisioningApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            provisioningApiUrl + url,\n            angular.merge({},\n              data\n            ),\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Events endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        eventsApiCall: function (method, url, data, headers, keep) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            eventsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            ),\n            keep\n          );\n        },\n\n        /**\n         * Perform an API call to the Teams endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        teamsApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            teamsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Press endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        pressApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            pressApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Match endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        matchesApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            matchesApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Cards endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        cardsApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            cardsApiUrl + '/events/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Scorers endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        scorersApiCall: function (eventId, matchId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            scorersApiUrl + '/events/' + eventId + '/match/' + matchId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Ranking endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}         A promise of the response\n         */\n        rankingApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            rankingApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Preferences endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}         A promise of the response\n         */\n        userApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            userApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Expect a 200 response and return data.\n         * Otherwise, return a rejected promise.\n         */\n        expect200: function (response) {\n          if(response.status === 200){\n            return response.data;\n          }\n          else{\n            return $q.reject(response);\n          }\n        },\n\n        notification: function (response) {\n          if(response.msg && response.status_code === 200){\n            toastr.success(response.msg);\n          }\n          return response;\n        },\n\n        unwrapData: function (response) {\n          return response.data;\n        }\n      };\n\n      var frispoApi = {\n        /** USER API **/\n\n        /**\n         * Register a new user\n         */\n        register: function(userData) {\n          return helpers\n            .provisioningApiCall('post', '/register?user_token=' + anonymousToken, {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Authenticate the user\n         */\n        login: function(userData) {\n          return helpers\n            .provisioningApiCall('post', '/login?user_token=' + anonymousToken, {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Authenticate the user using facebook\n         */\n        loginFacebook: function (facebookData) {\n          return helpers\n            .provisioningApiCall('post', '/login_facebook?user_token=' + anonymousToken, {\n              facebook_token: facebookData.authResponse.accessToken,\n              type: 0\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Logout the user\n         * @return {Promise}          A promise with the response\n         */\n        logout: function () {\n          return helpers\n            .provisioningApiCall('post', '/logout?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* INVITATION API */\n\n        listSentInvitations: function () {\n          return helpers\n            .userApiCall('get', '/user/admininvitation/listinvitingmember?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        listReceivedInvitations: function () {\n          return helpers\n            .userApiCall('get', '/user/admininvitation/listguest?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        createInvitation: function (invitationData) {\n          return helpers\n            .userApiCall('post', '/user/admininvitation/send?user_token=' + models.currentUser.userToken, invitationData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        updateInvitation: function (invitationData) {\n          return helpers\n            .userApiCall('post', '/user/admininvitation/edit?user_token=' + models.currentUser.userToken, invitationData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* EVENTS API */\n\n        /**\n         * List the events of the current user\n         * @return {Promise} A promise fulfilled with the event list\n         */\n        listEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/origin?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the events managed by current user\n         */\n        listManagedEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/guest?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/add?user_token=' + models.currentUser.userToken, eventData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update an event\n         */\n        updateEvent: function (eventId, eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/' + eventId + '/edit?user_token=' + models.currentUser.userToken, eventData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroyEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('delete', '/events/' + eventData.evenId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show an event\n         * @return {Promise} A promise fulfilled with the event requested\n         */\n        showEvent: function (eventId) {\n          return helpers\n            .eventsApiCall('get', '/event/' + eventId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the active regions\n         */\n        listRegions: function () {\n          return helpers\n            .eventsApiCall('get', '/regions?user_token=' + models.currentUser.userToken, null, null, true)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /** RANKING API **/\n\n        /**\n         * Show the scoreboard of an event\n         */\n        showEventScoreboard: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/ranking?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show the scoreboard of a tournament event\n         */\n        showTournamentScoreboard: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/rankingtournament?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show the players' scores of the event\n         */\n        showScorers: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/scorers_matches?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new scorer\n         */\n        createScorer: function (eventId, matchId, scorerData) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'post', '/scorers/add?user_token=' + models.currentUser.userToken, scorerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a ScorerMatch\n         */\n        destroyScorerMatch: function(eventId, playerId, matchId) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'delete', '/player/' + playerId + '/scorers/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyCard: function (eventId, matchId, cardId) {\n          return helpers\n            .cardsApiCall(eventId, 'delete', '/match/' + matchId + '/cards/' + cardId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a ScorerMatch\n         */\n        updateScorerMatch: function (eventId, matchId, scorerMatchData) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'post', '/scorers/edit?user_token=' + models.currentUser.userToken, scorerMatchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* PRESS API */\n\n        /**\n         * List the press of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listPress: function (eventId) {\n          return helpers\n            .pressApiCall('get', '/event/' + eventId + '/press?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a press\n         */\n        updatePress: function (eventId, pressId, pressData) {\n          return helpers\n            .pressApiCall('post', '/event/' + eventId + '/press/' + pressId + '/edit?user_token=' + models.currentUser.userToken, pressData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a press\n         */\n        createPress: function (pressData) {\n          return helpers\n            .pressApiCall('post', '/press/create?user_token=' + models.currentUser.userToken, pressData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * destroy a press\n         */\n        destroyPress: function (eventId, pressId) {\n          return helpers\n            .pressApiCall('delete', '/event/' + eventId + '/press/' + pressId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * show a press\n         */\n        showPress: function (eventId, pressId) {\n          return helpers\n            .pressApiCall('get', '/event/' + eventId + '/press/' + pressId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* TEAMS API */\n\n        /**\n         * List the teams of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listTeams: function (eventId) {\n          return helpers\n            .teamsApiCall('get', '/events/' + eventId + '/teams?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a team\n         */\n        updateTeam: function (eventId, teamId, teamData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/' + teamId + '/edit?user_token=' + models.currentUser.userToken, teamData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a team\n         */\n        createTeam: function (eventId, teamData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/add?user_token=' + models.currentUser.userToken, teamData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * destroy a team\n         */\n        destroyTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/' + teamId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * show a team\n         */\n        showTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall('get', '/events/' + eventId + '/teams/' + teamId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Add a group of teams to an event\n         * @param {Number} eventId   The id of the event to add the teams to\n         * @param {Object} teamsData An object containing the informations about the teams we want to create\n         */\n        addGroupTeams: function (eventId, teamsData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/add_group_teams?user_token=' + models.currentUser.userToken, teamsData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the players of a team\n         */\n        listPlayers: function (teamId) {\n          return helpers\n            .teamsApiCall('get', '/teams/' + teamId + '/players/list?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        updatePlayer: function (teamId, playerId, playerData) {\n          return helpers\n            .teamsApiCall('post', '/teams/' + teamId + '/players/' + playerId + '/edit?user_token=' + models.currentUser.userToken, playerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        createPlayer: function (teamId, playerData) {\n          return helpers\n            // TODO: check this call\n            .teamsApiCall('post', '/teams/' + teamId + '/players/add?user_token=' + models.currentUser.userToken, playerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* PREFERENCES API */\n\n\n        /**\n         * Get the preferences of the current user\n         */\n        showPreferences: function () {\n          return helpers\n            .userApiCall('get', '/preferences/list?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Get the basic info of the current user\n         */\n        showUser: function () {\n          return helpers\n            .userApiCall('get', '/user/find?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update the basic info of the current user\n         */\n        updateUser: function (userData) {\n            return helpers\n              .userApiCall('post', '/user/edit?user_token=' + models.currentUser.userToken, userData)\n              .then(helpers.expect200)\n              .then(helpers.notification);\n        },\n\n\n        /* MATCHES API */\n\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createMatchesCalendar: function (eventId) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/match/create_calendar?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the matches of an event for a given day\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatches: function (eventId, day) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/day/' + day + '/matches?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show a match\n         */\n        showMatch: function (eventId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/match/' + matchId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the scorers of a match for a given event\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatchScorers: function (eventId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/match/' + matchId + '/scorers?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the yellow cards of an event\n         */\n        listYellowCards: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listyellow?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the diffides of an event\n         */\n        listDiffides: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listdiffide?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the squalifications of an event\n         */\n        listSqualifications: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listsqualifications?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new card\n         */\n        createCard: function (eventId, matchId, cardData) {\n          return helpers\n            .cardsApiCall(eventId, 'post', '/match/' + matchId + '/cards/add?user_token=' + models.currentUser.userToken, cardData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a card\n         */\n        updateCard: function (eventId, matchId, cardId, cardData) {\n          return helpers\n            .cardsApiCall(eventId, 'post', '/match/' + matchId + '/cards/' + cardId + '/edit?user_token=' + models.currentUser.userToken, cardData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a match\n         */\n        updateMatch: function (eventId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches/update?user_token=' + models.currentUser.userToken, matchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a match\n         */\n        createMatch: function (eventId, matchDayId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/day/' + matchDayId + '/matches/add?user_token=' + models.currentUser.userToken, matchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (eventId, dayData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches_day/add?user_token=' + models.currentUser.userToken, dayData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroyMatch: function (eventId, matchDayId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'delete', '/match_day/' + matchDayId + '/matches/' + matchId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        }\n      };\n\n      return frispoApi;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Error Manager.\n   * Handles common HTTP error messages\n   */\n  .factory('errorManager', function (toastr, $log, $state, $q, longTermMemory, models) {\n    var errorManager = function(err) {\n      // log every errors\n      $log.error(err);\n\n      // Unwrap HTTP errors and take actions if needed\n      if(angular.isObject(err) && err.status){\n        switch(err.status){\n          case 401:\n            $state.go('main.logout');\n            err = err.data;\n            break;\n          case 403:\n            $state.go('main.home');\n            err = err.data;\n            break;\n          case 422:\n            err = err.data;\n            break;\n          case 404:\n            err = err.data;\n            break;\n          case 413:\n            err = 'Il file che stai cercando di caricare è troppo grande';\n            break;\n          case -1:\n            err = 'Il server non è raggiungibile o non sei connesso ad Internet';\n            break;\n          default:\n            break;\n        }\n      }\n\n      var getErrorString = function (err) {\n        if(angular.isString(err)){\n          return err;\n        }\n        else if(angular.isObject(err) && (err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error)){\n          return getErrorString(err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error );\n        }\n        else if(angular.isArray(err)){\n          var myErr = [];\n          for (var i = 0; i < err.length; i++) {\n            myErr[i] = getErrorString(err[i]);\n          }\n          return getErrorString(myErr.join('<br>'));\n        }\n        // Don't manage different kinds of error\n        else{\n          longTermMemory.oblivion(); // Forget everything. We don't want the app to be broken forever!\n          models.reset(); // Reset all the models. We don't want the app to be broken forever!\n          return 'Si è verificato un errore imprevisto. Si prega di riprovare più tardi.';\n        }\n      }\n\n      toastr.error(getErrorString(err), 'Errore');\n\n      return $q.reject(err);\n    };\n\n    return errorManager;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('datepicker', datepicker);\n\n  /** @ngInject */\n  function datepicker() {\n    var directive = {\n      restrict: 'A',\n      link: datepickerLink,\n      scope: {\n        datepicker: '@',\n        model: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function datepickerLink(scope, el) {\n      scope.watchInput = function () {\n        scope.$watch('model', function () {\n          scope.drp.elementChanged();\n        });\n      }\n\n      if(scope.datepicker === 'range'){\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY') + ' -> ' + picker.endDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n      else{\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          singleDatePicker: true,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('compareTo', compareTo);\n\n  /** @ngInject */\n  function compareTo() {\n    var directive = {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=compareTo'\n      },\n      link: compareToLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function compareToLink(scope, element, attrs, ngModel) {\n      ngModel.$validators.compareTo = function (modelvalue) {\n        return modelvalue == scope.otherModelValue;\n      }\n      scope.$watch('otherModelValue', function () {\n        ngModel.$validate();\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('can', canDirective);\n\n  /** @ngInject */\n  function canDirective($log, models) {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        can: '@'\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var watcher;\n      var shown;\n      var negative;\n      var permission;\n      scope.models = models;\n\n      // Update the visibility of the element\n      var updateVisibility = function() {\n        var toShow = false;\n        if(angular.isArray(models.currentUser.permissions)){ // look for permission\n            for (var i = 0; i < models.currentUser.permissions.length; i++) {\n              if(models.currentUser.permissions[i].permName === permission){\n                toShow = true;\n                break;\n              }\n            }\n        }\n        if(negative){ toShow = !toShow; } // invert the condition if needed\n\n        // Show the element if not shown\n        if(toShow && !shown){\n          el.removeClass('can-hide');\n          shown = true;\n        }\n\n        // Hide the element if shown\n        else if(!toShow && shown){\n          el.addClass('can-hide');\n          shown = false;\n        }\n      };\n\n      // If the action starts with \"!\", the action is negative\n      negative = scope.can.slice(0, 1) === '!';\n\n\n      // In that case, remove ! from the string\n      if(negative){\n        permission = scope.can.substr(1);\n      }\n      else{\n        permission = scope.can;\n      }\n\n      // Update the visibility for the first time\n      shown = true;\n      updateVisibility();\n\n      // Update the visibility as soon as the permissions change\n      watcher = scope.$watch('models.currentUser.permissions', function(newVal, oldVal) {\n        if(newVal && oldVal !== newVal){\n          updateVisibility();\n        }\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('bootstrapMultiselect', bootstrapMultiselect);\n\n  /** @ngInject */\n  function bootstrapMultiselect() {\n    var directive = {\n      restrict: 'A',\n      link: bootstrapMultiselectLink,\n      terminal: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function bootstrapMultiselectLink(scope, el) {\n      el.multiselect();\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * User models manager\n   */\n   .factory('users', function (frispoApi, errorManager, models, longTermMemory, resPipe, $state, $q, ezfb, $log, uiState, $timeout) {\n\n      var users = {\n        /**\n         * Register a new user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        register: function (userData) {\n          return frispoApi\n            .register(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email;\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Login a user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        login: function (userData) {\n          return frispoApi\n            .login(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email; // Add the email from the input as it's missing from the response\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Logout a user\n         * @param  {Object} userData an object containing the user data\n         * @return {Promise}          a promise that will be fullfilled after the logout\n         */\n        logout: function () {\n          if(models.currentUser && models.currentUser.userToken){\n            return frispoApi\n              .logout()\n              .then(function (res) {\n                $log.info('Frispo logout');\n                return res;\n              })\n              .catch(errorManager)\n              .finally(users.onLoggedOut)\n              .then(function () {\n                ezfb.logout();\n              });\n          }\n          return $q.resolve();\n        },\n\n        /**\n         * Login a user to frispo's server using the facebook login() response data\n         * @param  {Object} facebookData The object returned by the Facebook SDK after a succesful login\n         * @return {Promise}             A promise fulfilled with the authentication data for the user,\n         */\n        loginFacebook: function (facebookData) {\n          return frispoApi\n            .loginFacebook(facebookData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Fetch all user info\n         */\n        info: function () {\n          var infoCalls = [\n            users.showPreferences(),\n            users.show()\n          ];\n          return $q.all(infoCalls);\n        },\n\n        /**\n         * Show basic  user info\n         */\n        show: function () {\n          return frispoApi\n            .showUser()\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMergeCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Edit basic user info\n         */\n        update: function (userData) {\n          return frispoApi\n            .updateUser(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMergeCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Get the preferences of the user\n         */\n        showPreferences: function () {\n          return frispoApi\n            .showPreferences()\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePreferences)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged in\n         * @param  {Object} userData The object containing the user data\n         * @return {Object}          The same userData, useful for promise chaining\n         */\n        onLoggedIn: function (userData) {\n          if($state.current.name === 'main.access'){\n            $state.go('main.admin.events');\n          }\n          $log.info('Frispo login');\n          users.info();\n          uiState.loggedIn = true;\n          return $q.resolve(userData);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged out\n         */\n        onLoggedOut: function() {\n          models.reset();\n          longTermMemory.oblivion();\n          uiState.loggedIn = false;\n          if($state.current.name !== 'main.login' && $state.current.name !== 'main.register'){\n            $timeout(function () {\n              $state.go('main.login');\n            })\n          }\n        },\n\n        /**\n         * Backup user data and setup the anonymous user for testing purposes\n         */\n        setAnonymousUser: function (res) {\n          models.bkp =  {\n            uuid: models.currentUser.uuid,\n            accessToken: models.currentUser.accessToken\n          }\n          models.currentUser.uuid = 'anonimo';\n          models.currentUser.accessToken = '4e66c966e021918f0b088ddc929847f7'\n          return $q.resolve(res);\n        },\n\n        /**\n         * Restore user backup\n         */\n        unsetAnonymousUser: function (res) {\n          models.currentUser.uuid = models.bkp.uuid;\n          models.currentUser.accessToken = models.bkp.accessToken;\n          delete models.bkp;\n          return $q.resolve(res);\n        },\n\n        checkFacebookLogin: function () {\n          return ezfb\n            .getLoginStatus()\n            .then(function (res) {\n              if(res.status === 'connected'){\n                return res;\n              }\n              else{\n                return $q.reject(res);\n              }\n            });\n        },\n\n        /**\n         * Configure the facebook login and events\n         */\n        configureFacebookCallbacks: function (res) {\n          // // Subscribe to FB login\n          // ezfb.Event.subscribe('auth.login', function (response) {\n          //   $log.info('Facebook login');\n          //   users.loginFacebook(response);\n          // });\n\n          // Subscribe to FB logout\n          ezfb.Event.subscribe('auth.logout', function () {\n            $log.info('Facebook logout');\n            if(uiState.loggedIn){\n              users.logout();\n            }\n          });\n\n\n          return res;\n        },\n\n        form2Team: function (formData) {\n          var userData = {};\n          if(angular.isDefined(formData.type)) userData.type = formData.type;\n          if(angular.isDefined(formData.subscription)) userData.subscription = formData.subscription;\n          return $q.resolve(userData);\n        }\n      };\n\n      return users;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('teams', function (frispoApi, errorManager, resPipe, $q, models, utils) {\n\n      var teams = {\n        /**\n         * List the teams of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listTeams(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeams)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        show: function (teamId) {\n          return frispoApi\n            .showTeam(models.currentEvent.evenId, teamId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        create: function (team) {\n          return frispoApi\n            .createTeam(models.currentEvent.evenId, team)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        update: function (teamId, team) {\n          return frispoApi\n            .updateTeam(models.currentEvent.evenId, teamId, team)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        destroy: function (team) {\n          return frispoApi\n            .destroyTeam(models.currentEvent.evenId, team.teamId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return team;\n            })\n            .then(resPipe.removeTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a group of teams and add it to an event\n         */\n        addGroup: function (teamsData) {\n          return frispoApi\n            .addGroupTeams(models.currentEvent.evenId, teamsData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .catch(errorManager);\n        },\n\n        listPlayers: function (teamId) {\n          return frispoApi\n            .listPlayers(teamId || models.currentEvent.currentTeam.teamId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePlayers)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        updatePlayer: function (playerId, playerData) {\n          return frispoApi\n            .updatePlayer(models.currentEvent.currentTeam.teamId, playerId, playerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePlayer)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        createPlayer: function (playerData) {\n          return frispoApi\n            .createPlayer(models.currentEvent.currentTeam.teamId, playerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.insertPlayer)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from a team form into an teamsData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the teamsData object\n         */\n        form2Teams: function (formData) {\n          var teamsData = { extra: [] };\n          angular.forEach(formData.teams, function (team) {\n            teamsData.extra.push(teams.form2Team(team));\n          });\n          return $q.resolve(teamsData);\n        },\n\n        form2Team: function (formData) {\n          var teamData = {};\n          var teamTime = utils.str2Time(formData.time);\n          if(angular.isDefined(formData.captain)) teamData.team_captain = formData.captain;\n          if(angular.isDefined(teamTime)) teamData.team_time = teamTime;\n          if(angular.isDefined(formData.name)) teamData.team_name = formData.name;\n          if(angular.isDefined(formData.phone)) teamData.team_mobile_phone = formData.phone;\n          if(angular.isDefined(formData.place)) teamData.team_place = formData.place;\n          if(angular.isDefined(formData.round)) teamData.team_groups = formData.round;\n          if(angular.isDefined(formData.desc)) teamData.team_description = formData.desc;\n          return teamData;\n        },\n\n        form2Player: function (formData) {\n          var playerData = {};\n          if(angular.isDefined(formData.name)) playerData.player_name = formData.name;\n          if(angular.isDefined(formData.surname)) playerData.player_surname = formData.surname;\n          return $q.resolve(playerData);\n        }\n      };\n\n      return teams;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('press', function (frispoApi, errorManager, resPipe, $q, models) {\n\n      var press = {\n        /**\n         * List the press of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listPress(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectPressDefaults)\n            .then(resPipe.updatePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        show: function (pressId) {\n          return frispoApi\n            .showPress(models.currentEvent.evenId, pressId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectPressDefaults)\n            .then(resPipe.updatePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        create: function (press) {\n          return frispoApi\n            .createPress(press)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n        //\n        // update: function (pressId, press) {\n        //   return frispoApi\n        //     .updatePress(models.currentEvent.evenId, pressId, press)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePress)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n\n        destroy: function (press) {\n          return frispoApi\n            .destroyPress(models.currentEvent.evenId, press.presId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return press;\n            })\n            .then(resPipe.removePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        form2Press: function (formData) {\n          var pressData = {};\n          if(angular.isDefined(formData.name)) pressData.press_name = formData.name;\n          if(angular.isDefined(formData.ranking)) pressData.press_ranking = formData.ranking.id;\n          if(angular.isDefined(formData.matches)) pressData.press_matches = formData.matches.id;\n          if(angular.isDefined(formData.scorers)) pressData.press_scorers = formData.scorers.id;\n          if(angular.isDefined(formData.yellowcards)) pressData.press_yellowcards = formData.yellowcards.id;\n          if(angular.isDefined(formData.diffide)) pressData.press_diffide = formData.diffide.id;\n          if(angular.isDefined(formData.squalifications)) pressData.press_squalifications = formData.squalifications.id;\n          if(angular.isDefined(formData.amends)) pressData.press_amends = formData.amends.id;\n          if(angular.isArray(formData.events)){\n            pressData.press_events = [];\n            angular.forEach(formData.events, function (event) {\n              pressData.press_events.push({\n                pres_even_id: ''+event.evenId\n              });\n            });\n          }\n          return pressData;\n        }\n      };\n\n      return press;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n  * Models cache\n  */\n  .factory('models', function (longTermMemory) {\n\n    var models = {\n       reset: function () {\n         models.events = longTermMemory.remember('events') || [];\n         models.regions = longTermMemory.remember('regions') || [];\n         models.currentUser = longTermMemory.remember('currentUser') || {};\n         models.currentEvent = models.events.length>0 && longTermMemory.remember('currentEvent') || undefined;\n       }\n    };\n\n    models.reset();\n\n    return models;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Matches models manager\n   */\n   .factory('matches', function (frispoApi, errorManager, resPipe, models, utils, $q) {\n\n      var matches = {\n\n        /**\n         * Create a matches calendar for an event\n         */\n        createCalendar: function (eventId) {\n          return frispoApi\n            .createMatchesCalendar(eventId)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the matches for a day of an event\n         */\n        list: function () {\n          return frispoApi\n            .listMatches(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectMatchDefaults)\n            .then(resPipe.updateMatches)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the scorers of a match\n         */\n        listScorers: function (matchId) {\n          return frispoApi\n            .listMatchScorers(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(function (res) {\n              return resPipe.updateMatchScorers(matchId, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a scorer\n         */\n        createScorer: function (matchId, scorerData, scorersKey) {\n          return frispoApi\n            .createScorer(models.currentEvent.evenId, matchId, scorerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(function (res) {\n              resPipe.insertScorer(matchId, res, scorersKey);\n              return res;\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a card\n         */\n        createCard: function (matchId, cardData, cardsKey) {\n          return frispoApi\n            .createCard(models.currentEvent.evenId, matchId, cardData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectCardsDefaults)\n            .then(function (res) {\n              resPipe.insertCard(matchId, res, cardsKey);\n              return res;\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a scorer\n         */\n        destroyScorer: function (matchId, playerId, scorersKey) {\n          return frispoApi.destroyScorerMatch(models.currentEvent.evenId, playerId, matchId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeScorer(matchId, playerId, scorersKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyMatchCard: function (matchId, cardId, cardsKey) {\n          return frispoApi.destroyCard(models.currentEvent.evenId, matchId, cardId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeMatchCard(matchId, cardId, cardsKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey) {\n          return frispoApi\n            .destroyCard(models.currentEvent.evenId, matchId, cardId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeEventCard(matchId, playerId, cardId, cardsKey, cardMatchKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Update a card\n         */\n        updateEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey, cardData) {\n          return frispoApi\n            .updateCard(models.currentEvent.evenId, matchId, cardId, cardData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectCardsDefaults)\n            .then(function (res) {\n              return resPipe.updateEventCard(matchId, playerId, cardId, cardsKey, cardMatchKey, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Update a match\n         */\n        update: function (matchDayId, matchData) {\n          return frispoApi\n            .updateMatch(models.currentEvent.evenId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectMatchDefaults)\n            .then(function (res) {\n              res.matcDayId = matchDayId; // Inject the match day ID, as the server returns 0\n              return res;\n            })\n            .then(resPipe.updateMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match\n         */\n        create: function (matchData) {\n          return frispoApi\n            .createMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.log)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (dayData) {\n          return frispoApi\n            .createDay(models.currentEvent.evenId, dayData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.insertMatchDay)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroy: function (matchData) {\n          return frispoApi\n            .destroyMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData.matcId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return matchData;\n            })\n            .then(resPipe.removeMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show a match\n         */\n         show: function (matchId) {\n           return frispoApi\n            .showMatch(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMatch)\n            .then(resPipe.injectMatchDefaults)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n         },\n\n         /**\n          * Translate data from a match form into a matchData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the matchData object\n          */\n         form2Match: function (formData) {\n           var matchData = {};\n           var matchTime = utils.str2Time(formData.time);\n           var matchDate = utils.str2Date(formData.date);\n           if(angular.isDefined(formData.matchId)) matchData.matc_id = formData.matchId;\n           if(formData.teamA && angular.isDefined(formData.teamA.teamId)) matchData.matc_team_id_a = formData.teamA.teamId;\n           if(formData.teamB && angular.isDefined(formData.teamB.teamId)) matchData.matc_team_id_b = formData.teamB.teamId;\n           if(angular.isDefined(formData.scoreA)) matchData.matc_goal_team_a = formData.scoreA;\n           if(angular.isDefined(formData.scoreB)) matchData.matc_goal_team_b = formData.scoreB;\n           if(angular.isString(formData.dateExpected)) matchData.matc_date_expected = formData.dateExpected;\n           if(angular.isString(matchDate)) matchData.matc_date_match = matchDate;\n           if(angular.isString(matchTime)) matchData.matc_time = matchTime;\n           if(angular.isString(formData.address)) matchData.matc_address = formData.address;\n           if(angular.isString(formData.round)) matchData.matc_name_groups = formData.round;\n           if(formData.played && angular.isDefined(formData.played.value)) matchData.matc_flg_play = formData.played.value;\n           if(angular.isDefined(formData.shootoutA)) matchData.matc_shootout_team_a = formData.shootoutA;\n           if(angular.isDefined(formData.shootoutB)) matchData.matc_shootout_team_b = formData.shootoutB;\n           if(angular.isString(formData.place)) matchData.matc_place = formData.place;\n           return $q.resolve(matchData);\n         },\n\n         /**\n          * Translate data from a scorer form into a scorerData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the scorerData object\n          */\n         form2Scorer: function (formData) {\n           var scorerData = {};\n           if(angular.isDefined(formData.teamId)) scorerData.team_id = ''+formData.teamId;\n           if(angular.isDefined(formData.playId)) scorerData.play_id = ''+formData.playId;\n           else scorerData.play_id = '0';\n           if(angular.isDefined(formData.goals)) scorerData.goal = formData.goals;\n           if(angular.isDefined(formData.name)) scorerData.play_name = formData.name;\n           if(angular.isDefined(formData.surname)) scorerData.play_surname = formData.surname;\n           return $q.resolve(scorerData);\n         },\n\n         /**\n          * Translate data from a card form into a card object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the cardData object\n          */\n         form2CardMatch: function (formData) {\n           var cardData = {};\n           if(angular.isDefined(formData.playId)) cardData.play_id = formData.playId;\n           if(angular.isDefined(formData.typeSqualifications)) cardData.flg_cards = formData.typeSqualifications.value;\n           if(angular.isDefined(formData.daySqualifications)) cardData.day_squalification = formData.daySqualifications.value;\n           if(angular.isDefined(formData.note)) cardData.note = formData.note;\n           if(angular.isDefined(formData.squalificationStatus)) cardData.squalification_status = formData.squalificationStatus.value;\n           return $q.resolve(cardData);\n         },\n\n         /**\n          * Translate data from a card form into a cardData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the cardData object\n          */\n         form2Card: function (formData) {\n           var cardData = {};\n           if(angular.isDefined(formData.teamId)) cardData.team_id = ''+formData.teamId;\n           if(angular.isDefined(formData.playId)) cardData.play_id = ''+formData.playId;\n           else cardData.play_id = '0';\n           if(angular.isDefined(formData.cardType) && angular.isDefined(formData.cardType.id)) cardData.flg_cards = ''+formData.cardType.id;\n           if(angular.isDefined(formData.disqualificationDays)) cardData.day_squalification = ''+formData.disqualificationDays;\n           if(angular.isDefined(formData.note)) cardData.note = ''+formData.note;\n           if(angular.isDefined(formData.name)) cardData.play_name = ''+formData.name;\n           if(angular.isDefined(formData.surname)) cardData.play_surname = ''+formData.surname;\n           return $q.resolve(cardData);\n         },\n\n         /**\n          * Translate data from a Day form into an dayData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the dayData object\n          */\n          form2Day: function (formData) {\n           var dayData = {};\n           if(angular.isDefined(formData.name)) dayData.mada_name = formData.name;\n           if(angular.isDefined(formData.desc)) dayData.mada_description = formData.desc;\n           return $q.resolve(dayData);\n         }\n      };\n\n      return matches;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('invitations', function (frispoApi, errorManager, resPipe, models) {\n\n      var invitations = {\n        /**\n         * List the invitations sent by current user\n         */\n        listSent: function () {\n          return frispoApi\n            .listSentInvitations()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectInvitationsDefaults)\n            .then(resPipe.updateSentInvitations)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the invitations sent by current user\n         */\n        listReceived: function () {\n          return frispoApi\n            .listReceivedInvitations()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectInvitationsDefaults)\n            .then(resPipe.updateReceivedInvitations)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        create: function (invitationData) {\n          return frispoApi\n            .createInvitation(invitationData)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        destroy: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '3' // status: 3 -> cancellato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        accept: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '1' // status: 1 -> accettato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        decline: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '2' // status: 2 -> rifiutato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        form2Invitation: function (formData) {\n          var invitationData = {};\n          if(angular.isArray(formData.events) && angular.isDefined(formData.guestEmail)){\n            invitationData.extra = [];\n            angular.forEach(formData.events, function (event) {\n              invitationData.extra.push({\n                mail_invitingmember: models.currentUser.email,\n                mail_guest: formData.guestEmail,\n                even_id: event.evenId\n              })\n            });\n          }\n          return invitationData;\n        }\n\n        // show: function (invitationId) {\n        //   return frispoApi\n        //     .showTeam(models.currentEvent.evenId, invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updateTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // create: function (invitation) {\n        //   return frispoApi\n        //     .createTeam(models.currentEvent.evenId, invitation)\n        //     .then(resPipe.parseResponse)\n        //     .catch(errorManager);\n        // },\n        //\n        // update: function (invitationId, invitation) {\n        //   return frispoApi\n        //     .updateTeam(models.currentEvent.evenId, invitationId, invitation)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updateTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // destroy: function (invitation) {\n        //   return frispoApi\n        //     .destroyTeam(models.currentEvent.evenId, invitation.invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(function () {\n        //       return invitation;\n        //     })\n        //     .then(resPipe.removeTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // /**\n        //  * Create a group of invitations and add it to an event\n        //  */\n        // addGroup: function (invitationsData) {\n        //   return frispoApi\n        //     .addGroupTeams(models.currentEvent.evenId, invitationsData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .catch(errorManager);\n        // },\n        //\n        // listPlayers: function (invitationId) {\n        //   return frispoApi\n        //     .listPlayers(invitationId || models.currentEvent.currentTeam.invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePlayers)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // updatePlayer: function (playerId, playerData) {\n        //   return frispoApi\n        //     .updatePlayer(models.currentEvent.currentTeam.invitationId, playerId, playerData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePlayer)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // createPlayer: function (playerData) {\n        //   return frispoApi\n        //     .createPlayer(models.currentEvent.currentTeam.invitationId, playerData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.insertPlayer)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // /**\n        //  * Translate data from a invitation form into an invitationsData object\n        //  * @param  {Object} formData The form input\n        //  * @return {Promise}         A promise fulfilled with the invitationsData object\n        //  */\n        // form2Teams: function (formData) {\n        //   var invitationsData = { extra: [] };\n        //   angular.forEach(formData.invitations, function (invitation) {\n        //     invitationsData.extra.push(invitations.form2Team(invitation));\n        //   });\n        //   return $q.resolve(invitationsData);\n        // },\n        //\n        // form2Team: function (formData) {\n        //   var invitationData = {};\n        //   var invitationTime = utils.str2Time(formData.time);\n        //   if(angular.isDefined(formData.captain)) invitationData.invitation_captain = formData.captain;\n        //   if(angular.isDefined(invitationTime)) invitationData.invitation_time = invitationTime;\n        //   if(angular.isDefined(formData.name)) invitationData.invitation_name = formData.name;\n        //   if(angular.isDefined(formData.phone)) invitationData.invitation_mobile_phone = formData.phone;\n        //   if(angular.isDefined(formData.place)) invitationData.invitation_place = formData.place;\n        //   if(angular.isDefined(formData.round)) invitationData.invitation_groups = formData.round;\n        //   if(angular.isDefined(formData.desc)) invitationData.invitation_description = formData.desc;\n        //   return invitationData;\n        // },\n        //\n        // form2Player: function (formData) {\n        //   var playerData = {};\n        //   if(angular.isDefined(formData.name)) playerData.player_name = formData.name;\n        //   if(angular.isDefined(formData.surname)) playerData.player_surname = formData.surname;\n        //   return $q.resolve(playerData);\n        // }\n      };\n\n      return invitations;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('events', function (frispoApi, errorManager, resPipe, $q, utils) {\n\n      var events = {\n        /**\n         * Show all events\n         */\n         list: function () {\n          return frispoApi\n            .listEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateEvents)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show all events managed by a user\n         */\n        listManaged: function () {\n          return frispoApi\n            .listManagedEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateManagedEvents)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a new event\n         */\n        create: function (eventData) {\n          return frispoApi\n            .createEvent(eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show an event\n         */\n        show: function (eventId) {\n          return frispoApi\n            .showEvent(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show the scoreboard of an event\n         */\n        showScoreboard: function (event) {\n          var apiCall;\n          // Torneo a gironi\n          if(event.evenType === 1){\n            apiCall = frispoApi.showTournamentScoreboard(event.evenId);\n          }\n          else{\n            apiCall = frispoApi.showEventScoreboard(event.evenId);\n          }\n          return apiCall\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateScoreboard)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show the scorers of an event\n         */\n        showScorers: function (eventId) {\n          return frispoApi.showScorers(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateScorers)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        destroyScorerMatch: function (eventId, playerId, scorerMatch) {\n          return frispoApi.destroyScorerMatch(eventId, playerId, scorerMatch.matcId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeScorerMatch(playerId, scorerMatch);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        updateScorerMatch: function (eventId, matchId, scorerMatchData) {\n          return frispoApi.updateScorerMatch(eventId, matchId, scorerMatchData)\n            .then(resPipe.parseResponse)\n            .then(function () { // Mock a response\n              return {\n                matcId: matchId,\n                matcScorerGoal: scorerMatchData.scor_goal\n              };\n            })\n            .then(function (res) {\n              return resPipe.updateScorerMatch(scorerMatchData.scor_play_id, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroy: function (event) {\n          return frispoApi\n            .destroyEvent(event)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return event;\n            })\n            .then(resPipe.removeEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        /**\n         * Update an event\n         */\n        update: function (eventId, eventData) {\n          return frispoApi\n            .updateEvent(eventId, eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n        * List the active regions\n        */\n        listRegions: function () {\n          return frispoApi\n            .listRegions()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateRegions)\n            .then(resPipe.memorizeRegions)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the yellow cards for the event\n         */\n        listYellows: function (eventId) {\n          return frispoApi\n            .listYellowCards(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateYellows)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * List the diffides for the event\n         */\n        listDiffides: function (eventId) {\n          return frispoApi\n            .listDiffides(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateDiffides)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * List the squalifications for the event\n         */\n        listSqualifications: function (eventId) {\n          return frispoApi\n            .listSqualifications(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateSqualifications)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * Translate data from an event form into an eventData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the eventData object\n         */\n        form2Event: function (formData) {\n          var eventData = {};\n          var dateRange = utils.str2Date(formData.dates);\n          if(angular.isDefined(formData.name)) eventData.even_name = formData.name;\n          if(angular.isDefined(formData.desc)) eventData.even_description = formData.desc;\n          if(angular.isDefined(formData.email)) eventData.even_email = formData.email;\n          if(angular.isDefined(formData.address)) eventData.even_address = formData.address;\n          if(angular.isDefined(formData.type)) eventData.even_type = '' + formData.type;\n          if(angular.isDefined(formData.organizer)) eventData.even_organize_by = formData.organizer;\n          if(angular.isDefined(formData.formula)) eventData.even_formula = '' + formData.formula;\n          if(angular.isDefined(formData.telephone)) eventData.even_mobile_phone = formData.telephone;\n          if(angular.isDefined(formData.yellowPoints)) eventData.even_yellow_points = formData.yellowPoints;\n          if(angular.isDefined(formData.redPoints)) eventData.even_red_points = formData.redPoints;\n          if(angular.isDefined(formData.yellowDiffide)) eventData.even_yellow_diffide = formData.yellowDiffide;\n          if(angular.isDefined(formData.yellowDiffide2)) eventData.even_yellow_diffide2 = formData.yellowDiffide2;\n          if(angular.isArray(dateRange) && dateRange.length > 0 && dateRange[0]) eventData.even_date_start = dateRange[0];\n          if(angular.isArray(dateRange) && dateRange.length > 1 && dateRange[1]) eventData.even_date_end = dateRange[1];\n          if(formData.region && formData.region.regiId) eventData.regi_id = formData.region.regiId;\n          // TODO: remove this line: it's a mock\n          else eventData.regi_id = 1;\n          if(formData.currentDay && formData.currentDay.matcDayId) eventData.even_day_active = formData.currentDay.matcDayId;\n          return $q.resolve(eventData);\n        }\n\n      };\n\n      return events;\n   });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(\n    $rootScope,\n    uiState,\n    defaultBodyClasses,\n    models,\n    users\n  ) {\n      // Bind the uiState to $rootScope as it's used in index.html\n      $rootScope.uiState = uiState;\n\n      // On state change\n      var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess', function (event, toState) {\n        var pms = toState.params || {};\n        uiState.bodyClasses = pms.bodyClasses || defaultBodyClasses;\n      });\n\n      // Update user info (if logged in)\n      if(models.currentUser && models.currentUser.userToken){\n        users.info();\n      }\n\n      // Destroy watchers\n      $rootScope.$on('$destroy', function() {\n        stateChangeSuccess();\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    var requireLoggedIn = function ($timeout, $state, models) {\n      if(!models.currentUser || !models.currentUser.userToken){\n        $timeout(function() {\n          $state.go('main.access');\n        });\n      }\n    };\n\n    $stateProvider\n      .state('main', {\n        abstract: true,\n        templateUrl: 'app/pages/main/main.html'\n      })\n      .state('main.admin', {\n        abstract: true,\n        templateUrl: 'app/pages/admin/admin.html',\n        onEnter: requireLoggedIn\n      })\n      .state('main.access', {\n        url: '/',\n        templateUrl: 'app/pages/access/access.html',\n        controller: 'AccessController',\n        controllerAs: 'vm'\n      })\n      .state('main.admin.profile', {\n        url: '/profile',\n        templateUrl: 'app/pages/profile/profile.html',\n        controller: 'ProfileController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.createEvent', {\n        url: '/create-event',\n        templateUrl: 'app/pages/createEvent/createEvent.html',\n        controller: 'CreateEventController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.events', {\n        url: '/events',\n        templateUrl: 'app/pages/events/events.html',\n        controller: 'EventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.teams', {\n        url: '/teams',\n        templateUrl: 'app/pages/teams/teams.html',\n        controller: 'TeamsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.players', {\n        url: '/players',\n        templateUrl: 'app/pages/players/players.html',\n        controller: 'PlayersController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.calendar', {\n        url: '/calendar',\n        templateUrl: 'app/pages/calendar/calendar.html',\n        controller: 'CalendarController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scoreboard', {\n        url: '/scoreboard',\n        templateUrl: 'app/pages/scoreboard/scoreboard.html',\n        controller: 'ScoreboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scorers', {\n        url: '/scorers',\n        templateUrl: 'app/pages/scorers/scorers.html',\n        controller: 'ScorersController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.press', {\n        url: '/press',\n        templateUrl: 'app/pages/press/press.html',\n        controller: 'PressController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.invitations', {\n        url: '/invitations',\n        templateUrl: 'app/pages/invitations/invitations.html',\n        controller: 'InvitationsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.disciplinary', {\n        url: '/disciplinary',\n        templateUrl: 'app/pages/disciplinary/disciplinary.html',\n        controller: 'DisciplinaryController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.managerEvents', {\n        url: '/manager-events',\n        templateUrl: 'app/pages/managerEvents/managerEvents.html',\n        controller: 'ManagerEventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.managerMatches', {\n        url: '/manager-matches',\n        templateUrl: 'app/pages/managerMatches/managerMatches.html',\n        controller: 'ManagerMatchesController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.login', {\n        url: '/login',\n        templateUrl: 'app/pages/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition login-page'\n        },\n        onEnter: function ($timeout, $state, uiState) {\n          if(uiState.loggedIn){\n            $timeout(function () {\n              $state.go('main.access');\n            })\n          }\n        }\n      })\n      .state('main.register', {\n        url: '/register',\n        templateUrl: 'app/pages/register/register.html',\n        controller: 'RegisterController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition register-page'\n        },\n        onEnter: function ($timeout, $state, uiState) {\n          if(uiState.loggedIn){\n            $timeout(function () {\n              $state.go('main.access');\n            })\n          }\n        }\n      })\n      .state('main.logout', {\n        url: '/logout',\n        onEnter: function($timeout, users) {\n          $timeout(function () {\n            users.logout();\n          })\n        }\n      });\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('defaultBodyClasses', 'skin-green fixed sidebar-mini')\n    .constant('provisioningApiUrl', 'https://api.frispo.it/api/provisioning/1.0.0/frispo/base/0/users')\n    .constant('eventsApiUrl', 'https://api.frispo.it/api/events/1.0.0/frispo/base/0')\n    .constant('teamsApiUrl', 'https://api.frispo.it/api/teams/1.0.0/football/base/0')\n    .constant('pressApiUrl', 'https://api.frispo.it/api/press/1.0.0/frispo/base/0')\n    .constant('matchesApiUrl', 'https://api.frispo.it/api/matches/1.0.0/football/base/0')\n    .constant('cardsApiUrl', 'https://api.frispo.it/api/cards/1.0.0/football/base/0')\n    .constant('scorersApiUrl', 'https://api.frispo.it/api/scorers/1.0.0/football/base/0')\n    .constant('rankingApiUrl', 'https://api.frispo.it/api/ranking/1.0.0/football/base/0')\n    .constant('userApiUrl', 'https://api.frispo.it/api/users/1.0.0/frispo/base/0')\n    .constant('authorization', 'Bearer 384d9a07-2c10-3999-9053-74778a0102dd')\n    .constant('anonymousToken', 'CE6B7FD1B38E8395A382A715A6162web');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $animateProvider, $locationProvider, ezfbProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Animate only elements with class \"animate\"\n    $animateProvider.classNameFilter(/animate/);\n\n    // Set options for toastr\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 10000;\n    toastrConfig.positionClass = 'toast-top-center';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = false;\n\n    //Removes '#' from the URL\n    $locationProvider.html5Mode(true);\n    $locationProvider.hashPrefix('!');\n\n    // Configure facebook\n    ezfbProvider.setLocale('it_IT');\n    ezfbProvider.setInitParams({\n      appId: '1025958327498737'\n    });\n  }\n\n})();\n\nangular.module(\"frispo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/frispoFooter/frispoFooter.html\",\"<footer class=main-footer><div class=\\\"pull-right hidden-xs\\\"><b>Version</b> 1.0.0</div><strong>Copyright © 2014-2016 <a href=http://andreaciaccia.it>Andrea Ciaccia</a>.</strong> All rights reserved.</footer>\");\n$templateCache.put(\"app/components/frispoHeader/frispoHeader.html\",\"<header class=\\\"main-header frispo-header\\\"><a ui-sref=main.admin.dashboard class=logo><!-- mini logo for sidebar mini 50x50 pixels --> <span class=logo-mini><img src=/assets/images/logo-64.png></span><!-- logo for regular state and mobile devices --> <span class=logo-lg><img src=/assets/images/logo-title-64.png></span></a><nav class=\\\"navbar navbar-static-top\\\" role=navigation><!-- Sidebar toggle button--> <a href=# class=sidebar-toggle data-toggle=offcanvas role=button><span class=sr-only>Toggle navigation</span> </a><!-- Navbar Right Menu --><div class=navbar-custom-menu><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown user user-menu\\\"><a href=# class=dropdown-toggle data-toggle=dropdown aria-expanded=false><span class=hidden-xs>{{ header.models.currentUser.displayName }}</span></a><ul class=dropdown-menu><!-- User image --><li class=user-header><img src=\\\"{{ header.models.currentUser.image || \\'/assets/images/logo-64.png\\' }}\\\" ng-class=\\\"{\\'default-user-img\\': !header.models.currentUser.image}\\\" class=img-circle alt=\\\"User Image\\\"><p>{{ header.models.currentUser.displayName }}</p></li><!-- Menu Footer--><li class=user-footer><div class=pull-left><a ui-sref=main.admin.profile class=\\\"btn btn-default btn-flat\\\">Profile</a></div><div class=pull-right><a ui-sref=main.logout class=\\\"btn btn-default btn-flat\\\">Sign out</a></div></li></ul></li></ul></div></nav></header>\");\n$templateCache.put(\"app/components/frispoSidebar/frispoSidebar.html\",\"<div class=main-sidebar><!-- Inner sidebar --><div class=sidebar><!-- Sidebar Menu --><ul class=sidebar-menu><!-- SECTION Main Menu --><li class=header>Main Menu</li><!-- Eventi --><li class=treeview><a href=#><i class=\\\"fa fa-star\\\"></i> <span>Eventi</span> <i class=\\\"fa fa-angle-left pull-right\\\"></i></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><!-- Crea Evento --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.createEvent\\'}\\\"><a ui-sref=main.admin.createEvent><i class=\\\"fa fa-circle-o\\\"></i> Crea evento</a></li><!-- Visualizza Eventi --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.events\\'}\\\"><a ui-sref=main.admin.events><i class=\\\"fa fa-circle-o\\\"></i> Visualizza eventi</a></li></ul></li><!-- !Eventi --><!-- Squadre & Giocatori --><li class=treeview><a href=#><i class=\\\"fa fa-futbol-o\\\" aria-hidden=true></i> <span>Squadre &amp; Giocatori</span> <i class=\\\"fa fa-angle-left pull-right\\\"></i></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><!-- Squadre --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.teams\\'}\\\"><a ui-sref=main.admin.teams><i class=\\\"fa fa-circle-o\\\"></i> Squadre</a></li><!-- Giocatori --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.players\\'}\\\"><a ui-sref=main.admin.players><i class=\\\"fa fa-circle-o\\\"></i> Giocatori</a></li></ul></li><!-- !Squadre & Giocatori --><!-- Calendario & Partite --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.calendar\\'}\\\"><a ui-sref=main.admin.calendar><i class=\\\"fa fa-calendar\\\" aria-hidden=true></i> <span>Calendario &amp; Partite</span></a></li><!-- !Calendario & Partite --><!-- Classifica --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scoreboard\\'}\\\"><a ui-sref=main.admin.scoreboard><i class=\\\"fa fa-trophy\\\" aria-hidden=true></i> <span>Classifica</span></a></li><!-- !Classifica --><!-- Marcatori --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scorers\\'}\\\" can=scorers><a ui-sref=main.admin.scorers><i class=\\\"fa fa-trophy\\\" aria-hidden=true></i> <span>Marcatori</span></a></li><!-- !Marcatori --><!-- !SECTION Main Menu --><!-- SECTION Dirigente --><li class=header can=guest>Dirigente</li><!-- Eventi dirigente --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_events\\'}\\\" can=guest><a ui-sref=main.admin.managerEvents><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Eventi</span></a></li><!-- !Eventi dirigente --><!-- Partite --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_matches\\'}\\\" can=guest><a ui-sref=main.admin.managerMatches><i class=\\\"fa fa-bolt\\\"></i> <span>Partite</span></a></li><!-- !Partite --><!-- SECTION Amministra --><li class=header can=useradmin>Amministra</li><!-- Dirigenti --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.invitations\\'}\\\" can=useradmin><a ui-sref=main.admin.invitations><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Dirigenti</span></a></li><!-- !Dirigenti --><!-- !SECTION Amministra --><!-- SECTION Utili --><li class=header can=discipline>Utili</li><!-- Disciplinare --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.disciplinary\\'}\\\" can=discipline><a ui-sref=main.admin.disciplinary><i class=\\\"fa fa-bolt\\\"></i> <span>Disciplinare</span></a></li><!-- !Disciplinare --><!-- Comunicati --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.press\\'}\\\" can=press><a ui-sref=main.admin.press><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Comunicati</span></a></li><!-- !Comunicati --><!-- !SECTION Utili --><!-- SECTION Support --><li class=header>Support</li><!-- Documentation --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.documentation\\'}\\\"><a ui-sref=main.admin.documentation><i class=\\\"fa fa-info\\\" aria-hidden=true></i> <span>Documentation</span></a></li><!-- !Documentation --><!-- Faq --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.faq\\'}\\\"><a ui-sref=main.admin.faq><i class=\\\"fa fa-comments-o\\\" aria-hidden=true></i> <span>Faq</span></a></li><!-- !Faq --><!-- Contact Us --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.contact\\'}\\\"><a ui-sref=main.admin.contact><i class=\\\"fa fa-envelope\\\" aria-hidden=true></i> <span>Contact Us</span></a></li><!-- !Contact Us --><!-- !SECTION Support --></ul><!-- /.sidebar-menu --></div><!-- /.sidebar --></div><!-- /.main-sidebar -->\");\n$templateCache.put(\"app/pages/access/access.html\",\"<div class=access><div class=spinner-wrapper><i class=\\\"spinner fa fa-sun-o fa-spin\\\"></i></div></div>\");\n$templateCache.put(\"app/pages/admin/admin.html\",\"<div class=wrapper><frispo-header></frispo-header><frispo-sidebar></frispo-sidebar><div class=content-wrapper><div ui-view></div></div><frispo-footer></frispo-footer></div>\");\n$templateCache.put(\"app/pages/calendar/calendar.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"><div class=pull-right><a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewDay()>Crea nuova giornata</a> <a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewMatch()>Crea nuova partita</a></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=table><tr><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Indirizzo</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th>Giocata</th><th></th></tr><tr ng-repeat-start=\\\"match in vm.models.currentEvent.currentDay.matches\\\" match-show=match></tr><tr ng-repeat-end match-edit=match></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/createEvent/createEvent.html\",\"<section class=create-event><section class=content-header><h1>Crea un evento <small>&nbsp;{{ vm.wizard | wizardTextProgress }}</small></h1><wizard-progress wizard=vm.wizard></wizard-progress></section><section class=content><wizard-step-box step=1 wizard=vm.wizard title=\\\"Impostazioni evento\\\"><form id=formStep1 name=formStep1 ng-submit=vm.step1Done()><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.name.$dirty && formStep1.name.$invalid}\\\"><label for=formStep1-name>Nome</label><input id=formStep1-name ng-model=vm.step1.name name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=formStep1.name.$dirty ng-messages=formStep1.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.desc.$dirty && formStep1.desc.$invalid}\\\"><label for=formStep1-desc>Descrizione</label><textarea id=formStep1-desc rows=5 ng-model=vm.step1.desc name=desc class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\"></textarea><span ng-show=formStep1.desc.$dirty ng-messages=formStep1.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.address.$dirty && formStep1.address.$invalid}\\\"><label for=formStep1-address>Indirizzo</label><input id=formStep1-address ng-model=vm.step1.address name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo principale dell\\'evento\\\" required> <span ng-show=formStep1.address.$dirty ng-messages=formStep1.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.type.$dirty && formStep1.type.$invalid}\\\"><label for=formStep1-type>Tipologia</label><select id=formStep1-type ng-init=\\\"vm.step1.type = 0\\\" ng-model=vm.step1.type name=type class=form-control><option ng-selected=\\\"vm.step1.type === 0\\\" value=0>Campionato italiana</option><option ng-selected=\\\"vm.step1.type === 1\\\" value=1>Torneo a gironi</option></select><span ng-show=formStep1.type.$dirty ng-messages=formStep1.type.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.organizer.$dirty && formStep1.organizer.$invalid}\\\"><label for=formStep1-organizer>Organizzatore</label><input id=formStep1-organizer ng-model=vm.step1.organizer name=organizer type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'organizzatore\\\" required> <span ng-show=formStep1.organizer.$dirty ng-messages=formStep1.organizer.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.telephone.$dirty && formStep1.telephone.$invalid}\\\"><label for=formStep1-telephone>Telefono organizzatore</label><input id=formStep1-telephone ng-model=vm.step1.telephone name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore\\\" required> <span ng-show=formStep1.telephone.$dirty ng-messages=formStep1.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.email.$dirty && formStep1.email.$invalid}\\\"><label for=formStep1-email>E-mail organizzatore</label><input id=formStep1-email ng-model=vm.step1.email name=email type=email class=form-control placeholder=\\\"Inserisci l\\'indirizzo e-mail dell\\'organizzatore\\\" required> <span ng-show=formStep1.email.$dirty ng-messages=formStep1.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.dates.$dirty && formStep1.dates.$invalid}\\\"><label for=formStep1-dates>Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=formStep1-dates ng-model=vm.step1.dates model=vm.step1.dates name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><!-- /.input group --> <span ng-show=formStep1.dates.$dirty ng-messages=formStep1.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.formula.$dirty && formStep1.formula.$invalid}\\\"><label for=formStep1-formula>Formula</label><select id=formStep1-formula ng-init=\\\"vm.step1.formula = 0\\\" ng-model=vm.step1.formula name=formula class=form-control placeholder=\\\"Inserisci la formula desiderata\\\"><option ng-selected=\\\"vm.step1.formula === 0\\\" value=0>Anadata e ritorno</option><option ng-selected=\\\"vm.step1.formula === 1\\\" value=1>Solo andata</option></select><span ng-show=formStep1.formula.$dirty ng-messages=formStep1.formula.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><!-- /.col --></div><!-- /.row --><div class=pull-right><input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=2 wizard=vm.wizard title=\\\"Aggiungi squadre\\\"><form id=formStep2 name=formStep2 ng-submit=vm.step2Done()><div class=row><div ng-if=\\\"vm.step1.type == \\'1\\' && !vm.forceManualRounds\\\"><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundType.$dirty && formStep2.roundType.$invalid}\\\"><label for=formStep2-roundType>Inserimento Gironi</label><select id=formStep2-roundType ng-init=\\\"vm.step2.roundType = 0\\\" ng-model=vm.step2.roundType name=roundType class=form-control ng-change=vm.initDefaultTeams()><option value=0>Manuale</option><option value=1>Automatico</option></select><span ng-show=formStep2.roundType.$dirty ng-messages=formStep2.roundType.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-if=\\\"vm.step2.roundType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundNumber.$dirty && formStep2.roundNumber.$invalid}\\\"><label for=formStep2-roundNumber>Numero di gironi</label><input id=formStep2-roundNumber ng-model=team.roundNumber name=roundNumber type=text class=form-control placeholder=\\\"Inserisci il numero di gironi dell\\'evento\\\" required> <span ng-show=formStep2.roundNumber.$dirty ng-messages=formStep2.roundNumber.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=clearfix></div><div class=col-sm-6 ng-repeat=\\\"team in vm.step2.teams\\\"><div class=\\\"panel panel-default\\\"><div class=panel-heading>Squadra {{ $index+1 }} <button tabindex=-1 type=button class=close ng-click=vm.removeTeam($index)><span>&times;</span></button></div><div class=panel-body><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'name\\' + ($index+1)].$dirty && formStep2[\\'name\\' + ($index+1)].$invalid}\\\"><label for=formStep2-name{{$index+1}}>Nome</label><input id=formStep2-name{{$index+1}} ng-model=team.name name=name{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome della squadra\\\" required> <span ng-show=\\\"formStep2[\\'name\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'name\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'desc\\' + ($index+1)].$dirty && formStep2[\\'desc\\' + ($index+1)].$invalid}\\\"><label for=formStep2-desc{{$index+1}}>Descrizione</label><input id=formStep2-desc{{$index+1}} ng-model=team.desc name=desc{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'desc\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'desc\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'captain\\' + ($index+1)].$dirty && formStep2[\\'captain\\' + ($index+1)].$invalid}\\\"><label for=formStep2-captain{{$index+1}}>Capitano</label><input id=formStep2-captain{{$index+1}} ng-model=team.captain name=captain{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome del capitano della squadra\\\" required> <span ng-show=\\\"formStep2[\\'captain\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'captain\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'phone\\' + ($index+1)].$dirty && formStep2[\\'phone\\' + ($index+1)].$invalid}\\\"><label for=formStep2-phone{{$index+1}}>Telefono</label><input id=formStep2-phone{{$index+1}} ng-model=team.phone name=phone{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il numero di telefono della squadra\\\" required> <span ng-show=\\\"formStep2[\\'phone\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'phone\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'time\\' + ($index+1)].$dirty && formStep2[\\'time\\' + ($index+1)].$invalid}\\\"><label for=formStep2-time{{$index+1}}>Orario preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=formStep2-time{{$index+1}} ng-model=team.time name=time{{$index+1}} type=text class=form-control timepicker placeholder=\\\"Inserisci l\\'orario preferito della squadra per le partite\\\" required></div><span ng-show=\\\"formStep2[\\'time\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'time\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'place\\' + ($index+1)].$dirty && formStep2[\\'place\\' + ($index+1)].$invalid}\\\"><label for=formStep2-place{{$index+1}}>Luogo preferito</label><input id=formStep2-place{{$index+1}} ng-model=team.place name=place{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'place\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'place\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div ng-if=\\\"vm.step2.roundType == 0\\\" class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'round\\' + ($index+1)].$dirty && formStep2[\\'round\\' + ($index+1)].$invalid}\\\"><label for=formStep2-round{{$index+1}}>Girone</label><select id=formStep2-round{{$index+1}} ng-init=\\\"team.round = \\'A\\'\\\" ng-model=team.round name=round{{$index+1}} class=form-control ng-options=\\\"roundName as roundName for roundName in vm.roundNames track by roundName\\\" required></select><span ng-show=\\\"formStep2[\\'round\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'round\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></div><div class=clearfix></div><div class=col-md-6><a role=button ng-click=vm.addTeam() class=\\\"btn btn-default btn-block\\\" ng-show=vm.step2.roundType>Aggiungi Squadra</a></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=3 wizard=vm.wizard title=Riepilogo><form id=formStep3 name=formStep3 ng-submit=vm.submitWizard()><div class=row><div class=col-md-6><div class=form-group><label>Nome</label><p class=form-control-static>{{ vm.step1.name }}</p></div><div class=form-group><label>Descrizione</label><p class=form-control-static>{{ vm.step1.desc }}</p></div><div class=form-group><label>Indirizzo</label><p class=form-control-static>{{ vm.step1.address }}</p></div><div class=form-group><label>Tipologia</label><p class=form-control-static>{{ vm.step1.type == \\'1\\' ? \\'Torneo a gironi\\' : \\'Campionato Italiana\\' }}</p></div><div class=form-group><label>Numero di squadre</label><p class=form-control-static>{{ vm.step2.teams.length }}</p></div></div><div class=col-md-6><div class=form-group><label>Organizzatore</label><p class=form-control-static>{{ vm.step1.organizer }}</p></div><div class=form-group><label>Telefono organizzatore</label><p class=form-control-static>{{ vm.step1.telephone }}</p></div><div class=form-group><label>E-mail organizzatore</label><p class=form-control-static>{{ vm.step1.email }}</p></div><div class=form-group><label>Perioto</label><p class=form-control-static>{{ vm.step1.dates }}</p></div><div class=form-group><label>Formula</label><p class=form-control-static>{{ vm.step1.formula == \\'1\\' ? \\'Solo andata\\' : \\'Andata e Ritorno\\' }}</p></div></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Conferma></div></form></wizard-step-box></section></section>\");\n$templateCache.put(\"app/pages/disciplinary/disciplinary.html\",\"<div class=disciplinary><section class=content-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2 content-header\\\"><h1>Disciplinare</h1></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></section><section class=content><div class=row><div class=col-xs-12><div ng-repeat=\\\"cardConfig in vm.cardConfigs\\\" class=\\\"box {{ cardConfig.boxClass }}\\\"><div class=box-header><h4 class=box-title>{{ cardConfig.header }}</h4><div class=\\\"box-tools pull-right\\\"><button type=button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=\\\"!vm.models.currentEvent[cardConfig.cardsKey] || vm.models.currentEvent[cardConfig.cardsKey].length === 0\\\"><strong>{{ cardConfig.emptyMessage }}</strong></div><div class=\\\"box-body table-responsive relative\\\" ng-show=\\\"vm.models.currentEvent[cardConfig.cardsKey].length > 0\\\"><table class=table><tr><th ng-repeat=\\\"field in cardConfig.fields\\\">{{ field.name }}</th><th></th></tr><tr ng-repeat-start=\\\"card in vm.models.currentEvent[cardConfig.cardsKey]\\\" card-show=card config=cardConfig></tr><tr ng-repeat-end card-edit=card config=cardConfig ng-if=cardConfig.controls.edit></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/events/events.html\",\"<div class=\\\"content events\\\"><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" ng-repeat=\\\"invitation in vm.models.currentUser.receivedInvitations\\\"><div class=\\\"box box-success box-solid\\\"><div class=box-header><div class=box-title>Invito ricevuto</div><div class=\\\"box-tools pull-right\\\"><button type=button class=\\\"btn btn-box-tool\\\" data-widget=remove><i class=\\\"fa fa-times\\\"></i></button></div></div><div class=box-body><p><strong>{{ invitation.mailInvitingmember }}</strong> ti ha invitato a gestire come <strong>Dirigente</strong> il suo evento &quot;<strong>{{ invitation.evenName }}</strong>&quot;</p><div class=pull-right><a role=button class=\\\"btn btn-danger\\\" ng-click=vm.declineInvitation(invitation)>Rifiuta</a> <a role=button class=\\\"btn btn-success\\\" ng-click=vm.acceptInvitation(invitation)>Accetta</a></div></div></div></div><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.events.length === 0\\\"><div class=box-header><div class=box-title>Eventi</div></div><div class=box-body>Non sono stati trovati eventi. <a ui-sref=main.admin.createEvent>Creane uno ora</a>.</div></div><div class=\\\"box {{ tableFilter.boxClass }}\\\" ng-repeat=\\\"tableFilter in vm.tableFilters\\\" ng-show=\\\"(vm.models.events | filter:tableFilter.eventFilter).length > 0\\\"><div class=box-header><h3 class=box-title>{{ tableFilter.title }}</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.searchFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat-start=\\\"event in vm.models.events | filter:tableFilter.eventFilter | filter:tableFilter.searchFilter\\\" event-show=event></tr><tr ng-repeat-end event-edit=event></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/invitations/invitations.html\",\"<div class=invitations><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><h3>Dirigenti <small>invitati</small></h3></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewInvitation()>Manda un nuovo invito</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentUser.sentInvitations><table class=table><tr><th>E-mail dirigente</th><th>Evento</th><th>Data invito</th><th>Stato invito</th><th></th></tr><tr ng-repeat=\\\"invitation in vm.models.currentUser.sentInvitations\\\" invitation-show=invitation></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/login/login.html\",\"<div class=\\\"login login-box\\\"><div class=login-logo><img src=/assets/images/logo-title-64.png alt=Frispo></div><!-- /.login-logo --><div class=login-box-body><p class=login-box-msg>Sign in to start your session</p><form id=loginForm name=loginForm ng-submit=vm.login()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.email.$dirty && loginForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=loginForm.email.$dirty ng-messages=loginForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.password.$dirty && loginForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=loginForm.password.$dirty ng-messages=loginForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=row><!-- /.col --><div class=col-xs-12><button ng-disabled=loginForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a ng-click=vm.loginFacebook() class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign in using Facebook</a></div><!-- /.social-auth-links --> <a href=#>I forgot my password</a><br><a ui-sref=main.register class=text-center>Register a new membership</a></div><!-- /.login-box-body --></div>\");\n$templateCache.put(\"app/pages/main/main.html\",\"<div class=animate ui-view></div>\");\n$templateCache.put(\"app/pages/managerEvents/managerEvents.html\",\"<div class=\\\"content events\\\"><div class=row><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.currentUser.managedEvents.length === 0\\\"><div class=box-header><div class=box-title>Eventi gestiti come dirigente</div></div><div class=box-body>Non gestisci alcun evento.</div></div><div class=\\\"box box-success\\\" ng-show=\\\"vm.models.currentUser.managedEvents.length > 0\\\"><div class=box-header><h3 class=box-title>Eventi gestiti come dirigente</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.searchFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat=\\\"event in vm.models.currentUser.managedEvents\\\" event-show=event hide-controls=true></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/managerMatches/managerMatches.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.currentUser.managedEvents track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=table><tr><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Indirizzo</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th>Giocata</th><th></th></tr><tr ng-repeat-start=\\\"match in vm.models.currentEvent.currentDay.matches\\\" manager-match-show=match></tr><tr ng-repeat-end manager-match-edit=match></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/players/players.html\",\"<div class=calendar><section class=content-header><h1>Giocatori</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la squadra</label><select id=selectDay ng-model=vm.models.currentEvent.currentTeam name=team class=form-control ng-options=\\\"team as (team.teamName) for team in (vm.models.currentEvent.teams) track by team.teamId\\\" ng-change=vm.updateTeam()></select></div></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"><div class=pull-right><a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewPlayer()>Crea nuovo giocatore</a></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentTeam.players><table class=table><tr><th>Nome</th><th>Cognome</th><th></th></tr><tr ng-repeat-start=\\\"player in vm.models.currentEvent.currentTeam.players\\\" player-show=player></tr><tr ng-repeat-end player-edit=player></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/press/press.html\",\"<div class=press><section class=content-header><h1>Comunicati</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewPress()>Crea nuovo comunicato</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.press><table class=table><tr><th>Nome</th><th>Stato</th><th>PDF</th><th>Data</th><th></th></tr><tr ng-repeat-start=\\\"press in vm.models.currentEvent.press\\\" press-show=press></tr><tr ng-repeat-end press-edit=press></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/profile/profile.html\",\"<div class=profile><section class=content-header><h1>Gestione Profilo</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-body><form name=user-edit ng-submit=vm.submit()><div class=row><div class=\\\"col-sm-5 col-md-4 col-lg-3\\\"><div class=form-group><label for=user-edit-type>Tipologia utente</label><select id=user-edit-type name=type ng-model=vm.form.type class=form-control ng-options=\\\"type.num as type.name for type in vm.userTypes\\\" required></select></div></div><div class=\\\"col-sm-5 col-md-4 col-lg-3\\\"><div class=form-group><label for=user-edit-subscription>Abbonamento</label><select id=user-edit-subscription name=subscription ng-model=vm.form.subscription class=form-control ng-options=\\\"subscription.num as subscription.name for subscription in vm.userSubscriptions\\\" required></select></div></div><div class=\\\"col-sm-2 col-md-2 col-lg-1\\\"><div class=form-group><label>&nbsp;</label><input type=submit value=Salva class=\\\"btn btn-success form-control\\\"></div></div></div></form><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/register/register.html\",\"<div class=register-box><div class=register-logo><img src=/assets/images/logo-title-64.png alt=Frispo></div><div class=register-box-body><p class=login-box-msg>Register a new membership</p><form id=registerForm name=registerForm ng-submit=vm.register()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.email.$dirty && registerForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=registerForm.email.$dirty ng-messages=registerForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.password.$dirty && registerForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required minlength=8> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=registerForm.password.$dirty ng-messages=registerForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=minlength>La password deve essere lunga almeno 8 caratteri</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.retypePassword.$dirty && registerForm.retypePassword.$invalid}\\\"><input ng-model=vm.user.retypePassword name=retypePassword type=password class=form-control placeholder=\\\"Retype password\\\" required compare-to=vm.user.password> <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span> <span ng-show=registerForm.retypePassword.$dirty ng-messages=registerForm.retypePassword.$error class=help-block role=alert><span ng-message=compareTo>Le due password non coincidono</span></span></div><!-- <div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.termsAgreement.$dirty && registerForm.termsAgreement.$invalid}\\\">\\n        <div class=\\\"checkbox icheck\\\">\\n          <label for=\\\"termsAgreement\\\">\\n            I agree to the <a href=\\\"#\\\">terms</a>\\n          </label>\\n          <div class=\\\"icheckbox_square-blue pull-right\\\" aria-checked=\\\"false\\\" aria-disabled=\\\"false\\\">\\n            <input id=\\\"termsAgreement\\\" ng-model=\\\"vm.user.termsAgreement\\\" name=\\\"termsAgreement\\\" type=\\\"checkbox\\\" required>\\n          </div>\\n        </div>\\n        <span ng-show=\\\"registerForm.termsAgreement.$dirty\\\" ng-messages=\\\"registerForm.termsAgreement.$error\\\" class=\\\"help-block\\\" role=\\\"alert\\\">\\n          <span ng-message=\\\"required\\\">E\\' obbligatorio accettare i termini</span>\\n        </span>\\n      </div> --><div class=row><!-- /.col --><div class=col-xs-12><button ng-disabled=registerForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Register</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a href=# class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign up using Facebook</a></div><a ui-sref=main.login class=text-center>I already have a membership</a></div><!-- /.form-box --></div><!-- /.register-box -->\");\n$templateCache.put(\"app/pages/scoreboard/scoreboard.html\",\"<div class=calendar><section class=content-header><h1>Classifica</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 0\\\"><table class=table><tr><th>Squadra</th><th>Vittorie</th><th>Sconfitte</th><th>Pareggi</th><th>Goal fatti</th><th>Goal subiti</th><th>Falli</th><th>Punti</th><th>Partite giocate</th></tr><tr ng-repeat=\\\"score in vm.models.currentEvent.scoreboard\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankNumberPlayed }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 1\\\"><div ng-repeat=\\\"scoreboard in vm.models.currentEvent.scoreboard\\\"><h4>Girone {{ scoreboard.tournament[0].rankNameGroups }}</h4><table class=table><tr><th>Squadra</th><th>Vittorie</th><th>Sconfitte</th><th>Pareggi</th><th>Goal fatti</th><th>Goal subiti</th><th>Falli</th><th>Punti</th><th>Partite giocate</th></tr><tr ng-repeat=\\\"score in scoreboard.tournament\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankNumberPlayed }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/scorers/scorers.html\",\"<div class=scorers><section class=content-header><h1>Classifica marcatori</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.scorers><table class=table><tr><th>Nome</th><th>Cognome</th><th>Squadra</th><th>Goal</th><th></th></tr><tr ng-repeat-start=\\\"scorer in vm.models.currentEvent.scorers\\\" scorer-show=scorer></tr><tr ng-repeat-end scorer-edit=scorer></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/teams/teams.html\",\"<div class=teams><section class=content-header><h1>Squadre <small>partecipanti</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewTeam()>Crea nuova squadra</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.teams><table class=table><tr><th>Nome</th><th>Capitano</th><th>Telefono</th><th>Orario Preferito</th><th>Luogo Preferito</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th></th></tr><tr ng-repeat-start=\\\"team in vm.models.currentEvent.teams\\\" team-show=team></tr><tr ng-repeat-end team-edit=team></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/components/wizard/wizardProgress/wizardProgress.html\",\"<div class=wizard-progress><i ng-repeat=\\\"i in wizardProgress.range(wizardProgress.wizard.totalSteps) track by $index\\\" class=fa ng-class=\\\"{\\n      \\'fa-circle\\': $index+1 === wizardProgress.wizard.currentStep,\\n      \\'fa-circle-thin\\': $index+1 !== wizardProgress.wizard.currentStep\\n    }\\\">&nbsp;</i></div>\");\n$templateCache.put(\"app/components/wizard/wizardStepBox/wizardStepBox.html\",\"<div class=\\\"wizard-step-box box\\\" ng-class=\\\"{\\'box-success\\': wizardStepBox.active, \\'box-default\\': !wizardStepBox.active}\\\"><div class=\\\"box-header with-border\\\"><h3 class=box-title>{{ wizardStepBox.title }}</h3><div class=\\\"box-tools pull-right hidden\\\"><button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><!-- /.box-header --><div class=box-body><ng-transclude></ng-transclude></div><!-- /.box-body --><div ng-show=\\\"wizardStepBox.active && wizardStepBox.wizard.loading\\\" class=overlay><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><!-- /.box -->\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/advancedEdit.html\",\"<div class=modal-header><a role=button class=close ng-click=matchAdvEdit.cancel()><span aria-hidden=true>×</span></a><h3 class=text-center>{{matchAdvEdit.match.matcTeamA}} vs {{matchAdvEdit.match.matcTeamB}}</h3></div><div class=\\\"modal-body match-advanced-edit\\\"><form class=\\\"match-adv-edit-form relative\\\" name=matchAdvEditForm ng-submit=matchAdvEdit.submit()><div class=row><div class=\\\"col-xs-6 input-small-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.scoreA.$dirty && matchAdvEditForm.scoreA.$invalid}\\\"><label for=matchAdvEditForm-scoreA>Goal {{matchAdvEdit.match.matcTeamA}}</label><select id=matchAdvEditForm-scoreA ng-model=matchAdvEdit.form.scoreA ng-init=\\\"matchAdvEdit.form.scoreA = matchAdvEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.scoreA.$dirty ng-messages=matchAdvEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.scoreB.$dirty && matchAdvEditForm.scoreB.$invalid}\\\"><label for=matchAdvEditForm-scoreB>Goal {{matchAdvEdit.match.matcTeamB}}</label><select id=matchAdvEditForm-scoreB ng-model=matchAdvEdit.form.scoreB ng-init=\\\"matchAdvEdit.form.scoreB = matchAdvEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.scoreB.$dirty ng-messages=matchAdvEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.shootoutA.$dirty && matchAdvEditForm.shootoutA.$invalid}\\\"><label for=matchAdvEditForm-shootoutA>Rigori {{matchAdvEdit.match.matcTeamA}}</label><select id=matchAdvEditForm-shootoutA ng-model=matchAdvEdit.form.shootoutA ng-init=\\\"matchAdvEdit.form.shootoutA = matchAdvEdit.match.matcShootoutTeamA\\\" name=shootoutA class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.shootoutA.$dirty ng-messages=matchAdvEditForm.shootoutA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.shootoutB.$dirty && matchAdvEditForm.shootoutB.$invalid}\\\"><label for=matchAdvEditForm-shootoutB>Rigori {{matchAdvEdit.match.matcTeamB}}</label><select id=matchAdvEditForm-shootoutB ng-model=matchAdvEdit.form.shootoutB ng-init=\\\"matchAdvEdit.form.shootoutB = matchAdvEdit.match.matcShootoutTeamB\\\" name=shootoutB class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.shootoutB.$dirty ng-messages=matchAdvEditForm.shootoutB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></form><div class=row><div class=col-sm-6><scorers-box scorers=matchAdvEdit.match.matchPlayersTeamA team-name=matchAdvEdit.match.matcTeamA team-id=matchAdvEdit.match.matcTeamIdA match-id=matchAdvEdit.match.matcId scorers-key=matchPlayersTeamA autocomplete=matchAdvEdit.autocompleteA></scorers-box></div><div class=col-sm-6><scorers-box scorers=matchAdvEdit.match.matchPlayersTeamB team-name=matchAdvEdit.match.matcTeamB team-id=matchAdvEdit.match.matcTeamIdB match-id=matchAdvEdit.match.matcId scorers-key=matchPlayersTeamB autocomplete=matchAdvEdit.autocompleteB></scorers-box></div></div><div class=row><div class=col-sm-6><cards-box cards=matchAdvEdit.match.matchCardsTeamA team-name=matchAdvEdit.match.matcTeamA team-id=matchAdvEdit.match.matcTeamIdA match-id=matchAdvEdit.match.matcId cards-key=matchCardsTeamA autocomplete=matchAdvEdit.autocompleteA></cards-box></div><div class=col-sm-6><cards-box cards=matchAdvEdit.match.matchCardsTeamB team-name=matchAdvEdit.match.matcTeamB team-id=matchAdvEdit.match.matcTeamIdB match-id=matchAdvEdit.match.matcId cards-key=matchCardsTeamB autocomplete=matchAdvEdit.autocompleteB></cards-box></div></div></div><div class=modal-footer><a role=button class=\\\"btn btn-default pull-left\\\" ng-click=matchAdvEdit.cancel()>Annulla</a> <a role=button class=\\\"btn btn-success\\\" ng-click=matchAdvEdit.ok()>Chiudi</a></div>\");\n$templateCache.put(\"app/pages/calendar/create/create.html\",\"<form id=matchCreateForm class=\\\"match-create-form relative\\\" name=matchCreateForm ng-submit=matchCreate.ok()><div class=modal-header><a role=button class=close ng-click=matchCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova partita</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamA.$dirty && matchCreateForm.teamA.$invalid}\\\"><label for=matchCreateForm-teamA>Squadra Casa</label><select id=matchCreateForm-teamA ng-model=matchCreate.form.teamA name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamA.$dirty ng-messages=matchCreateForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamB.$dirty && matchCreateForm.teamB.$invalid}\\\"><label for=matchCreateForm-teamB>Squadra Ospite</label><select id=matchCreateForm-teamB ng-model=matchCreate.form.teamB name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamB.$dirty ng-messages=matchCreateForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreA.$dirty && matchCreateForm.scoreA.$invalid}\\\"><label for=matchCreateForm-scoreA>Goal Casa</label><select id=matchCreateForm-scoreA ng-model=matchCreate.form.scoreA name=scoreA class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreA.$dirty ng-messages=matchCreateForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreB.$dirty && matchCreateForm.scoreB.$invalid}\\\"><label for=matchCreateForm-scoreB>Goal Ospiti</label><select id=matchCreateForm-scoreB ng-model=matchCreate.form.scoreB name=scoreB class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreB.$dirty ng-messages=matchCreateForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.date.$dirty && matchCreateForm.date.$invalid}\\\"><label for=matchCreateForm-date>Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=matchCreateForm-date ng-model=matchCreate.form.date model=matchCreate.form.date name=date type=text class=form-control datepicker></div></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.time.$dirty && matchCreateForm.time.$invalid}\\\"><label for=matchCreateForm-time>Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=matchCreateForm-time ng-model=matchCreate.form.time name=time type=text class=form-control timepicker></div></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.address.$dirty && matchCreateForm.address.$invalid}\\\"><label for=matchCreateForm-address>Indirizzo</label><input id=matchCreateForm-address ng-model=matchCreate.form.address name=address type=text class=form-control></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.played.$dirty && matchCreateForm.played.$invalid}\\\"><label for=matchCreateForm-played>Giocata</label><select id=matchCreateForm-played ng-model=matchCreate.form.played name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchCreateForm.played.$dirty ng-messages=matchCreateForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=matchCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea partita\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/createDay/create.html\",\"<form id=dayCreateForm class=\\\"match-create-form relative\\\" name=dayCreateForm ng-submit=dayCreate.ok()><div class=modal-header><a role=button class=close ng-click=dayCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova giornata</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.name.$dirty && dayCreateForm.name.$invalid}\\\"><label for=dayCreateForm-name>Nome giornata</label><input id=dayCreateForm-name ng-model=dayCreate.form.name name=name type=text class=form-control required> <span ng-show=dayCreateForm.name.$dirty ng-messages=dayCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.desc.$dirty && dayCreateForm.desc.$invalid}\\\"><label for=dayCreateForm-desc>Descrizione</label><input id=dayCreateForm-desc ng-model=dayCreate.form.desc name=desc type=text class=form-control> <span ng-show=dayCreateForm.desc.$dirty ng-messages=dayCreateForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=dayCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=dayCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea giornata\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=matchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=matchDestroy.ok()>Elimina partita</a></div>\");\n$templateCache.put(\"app/pages/calendar/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=match-edit-form-{{matchEdit.match.matcId}} class=\\\"accordion-body collapse match-edit-form-{{matchEdit.match.matcId}}\\\"><form class=\\\"match-edit-form relative\\\" name=matchEditForm ng-submit=matchEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamA.$dirty && matchEditForm.teamA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamA>Modifica Squadra Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamA ng-model=matchEdit.form.teamA ng-init=\\\"matchEdit.form.teamA = { teamId: matchEdit.match.matcTeamIdA }\\\" name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamA.$dirty ng-messages=matchEditForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamB.$dirty && matchEditForm.teamB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamB>Modifica Squadra Ospite</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamB ng-model=matchEdit.form.teamB ng-init=\\\"matchEdit.form.teamB = { teamId: matchEdit.match.matcTeamIdB }\\\" name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamB.$dirty ng-messages=matchEditForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreA.$dirty && matchEditForm.scoreA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreA>Modifica Goal Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreA ng-model=matchEdit.form.scoreA ng-init=\\\"matchEdit.form.scoreA = matchEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreA.$dirty ng-messages=matchEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreB.$dirty && matchEditForm.scoreB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreB>Modifica Goal Ospiti</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreB ng-model=matchEdit.form.scoreB ng-init=\\\"matchEdit.form.scoreB = matchEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreB.$dirty ng-messages=matchEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.date.$dirty && matchEditForm.date.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-date>Modifica Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=matchEditForm{{matchEdit.match.matcId}}-date ng-model=matchEdit.form.date model=matchEdit.form.date ng-init=\\\"matchEdit.form.date = matchEdit.match.matcDateMatch\\\" name=date type=text class=form-control datepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.time.$dirty && matchEditForm.time.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-time>Modifica Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=matchEditForm{{matchEdit.match.matcId}}-time ng-model=matchEdit.form.time ng-init=\\\"matchEdit.form.time = matchEdit.match.matcTime\\\" name=time type=text class=form-control timepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.address.$dirty && matchEditForm.address.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-address>Modifica Indirizzo</label><input id=matchEditForm{{matchEdit.match.matcId}}-address ng-model=matchEdit.form.address ng-init=\\\"matchEdit.form.address = matchEdit.match.matcAddress\\\" name=address type=text class=form-control></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.played.$dirty && matchEditForm.played.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-played>Modifica Giocata</label><select id=matchEditForm{{matchEdit.match.matcId}}-played ng-model=matchEdit.form.played ng-init=\\\"matchEdit.form.played = {value: matchEdit.match.matcFlgPlay}\\\" name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchEditForm.played.$dirty ng-messages=matchEditForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=matchEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=matchEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/calendar/show/show.html\",\"<tr><td>{{ matchShow.match.matcTeamA }}</td><td>{{ matchShow.match.matcTeamB }}</td><td>{{ matchShow.match.matcScoreTeamA }}</td><td>{{ matchShow.match.matcScoreTeamB }}</td><td>{{ matchShow.match.matcDateMatchPretty }}</td><td>{{ matchShow.match.matcTime }}</td><td>{{ matchShow.match.matcAddress }}</td><td ng-if=\\\"matchShow.models.currentEvent.evenType == 1\\\">{{ matchShow.match.matcNameGroups }}</td><td>{{ matchShow.match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': matchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default\\\" ng-click=matchShow.advancedEdit() ng-show=\\\"matchShow.match.matcTeamIdA !== 0 && matchShow.match.matcTeamIdB !== 0\\\" can=updatematchfull><i class=\\\"fa fa-futbol-o\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.match-edit-form-{{matchShow.match.matcId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=matchShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/cardMatch/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=cardMatchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=cardMatchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=cardMatchDestroy.ok()>Elimina</a></div>\");\n$templateCache.put(\"app/pages/cardMatch/show/show.html\",\"<tr><td>{{ cardMatchShow.cardMatch.matcTeamA }} vs {{ cardMatchShow.cardMatch.matcTeamB }}</td><td ng-repeat=\\\"field in cardMatchShow.config.detailFields\\\"><form ng-if=cardMatchShow.config.controls.editDetail[field.key] class=\\\"cardMatch-edit-form relative no-padding\\\" name=cardMatchShowForm ng-submit=\\\"\\\"><select ng-if=\\\"cardMatchShow.config.controls.editDetail[field.key].type === \\'select\\'\\\" ng-model=cardMatchShow.form[field.key] ng-init=\\\"cardMatchShow.form[field.key] = { value: cardMatchShow.cardMatch[field.key] }\\\" name={{field.key}} class=\\\"form-control no-padding\\\" ng-options=\\\"opt as opt.name for opt in cardMatchShow.config.controls.editDetail[field.key].options track by opt.value\\\"><input ng-if=\\\"cardMatchShow.config.controls.editDetail[field.key].type === \\'text\\'\\\" ng-model=cardMatchShow.form[field.key] ng-init=\\\"cardMatchShow.form[field.key] = cardMatchShow.cardMatch[field.key]\\\" name={{field.key}} type=text class=form-control></select></form><span ng-if=!cardMatchShow.config.controls.editDetail[field.key]>{{ cardMatchShow.cardMatch[field.key] }}</span></td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': cardMatchShow.showControls }\\\"><a ng-show=cardMatchShow.config.controls.editDetail role=button class=\\\"btn btn-sm btn-success\\\" ng-click=cardMatchShow.submit()>Salva </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardMatchShow.destroy() ng-show=cardMatchShow.config.controls.deleteDetail><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/disciplinary/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=card-edit-form-{{cardEdit.card.cardId}} class=\\\"accordion-body collapse card-edit-form-{{cardEdit.card.cardId}}\\\"><table class=table style=\\\"background: transparent\\\"><tr><th>Partita</th><th ng-repeat=\\\"field in cardEdit.config.detailFields\\\">{{ field.name }}</th><th></th></tr><tr ng-repeat=\\\"cardMatch in cardEdit.card[cardEdit.config.cardMatchKey]\\\" card-match-show=cardMatch config=cardEdit.config card-match-player-id=cardEdit.card.playId></tr></table></div></td></tr>\");\n$templateCache.put(\"app/pages/disciplinary/show/show.html\",\"<tr><td ng-repeat=\\\"field in cardShow.config.fields\\\">{{ cardShow.card[field.key] }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': cardShow.showControls }\\\"><a ng-show=cardShow.config.controls.edit role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.card-edit-form-{{cardShow.card.cardId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a ng-show=cardShow.config.controls.delete role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/events/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=eventDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Se elimini questo evento, verranno eliminati anche tutti dati relativi alle squadre e alle partite associate.<br>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventDestroy.ok()>Elimina evento</a></div>\");\n$templateCache.put(\"app/pages/events/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=event-edit-form-{{eventEdit.event.evenId}} class=\\\"accordion-body collapse event-edit-form-{{eventEdit.event.evenId}}\\\"><form class=\\\"event-edit-form relative\\\" name=eventEditForm ng-submit=eventEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.name.$dirty && eventEditForm.name.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-name>Modifica Nome</label><input id=eventEditForm{{eventEdit.event.evenId}}-name ng-model=eventEdit.form.name ng-init=\\\"eventEdit.form.name = eventEdit.event.evenName\\\" name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=eventEditForm.name.$dirty ng-messages=eventEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.desc.$dirty && eventEditForm.desc.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-desc>Modifica Descrizione</label><input id=eventEditForm{{eventEdit.event.evenId}}-desc ng-model=eventEdit.form.desc ng-init=\\\"eventEdit.form.desc = eventEdit.event.evenDescription\\\" name=desc type=text class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\" required> <span ng-show=eventEditForm.desc.$dirty ng-messages=eventEditForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.currentDay.$dirty && eventEditForm.currentDay.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-currentDay>Modifica Giornata Corrente</label><select id=eventEditForm{{eventEdit.event.evenId}}-currentDay ng-model=eventEdit.form.currentDay ng-init=\\\"eventEdit.form.currentDay = eventEdit.event.evenCurrentDay\\\" name=currentDay class=form-control ng-options=\\\"day as day.matcDayName for day in eventEdit.event.matchDays track by day.matcDayId\\\" required></select><span ng-show=eventEditForm.currentDay.$dirty ng-messages=eventEditForm.currentDay.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.dates.$dirty && eventEditForm.dates.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-dates>Modifica Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=eventEditForm{{eventEdit.event.evenId}}-dates ng-model=eventEdit.form.dates model=eventEdit.form.dates ng-init=\\\"eventEdit.form.dates = eventEdit.event.dates\\\" name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><span ng-show=eventEditForm.dates.$dirty ng-messages=eventEditForm.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.address.$dirty && eventEditForm.address.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-address>Modifica Indirizzo</label><input id=eventEditForm{{eventEdit.event.evenId}}-address ng-model=eventEdit.form.address ng-init=\\\"eventEdit.form.address = eventEdit.event.evenAddress\\\" name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo dell\\'evento\\\" required> <span ng-show=eventEditForm.address.$dirty ng-messages=eventEditForm.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.region.$dirty && eventEditForm.region.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-region>Modifica Regione</label><select id=eventEditForm{{eventEdit.event.evenId}}-region ng-model=eventEdit.form.region ng-init=\\\"eventEdit.form.region = eventEdit.event.regions\\\" name=region class=form-control ng-options=\\\"region as region.regiName for region in eventEdit.models.regions track by region.regiId\\\" required></select><span ng-show=eventEditForm.region.$dirty ng-messages=eventEditForm.region.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.telephone.$dirty && eventEditForm.telephone.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-telephone>Modifica Telefono Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-telephone ng-model=eventEdit.form.telephone ng-init=\\\"eventEdit.form.telephone = eventEdit.event.evenMobilePhone\\\" name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.telephone.$dirty ng-messages=eventEditForm.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.email.$dirty && eventEditForm.email.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-email>Modifica E-mail Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-email ng-model=eventEdit.form.email ng-init=\\\"eventEdit.form.email = eventEdit.event.evenEmail\\\" name=email type=text class=form-control placeholder=\\\"Inserisci l\\'e-mail dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.email.$dirty ng-messages=eventEditForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowPoints.$dirty && eventEditForm.yellowPoints.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowPoints>Punti disciplina ammonizioni</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowPoints ng-model=eventEdit.form.yellowPoints ng-init=\\\"eventEdit.form.yellowPoints = eventEdit.event.evenYellowPoints || 0\\\" name=yellowPoints class=form-control ng-options=\\\"yellowPoints as yellowPoints for yellowPoints in eventEdit.pointsOptions track by yellowPoints\\\" required></select><span ng-show=eventEditForm.yellowPoints.$dirty ng-messages=eventEditForm.yellowPoints.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.redPoints.$dirty && eventEditForm.redPoints.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-redPoints>Punti disciplina espulsioni</label><select id=eventEditForm{{eventEdit.event.evenId}}-redPoints ng-model=eventEdit.form.redPoints ng-init=\\\"eventEdit.form.redPoints = eventEdit.event.evenRedPoints || 0\\\" name=redPoints class=form-control ng-options=\\\"redPoints as redPoints for redPoints in eventEdit.pointsOptions track by redPoints\\\" required></select><span ng-show=eventEditForm.redPoints.$dirty ng-messages=eventEditForm.redPoints.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowDiffide.$dirty && eventEditForm.yellowDiffide.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide>Numero ammonizioni diffidato</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide ng-model=eventEdit.form.yellowDiffide ng-init=\\\"eventEdit.form.yellowDiffide = eventEdit.event.evenYellowDiffide || 0\\\" name=yellowDiffide class=form-control ng-options=\\\"yellowDiffide as yellowDiffide for yellowDiffide in eventEdit.pointsOptions track by yellowDiffide\\\" required></select><span ng-show=eventEditForm.yellowDiffide.$dirty ng-messages=eventEditForm.yellowDiffide.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowDiffide2.$dirty && eventEditForm.yellowDiffide2.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide2>Numero ammonizioni diffidato dopo squalifica</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide2 ng-model=eventEdit.form.yellowDiffide2 ng-init=\\\"eventEdit.form.yellowDiffide2 = eventEdit.event.evenYellowDiffide2 || 0\\\" name=yellowDiffide2 class=form-control ng-options=\\\"yellowDiffide2 as yellowDiffide2 for yellowDiffide2 in eventEdit.pointsOptions track by yellowDiffide2\\\" required></select><span ng-show=eventEditForm.yellowDiffide2.$dirty ng-messages=eventEditForm.yellowDiffide2.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-left><a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.recreateCalendar()>Ricrea calendario</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.publish() ng-show=\\\"eventEdit.event.evenStatoEvento != 1\\\">Pubblica evento</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.unpublish() ng-show=\\\"eventEdit.event.evenStatoEvento == 1\\\">Imposta come offline</a></div><div class=pull-right><div><a role=button class=\\\"btn btn-default\\\" ng-click=eventEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div></div><div ng-show=eventEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/events/edit/recreateCalendar.html\",\"<div class=modal-header><a role=button class=close ng-click=eventRecreateCalendar.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Tutte le partite e le giornate saranno ricreate. Quelle presenti ora verranno eliminate.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventRecreateCalendar.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventRecreateCalendar.ok()>Ricrea calendario dell\\'evento</a></div>\");\n$templateCache.put(\"app/pages/events/show/show.html\",\"<tr><td>{{ eventShow.event.evenName }}</td><td>{{ eventShow.event.evenTypePretty }}</td><td>{{ eventShow.event.evenFormulaPretty }}</td><td>{{ eventShow.event.regions.regiName }}</td><td>{{ eventShow.event.evenDayActiveName }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': eventShow.showControls }\\\" ng-show=!eventShow.hideControls><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.event-edit-form-{{eventShow.event.evenId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=eventShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/invitations/create/create.html\",\"<form id=invitationCreateForm class=\\\"invitation-create-form relative\\\" name=invitationCreateForm ng-submit=invitationCreate.ok()><div class=modal-header><a role=button class=close ng-click=invitationCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Invita nuovo dirigente</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': invitationCreateForm.guestEmail.$dirty && invitationCreateForm.guestEmail.$invalid}\\\"><label for=invitationCreateForm-guestEmail>E-mail dirigente</label><input id=invitationCreateForm-guestEmail ng-model=invitationCreate.form.guestEmail name=guestEmail type=email class=form-control required> <span ng-show=invitationCreateForm.guestEmail.$dirty ng-messages=invitationCreateForm.guestEmail.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': invitationCreateForm.events.$dirty && invitationCreateForm.events.$invalid}\\\"><label for=invitationCreateForm-events>Eventi</label><isteven-multi-select id=invitationCreateForm-events name=events input-model=invitationCreate.events output-model=invitationCreate.form.events button-label=evenName item-label=evenName tick-property=ticked output-properties=evenId helper-elements=\\\"all none filter\\\" translation=invitationCreate.multiSelectTranslation></isteven-multi-select><span ng-show=invitationCreateForm.events.$dirty ng-messages=invitationCreateForm.events.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=invitationCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=invitationCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Manda invito\\\"></div></form>\");\n$templateCache.put(\"app/pages/invitations/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=invitationDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=invitationDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=invitationDestroy.ok()>Elimina dirigente</a></div>\");\n$templateCache.put(\"app/pages/invitations/show/show.html\",\"<tr><td>{{ invitationShow.invitation.mailGuest }}</td><td>{{ invitationShow.invitation.evenName }}</td><td>{{ invitationShow.invitation.dateInvitationPretty }}</td><td>{{ invitationShow.invitation.statusPretty }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': invitationShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=invitationShow.destroy() ng-show=\\\"invitationShow.invitation.status != \\'3\\'\\\"><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/managerMatches/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=manager-match-edit-form-{{managerMatchEdit.match.matcId}} class=\\\"accordion-body collapse manager-match-edit-form-{{managerMatchEdit.match.matcId}}\\\"><form class=\\\"manager-match-edit-form relative\\\" name=managerMatchEditForm ng-submit=managerMatchEdit.submit()><div class=row><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-teamA ng-model=managerMatchEdit.form.teamA ng-init=\\\"managerMatchEdit.form.teamA = { teamId: managerMatchEdit.match.matcTeamIdA }\\\" type=hidden name=teamA required> <input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-teamB ng-model=managerMatchEdit.form.teamB ng-init=\\\"managerMatchEdit.form.teamB = { teamId: managerMatchEdit.match.matcTeamIdB }\\\" type=hidden name=teamB required><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.scoreA.$dirty && managerMatchEditForm.scoreA.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreA>Modifica Goal Casa</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreA ng-model=managerMatchEdit.form.scoreA ng-init=\\\"managerMatchEdit.form.scoreA = managerMatchEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in managerMatchEdit.scores track by score\\\" required></select><span ng-show=managerMatchEditForm.scoreA.$dirty ng-messages=managerMatchEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.scoreB.$dirty && managerMatchEditForm.scoreB.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreB>Modifica Goal Ospiti</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreB ng-model=managerMatchEdit.form.scoreB ng-init=\\\"managerMatchEdit.form.scoreB = managerMatchEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in managerMatchEdit.scores track by score\\\" required></select><span ng-show=managerMatchEditForm.scoreB.$dirty ng-messages=managerMatchEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.date.$dirty && managerMatchEditForm.date.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-date>Modifica Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-date ng-model=managerMatchEdit.form.date model=managerMatchEdit.form.date ng-init=\\\"managerMatchEdit.form.date = managerMatchEdit.match.matcDateMatch\\\" name=date type=text class=form-control datepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.time.$dirty && managerMatchEditForm.time.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-time>Modifica Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-time ng-model=managerMatchEdit.form.time ng-init=\\\"managerMatchEdit.form.time = managerMatchEdit.match.matcTime\\\" name=time type=text class=form-control timepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.address.$dirty && managerMatchEditForm.address.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-address>Modifica Indirizzo</label><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-address ng-model=managerMatchEdit.form.address ng-init=\\\"managerMatchEdit.form.address = managerMatchEdit.match.matcAddress\\\" name=address type=text class=form-control></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.played.$dirty && managerMatchEditForm.played.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-played>Modifica Giocata</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-played ng-model=managerMatchEdit.form.played ng-init=\\\"managerMatchEdit.form.played = {value: managerMatchEdit.match.matcFlgPlay}\\\" name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=managerMatchEditForm.played.$dirty ng-messages=managerMatchEditForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=managerMatchEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=managerMatchEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/managerMatches/show/show.html\",\"<tr><td>{{ managerMatchShow.match.matcTeamA }}</td><td>{{ managerMatchShow.match.matcTeamB }}</td><td>{{ managerMatchShow.match.matcScoreTeamA }}</td><td>{{ managerMatchShow.match.matcScoreTeamB }}</td><td>{{ managerMatchShow.match.matcDateMatchPretty }}</td><td>{{ managerMatchShow.match.matcTime }}</td><td>{{ managerMatchShow.match.matcAddress }}</td><td ng-if=\\\"managerMatchShow.models.currentEvent.evenType == 1\\\">{{ managerMatchShow.match.matcNameGroups }}</td><td>{{ managerMatchShow.match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': managerMatchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.manager-match-edit-form-{{managerMatchShow.match.matcId}}><i class=\\\"fa fa-pencil\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/players/create/create.html\",\"<form id=playerCreateForm class=\\\"player-create-form relative\\\" name=playerCreateForm ng-submit=playerCreate.ok()><div class=modal-header><a role=button class=close ng-click=playerCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuovo giocatore</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerCreateForm.name.$dirty && playerCreateForm.name.$invalid}\\\"><label for=playerCreateForm-name>Nome</label><input id=playerCreateForm-name ng-model=playerCreate.form.name name=name type=text class=form-control></div><span ng-show=playerCreateForm.name.$dirty ng-messages=playerCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerCreateForm.surname.$dirty && playerCreateForm.surname.$invalid}\\\"><label for=playerCreateForm-surname>Cognome</label><input id=playerCreateForm-surname ng-model=playerCreate.form.surname name=surname type=text class=form-control></div><span ng-show=playerCreateForm.surname.$dirty ng-messages=playerCreateForm.surname.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div ng-show=playerCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=playerCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea giocatore\\\"></div></form>\");\n$templateCache.put(\"app/pages/players/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=matchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=matchDestroy.ok()>Elimina partita</a></div>\");\n$templateCache.put(\"app/pages/players/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=player-edit-form-{{playerEdit.player.playId}} class=\\\"accordion-body collapse player-edit-form-{{playerEdit.player.playId}}\\\"><form class=\\\"player-edit-form relative\\\" name=playerEditForm ng-submit=playerEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerEditForm.name.$dirty && playerEditForm.name.$invalid}\\\"><label for=playerEditForm{{playerEdit.player.playId}}-name>Modifica Nome</label><input id=playerEditForm{{playerEdit.player.playId}}-name ng-model=playerEdit.form.name ng-init=\\\"playerEdit.form.name = playerEdit.player.playFirstname\\\" name=name type=text class=form-control required></div><span ng-show=playerEditForm.name.$dirty ng-messages=playerEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerEditForm.surname.$dirty && playerEditForm.surname.$invalid}\\\"><label for=playerEditForm{{playerEdit.player.playId}}-surname>Modifica Cognome</label><input id=playerEditForm{{playerEdit.player.playId}}-surname ng-model=playerEdit.form.surname ng-init=\\\"playerEdit.form.surname = playerEdit.player.playSurname\\\" name=surname type=text class=form-control required></div><span ng-show=playerEditForm.surname.$dirty ng-messages=playerEditForm.surname.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=playerEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=playerEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/players/show/show.html\",\"<tr><td>{{ playerShow.player.playFirstname }}</td><td>{{ playerShow.player.playSurname }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': playerShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.player-edit-form-{{playerShow.player.playId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=playerShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/press/create/create.html\",\"<form id=pressCreateForm class=\\\"press-create-form relative\\\" name=pressCreateForm ng-submit=pressCreate.ok()><div class=modal-header><a role=button class=close ng-click=pressCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuovo comunicato</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm.name.$dirty && pressCreateForm.name.$invalid}\\\"><label for=pressCreateForm-name>Nome comunicato</label><input id=pressCreateForm-name ng-model=pressCreate.form.name name=name type=text class=form-control required> <span ng-show=pressCreateForm.name.$dirty ng-messages=pressCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-repeat=\\\"field in pressCreate.selectFields\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm[field.key].$dirty && pressCreateForm[field.key].$invalid}\\\"><label for=pressCreateForm-round>{{ field.name }}</label><select id=pressCreateForm-round ng-init=\\\"pressCreate.form[field.key] = { id: 1 }\\\" ng-model=pressCreate.form[field.key] name={{field.key}} class=form-control ng-options=\\\"opt as opt.name for opt in field.options track by opt.id\\\"></select><span ng-show=pressCreateForm.round.$dirty ng-messages=pressCreateForm.round.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-12><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm.events.$dirty && pressCreateForm.events.$invalid}\\\"><label for=pressCreateForm-events>Eventi inclusi nel comunicato</label><isteven-multi-select id=pressCreateForm-events name=events input-model=pressCreate.events output-model=pressCreate.form.events button-label=evenName item-label=evenName tick-property=ticked output-properties=evenId helper-elements=\\\"all none filter\\\" translation=pressCreate.multiSelectTranslation></isteven-multi-select><span ng-show=pressCreateForm.events.$dirty ng-messages=pressCreateForm.events.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=pressCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=pressCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/press/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=pressDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=pressDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=pressDestroy.ok()>Elimina comunicato</a></div>\");\n$templateCache.put(\"app/pages/press/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=team-edit-form-{{teamEdit.team.teamId}} class=\\\"accordion-body collapse team-edit-form-{{teamEdit.team.teamId}}\\\"><form class=\\\"team-edit-form relative\\\" name=teamEditForm ng-submit=teamEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.name.$dirty && teamEditForm.name.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-name>Modifica Nome</label><input id=teamEditForm{{teamEdit.team.teamId}}-name ng-model=teamEdit.form.name ng-init=\\\"teamEdit.form.name = teamEdit.team.teamName\\\" name=name type=text class=form-control required> <span ng-show=teamEditForm.name.$dirty ng-messages=teamEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.captain.$dirty && teamEditForm.captain.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-captain>Modifica Capitano</label><input id=teamEditForm{{teamEdit.team.teamId}}-captain ng-model=teamEdit.form.captain ng-init=\\\"teamEdit.form.captain = teamEdit.team.teamCaptain\\\" name=captain type=text class=form-control required> <span ng-show=teamEditForm.captain.$dirty ng-messages=teamEditForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.phone.$dirty && teamEditForm.phone.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-phone>Modifica Telefono</label><input id=teamEditForm{{teamEdit.team.teamId}}-phone ng-model=teamEdit.form.phone ng-init=\\\"teamEdit.form.phone = teamEdit.team.teamMobilePhone\\\" name=phone type=text class=form-control required> <span ng-show=teamEditForm.phone.$dirty ng-messages=teamEditForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.time.$dirty && teamEditForm.time.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-time>Modifica Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamEditForm{{teamEdit.team.teamId}}-time ng-model=teamEdit.form.time ng-init=\\\"teamEdit.form.time = teamEdit.team.teamTime\\\" name=time type=text class=form-control timepicker required></div><span ng-show=teamEditForm.time.$dirty ng-messages=teamEditForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.place.$dirty && teamEditForm.place.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-place>Modifica Luogo Preferito</label><input id=teamEditForm{{teamEdit.team.teamId}}-place ng-model=teamEdit.form.place ng-init=\\\"teamEdit.form.place = teamEdit.team.teamPlace\\\" name=place type=text class=form-control required> <span ng-show=teamEditForm.place.$dirty ng-messages=teamEditForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=teamEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=teamEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/press/show/show.html\",\"<tr><td>{{ pressShow.press.pressName }}</td><td>{{ pressShow.press.pressStatoPretty }}</td><td><a href={{pressShow.press.pressUrl}} target=_blank>Scarica il PDF</a></td><td>{{ pressShow.press.pressDatePretty }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': pressShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.press-edit-form-{{pressShow.press.pressId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=pressShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/scorerMatch/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=scorerMatchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=scorerMatchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=scorerMatchDestroy.ok()>Elimina punteggio</a></div>\");\n$templateCache.put(\"app/pages/scorerMatch/show/show.html\",\"<tr><td>{{ scorerMatchShow.scorerMatch.matcTeamA }} vs {{ scorerMatchShow.scorerMatch.matcTeamB }}</td><td><form class=\\\"scorerMatch-edit-form relative no-padding\\\" name=scorerMatchShowForm ng-submit=scorerMatchShow.submit()><select ng-model=scorerMatchShow.form.goal ng-init=\\\"scorerMatchShow.form.goal = scorerMatchShow.scorerMatch.matcScorerGoal\\\" name=goal type=text class=\\\"form-control no-padding\\\" style=\\\"max-width: 80px\\\" ng-options=\\\"goal as goal for goal in scorerMatchShow.scores track by goal\\\" ng-change=scorerMatchShow.submitGoal()></select></form></td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': scorerMatchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=scorerMatchShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/scorers/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=scorer-edit-form-{{scorerEdit.scorer.scorId}} class=\\\"accordion-body collapse scorer-edit-form-{{scorerEdit.scorer.scorId}}\\\"><table class=table style=\\\"background: transparent\\\"><tr><th>Partita</th><th>Goal</th><th></th></tr><tr ng-repeat=\\\"scorerMatch in scorerEdit.scorer.matcScorers\\\" scorer-match-show=scorerMatch scorer-match-player-id=scorerEdit.scorer.scorPlayId></tr></table></div></td></tr>\");\n$templateCache.put(\"app/pages/scorers/show/show.html\",\"<tr><td>{{ scorerShow.scorer.scorPlayFirstname }}</td><td>{{ scorerShow.scorer.scorPlaySurname }}</td><td>{{ scorerShow.scorer.scorTeamName }}</td><td>{{ scorerShow.scorer.scorGoal }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': scorerShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.scorer-edit-form-{{scorerShow.scorer.scorId}}><i class=\\\"fa fa-pencil\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/create/create.html\",\"<form id=teamCreateForm class=\\\"team-create-form relative\\\" name=teamCreateForm ng-submit=teamCreate.ok()><div class=modal-header><a role=button class=close ng-click=teamCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova squadra</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.name.$dirty && teamCreateForm.name.$invalid}\\\"><label for=teamCreateForm-name>Nome</label><input id=teamCreateForm-name ng-model=teamCreate.form.name name=name type=text class=form-control required> <span ng-show=teamCreateForm.name.$dirty ng-messages=teamCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.captain.$dirty && teamCreateForm.captain.$invalid}\\\"><label for=teamCreateForm-captain>Capitano</label><input id=teamCreateForm-captain ng-model=teamCreate.form.captain name=captain type=text class=form-control required> <span ng-show=teamCreateForm.captain.$dirty ng-messages=teamCreateForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.phone.$dirty && teamCreateForm.phone.$invalid}\\\"><label for=teamCreateForm-phone>Telefono</label><input id=teamCreateForm-phone ng-model=teamCreate.form.phone name=phone type=text class=form-control required> <span ng-show=teamCreateForm.phone.$dirty ng-messages=teamCreateForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.time.$dirty && teamCreateForm.time.$invalid}\\\"><label for=teamCreateForm-time>Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamCreateForm-time ng-model=teamCreate.form.time name=time type=text class=form-control timepicker required></div><span ng-show=teamCreateForm.time.$dirty ng-messages=teamCreateForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.place.$dirty && teamCreateForm.place.$invalid}\\\"><label for=teamCreateForm-place>Luogo Preferito</label><input id=teamCreateForm-place ng-model=teamCreate.form.place name=place type=text class=form-control required> <span ng-show=teamCreateForm.place.$dirty ng-messages=teamCreateForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-show=\\\"teamCreate.models.currentEvent.evenType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.round.$dirty && teamCreateForm.round.$invalid}\\\"><label for=teamCreateForm-round>Girone</label><select id=teamCreateForm-round ng-init=\\\"teamCreate.form.round = \\'A\\'\\\" ng-model=teamCreate.form.round name=round class=form-control ng-options=\\\"roundName as roundName for roundName in teamCreate.roundNames track by roundName\\\" required></select><span ng-show=teamCreateForm.round.$dirty ng-messages=teamCreateForm.round.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=teamCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/teams/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=teamDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=teamDestroy.ok()>Elimina squadra</a></div>\");\n$templateCache.put(\"app/pages/teams/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=team-edit-form-{{teamEdit.team.teamId}} class=\\\"accordion-body collapse team-edit-form-{{teamEdit.team.teamId}}\\\"><form class=\\\"team-edit-form relative\\\" name=teamEditForm ng-submit=teamEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.name.$dirty && teamEditForm.name.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-name>Modifica Nome</label><input id=teamEditForm{{teamEdit.team.teamId}}-name ng-model=teamEdit.form.name ng-init=\\\"teamEdit.form.name = teamEdit.team.teamName\\\" name=name type=text class=form-control required> <span ng-show=teamEditForm.name.$dirty ng-messages=teamEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.captain.$dirty && teamEditForm.captain.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-captain>Modifica Capitano</label><input id=teamEditForm{{teamEdit.team.teamId}}-captain ng-model=teamEdit.form.captain ng-init=\\\"teamEdit.form.captain = teamEdit.team.teamCaptain\\\" name=captain type=text class=form-control required> <span ng-show=teamEditForm.captain.$dirty ng-messages=teamEditForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.phone.$dirty && teamEditForm.phone.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-phone>Modifica Telefono</label><input id=teamEditForm{{teamEdit.team.teamId}}-phone ng-model=teamEdit.form.phone ng-init=\\\"teamEdit.form.phone = teamEdit.team.teamMobilePhone\\\" name=phone type=text class=form-control required> <span ng-show=teamEditForm.phone.$dirty ng-messages=teamEditForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.time.$dirty && teamEditForm.time.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-time>Modifica Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamEditForm{{teamEdit.team.teamId}}-time ng-model=teamEdit.form.time ng-init=\\\"teamEdit.form.time = teamEdit.team.teamTime\\\" name=time type=text class=form-control timepicker required></div><span ng-show=teamEditForm.time.$dirty ng-messages=teamEditForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.place.$dirty && teamEditForm.place.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-place>Modifica Luogo Preferito</label><input id=teamEditForm{{teamEdit.team.teamId}}-place ng-model=teamEdit.form.place ng-init=\\\"teamEdit.form.place = teamEdit.team.teamPlace\\\" name=place type=text class=form-control required> <span ng-show=teamEditForm.place.$dirty ng-messages=teamEditForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=teamEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=teamEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/show/show.html\",\"<tr><td>{{ teamShow.team.teamName }}</td><td>{{ teamShow.team.teamCaptain }}</td><td>{{ teamShow.team.teamMobilePhone }}</td><td>{{ teamShow.team.teamTime }}</td><td>{{ teamShow.team.teamPlace }}</td><td ng-if=\\\"teamShow.models.currentEvent.evenType == 1\\\">{{ teamShow.team.teamGroups }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': teamShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.team-edit-form-{{teamShow.team.teamId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=teamShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/cardsBox/cardsBox.html\",\"<div class=\\\"panel panel-primary\\\"><div class=panel-heading>Cartellini {{ cardsBox.teamName }}</div><div class=panel-body><table class=table ng-show=\\\"cardsBox.cards.length  > 0\\\"><tr><th>Marcatore</th><th>Tipo diffida</th><th></th></tr><tr ng-repeat=\\\"card in cardsBox.cards\\\" show-on-hover=\\\"#removeCardButton{{ card.playId + \\'\\' + card.cardId }}\\\"><td>{{ card.playName }} {{ card.playSurname }}</td><td>{{ card.flgCardsPretty }}</td><td><div class=pull-right id=\\\"removeCardButton{{ card.playId + \\'\\' + card.cardId }}\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardsBox.destroyCard(card)><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr></table><form id=\\\"createCardForm{{ cardsBox.teamId }}\\\" name=\\\"createCardForm{{ cardsBox.teamId }}\\\" ng-submit=cardsBox.createCard()><div class=row><div class=\\\"col-sm-7 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].name.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].name.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-name\\\">Nome Marcatore</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-name\\\" type=text ng-model=cardsBox.typeaheadName ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Nome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in cardsBox.autocomplete | filter:{name:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=name> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].name.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].name.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-5 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].cardType.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].cardType.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-cardType\\\">Tipo diffida</label><select id=\\\"createCardForm{{ cardsBox.teamId }}-cardType\\\" ng-model=cardsBox.form.cardType ng-init=\\\"cardsBox.form.cardType = cardsBox.cardTypes[0]\\\" name=cardType class=\\\"form-control no-padding-right\\\" ng-options=\\\"cardType as cardType.name for cardType in cardsBox.cardTypes track by cardType.id\\\" required></select></div></div><div class=\\\"col-sm-7 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].surname.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].surname.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-surname\\\">Cognome Marcatore</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-surname\\\" type=text ng-model=cardsBox.typeaheadSurname ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Cognome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in cardsBox.autocomplete | filter:{surname:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=surname> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].surname.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].surname.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-5 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].disqualificationDays.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].disqualificationDays.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-disqualificationDays\\\">Giorni di squalifica</label><select id=\\\"createCardForm{{ cardsBox.teamId }}-disqualificationDays\\\" ng-model=cardsBox.form.disqualificationDays ng-init=\\\"cardsBox.form.disqualificationDays = 0\\\" ng-disabled=\\\"cardsBox.form.cardType.id === 0\\\" name=disqualificationDays class=\\\"form-control no-padding-right\\\" ng-options=\\\"day as day for day in cardsBox.disqualificationDays track by day\\\" required></select></div></div><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].note.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].note.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-note\\\">Note</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-note\\\" type=text ng-model=cardsBox.form.note placeholder=\\\"Note diffida\\\" class=form-control name=note> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].note.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].note.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><label>&nbsp;</label><input class=\\\"btn btn-primary form-control\\\" type=submit value=Aggiungi></div></div></form></div></div>\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/scorersBox/scorersBox.html\",\"<div class=\\\"panel panel-primary\\\"><div class=panel-heading>Marcatori {{ scorersBox.teamName }}</div><div class=panel-body><table class=table ng-show=\\\"scorersBox.scorers.length  > 0\\\"><tr><th>Marcatore</th><th>Goal</th><th></th></tr><tr ng-repeat=\\\"scorer in scorersBox.scorers\\\" show-on-hover=\\\"#removeScorerButton{{ scorer.playId }}\\\"><td>{{ scorer.playName }} {{ scorer.playSurname }}</td><td>{{ scorer.goal }}</td><td><div class=pull-right id=\\\"removeScorerButton{{ scorer.playId }}\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=scorersBox.destroyScorer(scorer)><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr></table><form id=\\\"createScorerForm{{ scorersBox.teamId }}\\\" name=\\\"createScorerForm{{ scorersBox.teamId }}\\\" ng-submit=scorersBox.createScorer()><div class=row><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].name.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].name.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-name\\\">Nome Marcatore</label><input id=\\\"createScorerForm{{ scorersBox.teamId }}-name\\\" type=text ng-model=scorersBox.typeaheadName ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Nome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in scorersBox.autocomplete | filter:{name:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=name> <span ng-show=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].name.$dirty\\\" ng-messages=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].name.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].goals.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].goals.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-goals\\\">Goals</label><select id=\\\"createScorerForm{{ scorersBox.teamId }}-goals\\\" ng-model=scorersBox.form.goals name=goals class=\\\"form-control no-padding-right\\\" ng-options=\\\"score as score for score in scorersBox.scores track by score\\\" required></select></div></div><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].surname.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].surname.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-surname\\\">Cognome Marcatore</label><input id=\\\"createScorerForm{{ scorersBox.teamId }}-surname\\\" type=text ng-model=scorersBox.typeaheadSurname ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Cognome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in scorersBox.autocomplete | filter:{surname:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=surname> <span ng-show=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].surname.$dirty\\\" ng-messages=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].surname.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><label>&nbsp;</label><input class=\\\"btn btn-primary form-control\\\" type=submit value=Aggiungi></div></div></form></div></div>\");}]);"],"sourceRoot":"/source/"}