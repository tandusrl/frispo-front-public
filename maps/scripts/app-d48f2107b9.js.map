{"version":3,"sources":["scripts/app.js"],"names":["angular","module","eventShow","events","EventShowController","models","$uibModal","vm","this","destroy","open","templateUrl","controller","controllerAs","windowClass","result","then","res","event","EventShowLink","scope","el","attrs","hover","$apply","showControls","element","evenId","on","show","listRegions","$inject","directive","restrict","bindToController","replace","link","EventRecreateCalendarController","$uibModalInstance","ok","close","cancel","dismiss","eventEdit","EventEditController","matches","submit","form2Event","form","eventData","update","recreateCalendar","createCalendar","EventEditLink","find","collapse","$watch","newVal","oldVal","isDefined","currentDay","evenCurrentDay","EventDestroyController","wizardStepBox","WizardStepBoxController","WizardStepBoxLink","step","wizard","currentStep","active","first","addClass","hide","AdminLTE","boxWidget","title","transclude","wizardProgress","WizardProgressController","range","n","Array","TeamsController","teams","$q","updateCurrentEvent","currentEvent","i","length","setLoading","list","unsetLoading","loading","resolve","ScoreboardController","RegisterController","users","toastr","$state","user","register","success","email","go","NewsController","LoginController","ezfb","login","loginFacebook","EventsController","tableFilters","filter","evenStatoEvento","boxClass","DisciplinaryController","DashboardController","CreateEventController","Wizard","resPipe","$log","totalSteps","startFromStep","forceManualRounds","roundNames","initDefaultTeams","step2","addTeam","roundType","push","name","round","removeTeam","index","error","splice","step1Done","step1","type","next","submitStep1","info","create","step2Done","submitStep2","form2Teams","addGroup","step3Done","submitWizard","submitStep3","CalendarController","updateMatchDay","matchDays","matcDayId","wizardTextProgressFilter","factory","defaults","options","merge","prev","utils","str2Date","str","split","forEach","date","trim","date2Str","dateStart","dateEnd","str2Time","splitted","hm","pmAdd","uiState","timepicker","timepickerLink","showOnHover","linkFunc","visible","target","removeClass","showAnimate","updateVisibility","$filter","longTermMemory","parseResponse","status_code","data","reject","unwrapArray","isArray","camelize","newRes","isObject","v","k","injectUserDefaults","loggedIn","displayName","updateCurrentUser","currentUser","mockAnonymousUser","accessToken","uuid","memorizeCurrentUser","memorize","injectEventsDefaults","evenFormula","evenFormulaPretty","evenType","evenTypePretty","dates","evenDateStart","evenDateEnd","isUndefined","isNumber","evenDayActive","search","evenName","regions","regiName","evenCode","evenSeason","join","sort","a","b","matcProg","updateEvents","removeEvent","memorizeEvents","updateRegions","memorizeRegions","memorizeCurrentEvent","updateMatches","daysChanged","insertMatch","match","curDay","updateTeams","log","debugger","allowedKeys","key","val","indexOf","localStorage","toJson","remember","fromJson","e","forget","oblivion","clear","frispoSidebar","SidebarController","state","manageMenuEntries","frispoHeader","HeaderController","frispoFooter","FooterController","$http","usersApiUrl","eventsApiUrl","teamsApiUrl","matchesApiUrl","consumerKey","consumerSecret","cache","helpers","cacheOrHttp","method","fullUrl","headers","keep","config","toUpperCase","url","promise","err","response","userApiCall","consumer_key","consumer_secret","Authorization","eventsApiCall","teamsApiCall","eventId","matchesApiCall","expect200","status","unwrapData","frispoApi","userData","password","facebookData","facebook_token","authResponse","logout","access_token","anonymous_user","listEvents","createEvent","updateEvent","destroyEvent","showEvent","listTeams","addGroupTeams","teamsData","createMatchesCalendar","listMatches","day","errorManager","getErrorString","isString","full_messages","error_description","errors","msg","myErr","reset","datepicker","datepickerLink","watchInput","drp","elementChanged","daterangepicker","autoUpdateInput","locale","format","separator","ev","picker","model","startDate","endDate","singleDatePicker","compareTo","compareToLink","ngModel","$validators","modelvalue","otherModelValue","$validate","require","onLoggedIn","current","setAnonymousUser","bkp","unsetAnonymousUser","formData","extra","team","teamData","teamTime","time","captain","team_captain","team_time","team_name","phone","team_mobile_phone","place","team_place","team_groups","desc","team_description","undefined","dateRange","even_name","even_description","even_email","address","even_address","even_type","organizer","even_organize_by","formula","even_formula","telephone","even_mobile_phone","even_date_start","even_date_end","region","regiId","regi_id","even_day_active","runBlock","$rootScope","defaultBodyClasses","stateChangeSuccess","$on","toState","pms","params","bodyClasses","Event","subscribe","getLoginStatus","run","routerConfig","$stateProvider","$urlRouterProvider","requireLoggedIn","$timeout","abstract","onEnter","otherwise","constant","malarkey","moment","$logProvider","toastrConfig","$animateProvider","$locationProvider","ezfbProvider","debugEnabled","classNameFilter","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","html5Mode","hashPrefix","setLocale","setInitParams","appId","$templateCache","put"],"mappings":"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","file":"scripts/app-d48f2107b9.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('frispo', [\n      'ngAnimate',\n      'ngCookies',\n      'ngSanitize',\n      'ngMessages',\n      'ui.router',\n      'puigcerber.camelize',\n      'toastr',\n      'ezfb',\n      'ui.bootstrap'\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventShow', eventShow);\n\n  /** @ngInject */\n  function eventShow(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/show/show.html',\n      controller: EventShowController,\n      controllerAs: 'eventShow',\n      bindToController: true,\n      replace: true,\n      link: EventShowLink,\n      scope: {\n        event: '=eventShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventShowController(models, $uibModal) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/events/destroy/destroy.html',\n            controller: 'EventDestroyController',\n            controllerAs: 'eventDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroy(vm.event);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function EventShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n      angular.element('#event-edit-form-' + vm.event.evenId).on('show.bs.collapse', function () {\n        events.show(vm.event.evenId); // Request additional info about the event\n        events.listRegions(vm.event.evenId); // We need regions\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventRecreateCalendarController', EventRecreateCalendarController);\n\n  /** @ngInject */\n  function EventRecreateCalendarController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventEdit', eventEdit);\n\n  /** @ngInject */\n  function eventEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/edit/edit.html',\n      controller: EventEditController,\n      controllerAs: 'eventEdit',\n      link: EventEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        event: '=eventEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventEditController(models, events, matches, $uibModal) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.submit = function () {\n        return events\n          .form2Event(vm.form)\n          .then(function (eventData) {\n            return events.update(vm.event.evenId, eventData)\n          });\n      }\n\n      vm.recreateCalendar = function () {\n        $uibModal.open({\n          templateUrl: 'app/pages/events/edit/recreateCalendar.html',\n          controller: 'EventRecreateCalendarController',\n          controllerAs: 'eventRecreateCalendar',\n          windowClass: 'modal-warning'\n        }).result\n        .then(function (res) {\n          if(res === true){\n            return matches\n            .createCalendar(vm.event.evenId)\n            .then(function () {\n              return events.show(vm.event.evenId);\n            });\n          }\n        })\n\n      }\n    }\n\n    function EventEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n\n      scope.$watch('eventEdit.event.evenCurrentDay', function (newVal, oldVal) {\n        if(angular.isDefined(newVal) && newVal !== oldVal){\n          vm.form.currentDay = vm.event.evenCurrentDay;\n        }\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventDestroyController', EventDestroyController);\n\n  /** @ngInject */\n  function EventDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardStepBox', wizardStepBox);\n\n  /** @ngInject */\n  function wizardStepBox() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardStepBox/wizardStepBox.html',\n      controller: WizardStepBoxController,\n      controllerAs: 'wizardStepBox',\n      bindToController: true,\n      scope: {\n        wizard: '=',\n        step: '=',\n        title: '@'\n      },\n      link: WizardStepBoxLink,\n      transclude: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardStepBoxController() {\n    }\n\n    function WizardStepBoxLink(scope, el, attrs, vm) {\n      if(vm.step === vm.wizard.currentStep){\n        vm.active = true;\n      }\n      else{\n        el.find('.wizard-step-box').first().addClass('collapsed-box');\n        el.find('.box-body').first().hide();\n      }\n\n      scope.$watch('wizardStepBox.wizard.currentStep', function (newVal, oldVal) {\n        if(newVal === oldVal) return;\n        // Activate the box\n        if(newVal === vm.step && !vm.active){\n          vm.active = true;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n        // Deactivate the box\n        else if(newVal !== vm.step && vm.active){\n          vm.active = false;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardProgress', wizardProgress);\n\n  /** @ngInject */\n  function wizardProgress() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardProgress/wizardProgress.html',\n      controller: WizardProgressController,\n      controllerAs: 'wizardProgress',\n      bindToController: true,\n      scope: {\n        wizard: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardProgressController() {\n      var vm = this;\n\n      vm.range = function (n) {\n        return new Array(n);\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamsController', TeamsController);\n\n  /** @ngInject */\n  function TeamsController(models, events, teams, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.events[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(teams.list)                       // List the teams of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScoreboardController', ScoreboardController);\n\n  /** @ngInject */\n  function ScoreboardController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController(users, toastr, $state) {\n    var vm = this;\n\n    vm.user = vm.user || {};\n\n    vm.register = function () {\n      users\n        .register(vm.user)\n        .then(function (res) {\n          toastr.success(res.email + \", you have been succesfully registered!\", \"Registration complete\");\n          $state.go('main.admin.dashboard');\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('NewsController', NewsController);\n\n  /** @ngInject */\n  function NewsController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController(users, toastr, $state, ezfb) {\n    var vm = this;\n\n    vm.user = vm.user || {};\n\n    // Login with username and password\n    vm.login = function () {\n      users.login(vm.user);\n    }\n\n    // Login with facebook\n    vm.loginFacebook = function () {\n      ezfb.login(null,{scope: 'email,public_profile'});\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventsController', EventsController);\n\n  /** @ngInject */\n  function EventsController(models, events) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // Create filter objects to split events into published and not published\n    vm.tableFilters = [\n      // published events\n      {\n        filter: { evenStatoEvento: 0 },\n        title: 'Eventi non pubblicati',\n        boxClass: 'box-warning'\n      },\n      {\n        filter: { evenStatoEvento: 1 },\n        title: 'Eventi pubblicati',\n        boxClass: 'box-success'\n      }\n    ];\n\n    // API call\n    events.list();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DisciplinaryController', DisciplinaryController);\n\n  /** @ngInject */\n  function DisciplinaryController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CreateEventController', CreateEventController);\n\n  /** @ngInject */\n  function CreateEventController(Wizard, events, resPipe, toastr, teams, matches, $log, $state, models) {\n    var vm = this;\n\n    // Initialize the wizard object\n    vm.wizard = new Wizard({totalSteps: 3, startFromStep: 1});\n\n    // If true, the user have to manually insert the rounds.\n    // If false, the user can choose between \"Inserimento gironi manuale\" and \"Inserimento gironi automatico\".\n    vm.forceManualRounds = true;\n\n    vm.roundNames = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n\n    vm.initDefaultTeams = function () {\n      if(!vm.step2.teams){\n        vm.step2.teams = [];\n        vm.addTeam();\n        vm.addTeam();\n      }\n    }\n\n    vm.addTeam = function () {\n      if(vm.step2 && vm.step2.roundType === 1){\n        vm.step2.teams.push({name: ''});\n      }\n      else{\n        vm.step2.teams.push({name: '', round: ''});\n      }\n    };\n\n    vm.removeTeam = function (index) {\n      if(vm.step2.teams.length <= 2){\n        toastr.error('E\\' obbligatorio inserire almeno 2 squadre', 'Impossibile rimuovere la squadra');\n      }\n      else{\n        vm.step2.teams.splice(index,1);\n      }\n    }\n\n    vm.step1Done = function () {\n      if(!vm.step2) vm.step2 = {}; // Initialize step2 if needed\n\n      // If not \"Torneo a gironi\"\n      if(vm.step1.type != 1){\n        vm.step2.roundType = '1';\n        vm.initDefaultTeams();\n      }\n\n      // If \"torneo a gironi\" and user can't choose manual or automatic round type\n      else if(vm.forceManualRounds){\n        vm.step2.roundType = '0'; // Manual rounds\n        vm.initDefaultTeams();\n      }\n\n      vm.wizard.next();\n    }\n\n    vm.submitStep1 = function () {\n      $log.info('creando l\\'evento..');\n      return events\n        .form2Event(vm.step1)\n        .then(events.create);\n    }\n\n    vm.step2Done = function () {\n      vm.wizard.next();\n    }\n\n    vm.submitStep2 = function () {\n      $log.info('creando le squadre..');\n      return teams\n        .form2Teams(vm.step2)\n        .then(teams.addGroup);\n    }\n\n    vm.step3Done = function () {\n      vm.submitWizard();\n    }\n\n    vm.submitStep3 = function () {\n      $log.info('creando il calendario..');\n      return matches.createCalendar(models.currentEvent.evenId);\n    }\n\n    vm.submitWizard = function () {\n      vm.wizard.loading = true;\n      vm.submitStep1()\n        .then(vm.submitStep2)\n        .then(vm.submitStep3)\n        .then(function () {\n          $state.go('main.admin.events');\n        })\n        .finally(function () {\n          vm.wizard.loading = false;\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CalendarController', CalendarController);\n\n  /** @ngInject */\n  function CalendarController(models, events, matches, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.events[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.currentDay.matcDayId)\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .filter('wizardTextProgress', wizardTextProgressFilter);\n\n  /** @ngInject */\n  function wizardTextProgressFilter() {\n    return function(wizard) {\n      return 'Step ' + wizard.currentStep + ' di ' + wizard.totalSteps;\n    };\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * A wizard\n   */\n  .factory('Wizard', function () {\n    var defaults = {\n      totalSteps: 1,\n      startFromStep: 1\n    }\n\n    return function Wizard (options) {\n      this.options = angular.merge(defaults, options);\n\n      this.totalSteps = this.options.totalSteps;\n      this.currentStep = this.options.startFromStep;\n\n      this.next = function () {\n        if(this.currentStep < this.totalSteps){\n          this.currentStep++;\n        }\n      }\n\n      this.prev = function () {\n        if(this.currentStep > 1){\n          this.currentStep--;\n        }\n      }\n    };\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Utilities functions.\n   */\n  .factory('utils', function () {\n    var utils = {\n      str2Date: function (str) {\n        var res = [];\n        var range = str.split('->');\n        angular.forEach(range, function (date) {\n          var split = date.split('/');\n          if(split.length !== 3) return null;\n          res.push(split[2].trim() + '-' + split[1].trim() + '-' + split[0].trim())\n        })\n        if(res.length === 1){\n          return res[0];\n        }\n        else{\n          return res;\n        }\n      },\n      date2Str: function (dateStart, dateEnd) {\n        if(!dateStart) return null;\n\n        var split = dateStart.split('-');\n        if(split.length !== 3) return null;\n        var res = split[2].trim() + '/' + split[1].trim() + '/' + split[0].trim();\n\n        if(dateEnd){\n          res +=  ' -> ' + utils.date2Str(dateEnd);\n        }\n        return res;\n      },\n      str2Time: function (str) {\n        var res = null;\n        var splitted = str.trim().split(' ');\n        if(splitted.length == 2){\n          var hm = splitted[0].trim().split(':');\n          var pmAdd = (splitted[1] == 'PM' ? 12 : 0);\n          if(hm.length == 2){\n            res = (+hm[0] + pmAdd) + ':' + hm[1];\n          }\n        }\n        return res;\n      }\n    };\n\n    return utils;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * UI state service.\n   * Keep application-wide shared variables\n   */\n  .factory('uiState', function () {\n    var uiState = {};\n\n    return uiState;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('timepicker', timepicker);\n\n  /** @ngInject */\n  function timepicker() {\n    var directive = {\n      restrict: 'A',\n      link: timepickerLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function timepickerLink(scope, el) {\n      el.timepicker();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('showOnHover', showOnHover);\n\n  /** @ngInject */\n  function showOnHover() {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        showOnHover: '@',\n        showAnimate: '='\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var visible = false;\n      var target = angular.element(scope.showOnHover);\n\n      scope.$watch('showOnHover', function () {\n        target.removeClass('show-on-hover-target').removeClass('not-visible').removeClass('show-animate');\n        target = angular.element(scope.showOnHover);\n        target.addClass('show-on-hover-target');\n        if(scope.showAnimate){\n          target.addClass('show-animate');\n        }\n        scope.updateVisibility();\n      })\n\n      scope.updateVisibility = function () {\n        if(visible){\n          target.removeClass('not-visible');\n        }\n        else{\n          target.addClass('not-visible');\n        }\n      }\n\n      el.hover(function() {\n          if(!visible){\n            visible = true;\n            scope.updateVisibility();\n          }\n        },\n        function() {\n          if(visible){\n            visible = false;\n            scope.updateVisibility();\n          }\n        }\n      );\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Response management pipeline.\n   * Utilities to process a response from the moment it arrives to the models update.\n   * To use in a promise chain as a pipeline\n   */\n  .factory('resPipe', function ($q, $filter, models, longTermMemory, $log, utils) {\n    var resPipe = {\n\n      /**\n       * Parse the initial response from the Frispo API\n       */\n      parseResponse: function(res) {\n        // Look for the response status_code\n        switch (res.status_code) {\n          case 200:\n            return res.data;\n          default:\n            return $q.reject({error: res.error});\n        }\n      },\n\n      /**\n       * Unwrap the response from a single element array\n       */\n      unwrapArray: function (res) {\n        if(angular.isArray(res) && res.length === 1) return res[0];\n        return res;\n      },\n\n      /**\n       * Camelize the response\n       */\n      camelize: function (res) {\n        var newRes;\n        if(angular.isArray(res)){\n          newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.camelize(el));\n          })\n          return newRes;\n        }\n        else if(angular.isObject(res)){\n          newRes = {};\n          angular.forEach(res, function(v,k){\n            newRes[$filter('camelize')(k)] = resPipe.camelize(v);\n          });\n          return newRes;\n        }\n        else {\n          return res;\n        }\n      },\n\n      /**\n       * Inject default fields to User objects\n       */\n      injectUserDefaults: function (res) {\n        res.loggedIn = true;\n        res.displayName = res.displayName || res.email || res.name || 'Nome Cognome';\n        return res;\n      },\n\n      /**\n       * Update the current user\n       */\n      updateCurrentUser: function (res) {\n        models.currentUser = res;\n        return res;\n      },\n\n      /**\n       * Mock an anonymous user for testing APIs\n       */\n      mockAnonymousUser: function (res) {\n        res.accessToken = '4e66c966e021918f0b088ddc929847f7';\n        res.uuid = '';\n        return res;\n      },\n\n      /**\n      * Memorize the current user in long term memory\n      */\n      memorizeCurrentUser: function (res) {\n        longTermMemory.memorize('currentUser', models.currentUser);\n        return res;\n      },\n\n      /**\n       * Inject default fields to events\n       */\n      injectEventsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectEventsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify evenFormula\n        if(res.evenFormula === 0)\n          res.evenFormulaPretty = 'Andata e ritorno';\n        else if(res.evenFormula === 1)\n          res.evenFormulaPretty = 'Solo andata';\n\n        // Prettify evenType\n        if(res.evenType === 0)\n          res.evenTypePretty = 'Campionato italiana';\n        else if(res.evenType === 1)\n          res.evenTypePretty = 'Torneo a giorni';\n\n        // Make a dateRangePicker compliant field\n        if(!res.dates && res.evenDateStart && res.evenDateEnd){\n          res.dates = utils.date2Str(res.evenDateStart, res.evenDateEnd);\n        }\n\n        // Initialize a default published status\n        if(angular.isUndefined(res.evenStatoEvento)){\n          res.evenStatoEvento = 0; // Set as unpublished\n        }\n\n        // Initialize the currentDay based on its ID\n        if(angular.isNumber(res.evenDayActive) && angular.isArray(res.matchDays)){\n          for (var i = 0; i < res.matchDays.length; i++) {\n            if(res.matchDays[i].matcDayId === res.evenDayActive){\n              res.evenCurrentDay = res.matchDays[i];\n              break;\n            }\n          }\n        }\n\n        // Make a search field\n        res.search = [\n          res.evenName,\n          res.evenTypePretty,\n          res.evenFormulaPretty,\n          res.regions && res.regions.regiName || '',\n          res.evenCode,\n          res.evenSeason\n        ].join(' ');\n\n        // Sort the match days by prog number\n        if(angular.isArray(res.matchDays)){\n          res.matchDays.sort(function (a,b) {\n            return a.matcProg > b.matcProg;\n          });\n        }\n\n        return res;\n      },\n\n      /**\n       * Update the events\n       */\n      updateEvents: function (res) {\n        models.events = res;\n        return res;\n      },\n\n      /**\n       * Remove an event from the cache\n       */\n      removeEvent: function (res) {\n        // Look for the event in cache\n        var i = -1;\n        for (i=0; i < models.events.length; i++) {\n          if(models.events[i].evenId === res.evenId){\n            break;\n          }\n        }\n        // The event was found -> remove it\n        if(i >= 0 && i < models.events.length){\n          models.events.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Memorize the events user in long term memory\n       */\n      memorizeEvents: function (res) {\n        longTermMemory.memorize('events', models.events);\n        return res;\n      },\n\n      /**\n      * Update the regions\n      */\n      updateRegions: function (res) {\n        models.regions = res;\n        return res;\n      },\n\n      /**\n      * Memorize the regions user in long term memory\n      */\n      memorizeRegions: function (res) {\n        longTermMemory.memorize('regions', models.regions);\n        return res;\n      },\n\n      /**\n       * Update the current event\n       */\n      updateCurrentEvent: function (res) {\n        if(angular.isArray(models.events)){\n          for (var i = 0; i < models.events.length; i++) {\n            if(models.events[i].evenId === res.evenId){\n              angular.merge(models.events[i], res);\n              models.currentEvent = models.events[i];\n              return models.currentEvent;\n            }\n          }\n        }\n        models.currentEvent = res;\n        return res;\n      },\n\n      /**\n      * Memorize the events user in long term memory\n      */\n      memorizeCurrentEvent: function (res) {\n        longTermMemory.memorize('currentEvent', models.currentEvent);\n        return res;\n      },\n\n\n      /**\n       * Update the matches\n       */\n      updateMatches: function (res) {\n        if(!models.currentEvent || !angular.isArray(models.currentEvent.matchDays)) return res;\n\n        var daysChanged = {};\n\n        var insertMatch = function (match) {\n          for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n            var curDay = models.currentEvent.matchDays[i];\n            if(match.matcDayId === curDay.matcDayId){\n              if(daysChanged[match.matcDayId+'']){\n                curDay.matches.push(match);\n              }\n              else{\n                curDay.matches = [match];\n              }\n              daysChanged[curDay.matcDayId+''] = true;\n              break;\n            }\n          }\n        }\n\n        if(angular.isArray(res)){\n          angular.forEach(res, insertMatch);\n        }\n        else{\n          insertMatch(res);\n        }\n\n        return res;\n      },\n\n      /**\n       * Update the teams of current event\n       */\n      updateTeams: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.teams = res;\n        }\n        return res;\n      },\n\n    //\n    //   /**\n    //    * Inject some default values inside the response\n    //    */\n    //   injectDefaults: function(res) {\n    //     // Parse the model depending of its nature\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           helpers.forEachModel(model, helpers.injectProjectDefaults);\n    //           break;\n    //         case 'users':\n    //         case 'user':\n    //           helpers.forEachModel(model, helpers.injectUserDefaults);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //   * Mark the model as to be reloaded. This allows the resPipe to delete it\n    //   * from cache (if present) and to add it again\n    //   */\n    //   markReload: function (res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, function (m) {\n    //       m._reload = true;\n    //     });\n    //     return res;\n    //   },\n    //\n    //\n    //   /**\n    //   * Mark the model as destroyed. This allows the resPipe to delete it\n    //   * from cache (if present)\n    //   */\n    //   markDestroyed: function (res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, function (m) {\n    //       m._destroyed = true;\n    //     });\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort frames and comments in projects\n    //    */\n    //   sortFramesAndComments: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(angular.isArray(model)){\n    //       angular.forEach(model, function(project) {\n    //         helpers.sortFramesAndCommentsSingle(project);\n    //       });\n    //     }\n    //     else if(model){\n    //       helpers.sortFramesAndCommentsSingle(model);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort frames in cache\n    //    */\n    //   sortFramesCache: function(res) {\n    //     var project = helpers.getRelatedProject(res);\n    //     if(project && project.frames){\n    //       utils.sortByOrder(project.frames);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort Comments given order\n    //    */\n    //   sortCommentsCache: function(res) {\n    //     var frame = helpers.getRelatedFrame(res);\n    //     if(frame && frame.comments){\n    //       utils.sortByOrder(frame.comments);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Update models cache\n    //    */\n    //   updateCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     var project = null;\n    //     var frame = null;\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           res[res._model] = helpers.updateModelCache(models.projects, model);\n    //           break;\n    //         case 'frames':\n    //         case 'frame':\n    //           project = helpers.getRelatedProject(res);\n    //           res[res._model] = helpers.updateModelCache(project.frames, model);\n    //           break;\n    //         case 'comments':\n    //         case 'comment':\n    //           frame = helpers.getRelatedFrame(res);\n    //           if(!frame.comments){\n    //             frame.comments = [];\n    //           }\n    //           res[res._model] = helpers.updateModelCache(frame.comments, model);\n    //           break;\n    //         case 'project_files':\n    //         case 'project_file':\n    //           project = helpers.getRelatedProject(res);\n    //           res[res._model] = helpers.updateModelCache(project.project_files, model);\n    //           break;\n    //         case 'user':\n    //         case 'users':\n    //           res[res._model] = helpers.updateModelCache(models.users, model);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Update models cache\n    //    */\n    //   cleanCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'users':\n    //           models.users = [];\n    //           if(models.currentUser){\n    //             models.users.push(models.currentUser);\n    //           }\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Prune the cache, removing old projects which probably has been deleted\n    //    */\n    //   pruneProjectCache: function(res) {\n    //     if(angular.isArray(res.projects)){\n    //       var ids = [];\n    //       var newCache = [];\n    //       // Remember projects returned by server in the response\n    //       angular.forEach(res.projects, function(project) {\n    //         ids.push(project.id);\n    //       });\n    //       // Keep in cache only allowed projects\n    //       angular.forEach(models.projects, function(project) {\n    //         // If the project was present in response, or if the project is not mine, keep.\n    //         // (Don't keep the project if it's mine but it's not present in response. This means it's been recently deleted)\n    //         if(ids.indexOf(project.id) >= 0 || project.owner.id !== models.currentUser.id){\n    //           newCache.push(project);\n    //         }\n    //       });\n    //       models.projects = newCache; // Replace the cache\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Prune the cache, removing old projects which probably has been deleted\n    //    */\n    //   forcePruneProjectCache: function(res) {\n    //     if(angular.isArray(res.projects)){\n    //       var ids = [];\n    //       var newCache = [];\n    //       // Remember projects returned by server in the response\n    //       angular.forEach(res.projects, function(project) {\n    //         ids.push(project.id);\n    //       });\n    //       // Keep in cache only allowed projects\n    //       angular.forEach(models.projects, function(project) {\n    //         // Keep only the projects that are in response\n    //         if(ids.indexOf(project.id) >= 0){\n    //           newCache.push(project);\n    //         }\n    //       });\n    //       models.projects = newCache; // Replace the cache\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Removes a model from cache\n    //    */\n    //   removeFromCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'project_files':\n    //         case 'project_file':\n    //           helpers.forEachModel(model, helpers.removeProjectFileFromCache);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Set the project(s) as mine mocking an owner\n    //    */\n    //   setProjectAsMine: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, helpers.setProjectAsMineSingle);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Set the project given in response as the current project\n    //    */\n    //   setAsCurrentProject: function(res) {\n    //     if(res.project && !angular.isArray(res.project)){\n    //       models.currentProject = res.project;\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //   * Set the user given in response as the current user\n    //   */\n    //   setAsCurrentUser: function (res) {\n    //     if(res.user && !angular.isArray(res.user)){\n    //       models.currentUser = res.user;\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Convert values to a human readable format\n    //    */\n    //   humanize: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           helpers.forEachModel(model, helpers.humanizeProject);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores projects in long term memory\n    //    */\n    //   memorizeProjects: function(res) {\n    //     longTermMemory.memorize('projects', models.projects);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores currentUser in long term memory\n    //    */\n    //   memorizeCurrentUser: function(res) {\n    //     longTermMemory.memorize('currentUser', models.currentUser);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores About projects in long term memory\n    //    */\n    //   memorizeAboutProjects: function(res) {\n    //     longTermMemory.memorize('aboutProjects', models.projects);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Manage side effects, if any\n    //    */\n    //   sideEffects: function(res) {\n    //     if(res.side_effects){\n    //       angular.forEach(res.side_effects, function(v,k) {\n    //         var project = null;\n    //         var frame = null;\n    //\n    //         switch(k){\n    //           case 'projects':\n    //           case 'project':\n    //             helpers.updateModelCache(models.projects, v);\n    //             break;\n    //           case 'user':\n    //           case 'users':\n    //             helpers.updateModelCache(models.users, v);\n    //             break;\n    //           case 'frames':\n    //           case 'frame':\n    //             project = helpers.getRelatedProject(res);\n    //             helpers.updateModelCache(project.frames, v);\n    //             break;\n    //           case 'project_files':\n    //           case 'project_file':\n    //             project = helpers.getRelatedProject(res);\n    //             helpers.updateModelCache(project.project_files, v);\n    //             break;\n    //           case 'comments':\n    //           case 'comment':\n    //             frame = helpers.getRelatedFrame(res);\n    //             helpers.updateModelCache(frame.comments, v);\n    //             break;\n    //           default:\n    //             $log.warn('Don\\'t know how to handle side effect \"' + k + '\":');\n    //             $log.warn(v);\n    //             break;\n    //         }\n    //       });\n    //     }\n    //     return res;\n    //   }\n    // };\n    //\n    // var helpers = {\n    //\n    //   /**\n    //    * Valid models names\n    //    */\n    //   validModels: [\n    //     'projects',\n    //     'project',\n    //     'frames',\n    //     'frame',\n    //     'comments',\n    //     'comment',\n    //     'project_files',\n    //     'project_file',\n    //     'users',\n    //     'user'\n    //   ],\n    //\n    //   /**\n    //    * Fetch the model from response\n    //    */\n    //   fetchModel: function(res) {\n    //     if(res._model && res[res._model]){\n    //       return res[res._model];\n    //     }\n    //     return null;\n    //   },\n    //\n    //   /**\n    //   * Get the related project referenced in res\n    //   */\n    //   getRelatedProject: function (res) {\n    //     return utils.findFirst(models.projects, res._project_id);\n    //   },\n    //\n    //   /**\n    //   * Get the related frame referenced in res\n    //   */\n    //   getRelatedFrame: function (res) {\n    //     var project = helpers.getRelatedProject(res);\n    //     return utils.findFirst(project.frames, res._frame_id);\n    //   },\n    //\n    //   /**\n    //    * Executes a function for each model\n    //    */\n    //   forEachModel: function(model, func) {\n    //     if(angular.isArray(model)){\n    //       angular.forEach(model, func);\n    //     }\n    //     else if(model){\n    //       func(model);\n    //     }\n    //   },\n    //\n    //   /**\n    //    * inject default values to a project\n    //    */\n    //   injectProjectDefaults: function(project) {\n    //     // Set default image if not set\n    //     if(!project.image){\n    //       project.image = 'assets/images/default-img.png';\n    //     }\n    //\n    //     // Default download url\n    //     if(!project.download_url){\n    //       project.download_url = apiUrl + '/v1/projects/' + project.id + '/download';\n    //     }\n    //   },\n    //\n    //   /**\n    //    * inject default values to a user\n    //    */\n    //   injectUserDefaults: function(user) {\n    //     // Default mb_used to 0\n    //     if(!user.mb_used){\n    //       user.mb_used = 0;\n    //     }\n    //\n    //     // Default mb_total to 0\n    //     if(!user.mb_total){\n    //       user.mb_total = 0;\n    //     }\n    //\n    //     if(!user.can){\n    //       user.can = {\n    //         manage: [],\n    //         update: [],\n    //         show: []\n    //       };\n    //     }\n    //   },\n    //\n    //   /**\n    //    * Set a project as mine\n    //    */\n    //   setProjectAsMineSingle: function(project) {\n    //     if(!project.owner && models.currentUser && models.currentUser.id){\n    //       project.owner = { id: models.currentUser.id };\n    //     }\n    //   },\n    //\n    //   /**\n    //    * Sort the frames and comments of a project by order\n    //    */\n    //   sortFramesAndCommentsSingle: function(project) {\n    //     utils.sortByOrder(project.frames);\n    //     angular.forEach(project.frames, function(frame) {\n    //       utils.sortByOrder(frame.comments);\n    //     });\n    //   },\n    //\n    //   humanizeProject: function(project) {\n    //     // force private to be a boolean (defaults to false), and set private string\n    //     project.private = !!project.private;\n    //     if(project.private){\n    //       project.privateString = 'Private Project';\n    //     }\n    //     else{\n    //       project.privateString = 'Public Project';\n    //     }\n    //   },\n    //\n    //   updateModelCache: function (modelCache, model) {\n    //     var newData = model;\n    //\n    //     // modelCache is array\n    //     if(angular.isArray(modelCache)){\n    //\n    //       // if model is array, recursion\n    //       if(angular.isArray(model)){\n    //         newData = [];\n    //         angular.forEach(model, function(m) {\n    //           if(m){\n    //             var merged = helpers.updateModelCache(modelCache, m); // recursion\n    //             if(merged){\n    //               newData.push(merged);\n    //             }\n    //           }\n    //         });\n    //       }\n    //\n    //       // single model\n    //       else if(model){\n    //         // if model is maked as _reload, remove it from cache and add it again\n    //         if(model._reload){\n    //           utils.removeFirst(modelCache, model.id);\n    //           delete model._reload; // Delete _reload metadata not to store it in cache\n    //           newData = utils.mergeOrPush(modelCache, model);\n    //         }\n    //         // if model is marked as _destroyed, remove it from cache\n    //         else if(model._destroyed){\n    //           utils.removeFirst(modelCache, model.id);\n    //         }\n    //         // otherwise, just update the cache\n    //         else{\n    //           newData = utils.mergeOrPush(modelCache, model);\n    //         }\n    //       }\n    //     }\n    //\n    //     return newData;\n    //   }\n\n      log: function (res) {\n        $log.info(res);\n        return res;\n      },\n\n      debugger: function (res) {\n        debugger; // eslint-disable-line no-debugger\n        return res;\n      }\n    };\n\n    return resPipe;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Long Term Memory\n   * Persist data to make it available after the browser is closed\n   */\n  .factory('longTermMemory', function () {\n    var allowedKeys = [\n      'currentUser',\n      'events',\n      'regions',\n      'currentEvent'\n    ];\n\n    var longTermMemory = {\n      memorize: function(key, val) {\n        if(allowedKeys.indexOf(key) < 0){\n          return;\n        }\n\n        localStorage[key] = angular.toJson(val);\n      },\n\n      remember: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        try {\n          return angular.fromJson(localStorage[key]);\n        }\n        catch(e){\n          delete localStorage[key];\n          return null;\n        }\n      },\n\n      forget: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        delete localStorage[key];\n      },\n\n      oblivion: function() {\n        angular.forEach(allowedKeys, function(key) {\n          delete localStorage[key];\n        });\n        localStorage.clear();\n      }\n    };\n\n    return longTermMemory;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoSidebar', frispoSidebar);\n\n  /** @ngInject */\n  function frispoSidebar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoSidebar/frispoSidebar.html',\n      controller: SidebarController,\n      controllerAs: 'sidebar',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function SidebarController(models, $state) {\n      var vm = this;\n\n      vm.models = models;\n      vm.state = $state;\n\n      vm.manageMenuEntries = [\n        'main.admin.createEvent',\n        'main.admin.events',\n        'main.admin.teams',\n        'main.admin.calendar',\n        'main.admin.scoreboard'\n      ]\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoHeader', frispoHeader);\n\n  /** @ngInject */\n  function frispoHeader() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoHeader/frispoHeader.html',\n      controller: HeaderController,\n      controllerAs: 'header',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function HeaderController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoFooter', frispoFooter);\n\n  /** @ngInject */\n  function frispoFooter() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoFooter/frispoFooter.html',\n      controller: FooterController,\n      controllerAs: 'footer',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function FooterController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * My Project Overview API service\n   */\n   .factory('frispoApi', function ($q, $http, usersApiUrl, eventsApiUrl, teamsApiUrl, matchesApiUrl, consumerKey, consumerSecret, models) {\n      // Cache the promises (just to avoid to call the same API before the previous has finished)\n      var cache = {};\n\n      // Api Helpers (accessible only from this factory)\n      var helpers = {\n        /**\n         * Try to retrieve the result from cache, or make HTTP call\n         * @param  {String} method  The HTTP method\n         * @param  {String} fullUrl The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @param  {Boolean} keep   If true, the promise is cached even after it's been fulfilled\n         * @return {Promise}        A promise of the response\n         */\n        cacheOrHttp: function(method, fullUrl, data, headers, keep) {\n          var key = method + fullUrl + (data ? angular.toJson(data) : '');\n\n          var config = {};\n          if(method) config.method = method.toUpperCase();\n          if(fullUrl) config.url = fullUrl;\n          if(data) config.data = data;\n          if(headers) config.headers = headers;\n\n          if (!cache[key]) {\n            var promise;\n            var err = false;\n            switch(method){\n              case 'get':\n              case 'GET':\n              case 'post':\n              case 'POST':\n              case 'put':\n              case 'PUT':\n              case 'patch':\n              case 'PATCH':\n              case 'delete':\n              case 'DELETE':\n                promise = $http(config);\n                break;\n              default:\n                err = true;\n                promise = $q.reject();\n                break;\n            }\n            if(!err){\n              cache[key] = promise.finally(function(response,err) {\n                if(!keep){\n                  delete cache[key]; // delete the cache, so the next call will be fresh\n                }\n                if(err) { return $q.reject(err); }\n                if(response) { return response; }\n              });\n            }\n          }\n\n          return cache[key];\n        },\n\n        /**\n         * Perform an API call to the Users endpoint, using preset headers and required data\n         * @param  {String} method  The HTTP method\n         * @param  {String} url The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        userApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            usersApiUrl + url,\n            angular.merge({\n                consumer_key: consumerKey,\n                consumer_secret: consumerSecret\n              },\n              data\n            ),\n            angular.merge({\n                Authorization: 'Basic ZnJpc3BvOmZyMXNwMA==' // frispo:fr1sp0\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Events endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        eventsApiCall: function (method, url, data, headers, keep) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            eventsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            ),\n            keep\n          );\n        },\n\n        /**\n         * Perform an API call to the Teams endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        teamsApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            teamsApiUrl + '/events/' + eventId + '/teams' + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Match endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        matchesApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            matchesApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Expect a 200 response and return data.\n         * Otherwise, return a rejected promise.\n         */\n        expect200: function (response) {\n          if(response.status === 200){\n            return response.data;\n          }\n          else{\n            return $q.reject(response);\n          }\n        },\n\n        unwrapData: function (response) {\n          return response.data;\n        }\n      };\n\n      var frispoApi = {\n        /** USER API **/\n\n        /**\n         * Register a new user\n         */\n        register: function(userData) {\n          return helpers\n            .userApiCall('post', '/create', {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Authenticate the user\n         */\n        login: function(userData) {\n          return helpers\n            .userApiCall('post', '/login', {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Authenticate the user using facebook\n         */\n        loginFacebook: function (facebookData) {\n          return helpers\n            .userApiCall('post', '/login_facebook', {\n              // TODO: uncomment this line\n              facebook_token: facebookData.authResponse.accessToken\n              // TODO: remove this line\n              // facebook_token: 'EAAOlGomqNZCEBAP0qxpxsF24LHj0U6f31n9pHfM2dWyBHSlW5P2gD3ZCkragDChLxZC2vmOdOeJxS6NJDHQiRel6schIQaC8aapfzlO9NzMTYBMVug27xr6m9XOW70nHpaiycsqGl33djVykZARc10PIg09g4gANZCa2NcRYKga0F32fZBH7PFNJs54rNf89MZD'\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Logout the user\n         * @param  {Object} userData  an hash containing the 'accessToken'\n         * @return {Promise}          A promise with the response\n         */\n        logout: function (userData) {\n          return helpers\n            .userApiCall('post', '/logout', {\n              access_token: userData.accessToken,\n              anonymous_user: 'siteweb'\n            })\n            .then(helpers.expect200);\n        },\n\n        /* EVENTS API */\n\n        /**\n         * List the events of the current user\n         * @return {Promise} A promise fulfilled with the event list\n         */\n        listEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/add/' + models.currentUser.uuid, eventData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Update an event\n         */\n        updateEvent: function (eventId, eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/' + eventId + '/edit/' + models.currentUser.uuid, eventData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroyEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('delete', '/events/' + eventData.evenId + '/remove/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Show an event\n         * @return {Promise} A promise fulfilled with the event requested\n         */\n        showEvent: function (eventId) {\n          return helpers\n            .eventsApiCall('get', '/event/' + eventId + '/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * List the active regions\n         */\n        listRegions: function () {\n          return helpers\n            .eventsApiCall('get', '/regions/' + models.currentUser.uuid, null, null, true)\n            .then(helpers.expect200);\n        },\n\n        /* TEAMS API */\n\n        /**\n         * List the teams of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listTeams: function (eventId) {\n          return helpers\n            .teamsApiCall(eventId, 'get', '/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Add a group of teams to an event\n         * @param {Number} eventId   The id of the event to add the teams to\n         * @param {Object} teamsData An object containing the informations about the teams we want to create\n         */\n        addGroupTeams: function (eventId, teamsData) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/add_group_teams/' + models.currentUser.uuid, teamsData)\n            .then(helpers.expect200);\n        },\n\n        /* MATCHES API */\n\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createMatchesCalendar: function (eventId) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/match/create_calendar/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * List the matches of an event for a given day\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatches: function (eventId, day) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/day/' + day + '/matches/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        }\n\n      };\n\n      return frispoApi;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Error Manager.\n   * Handles common HTTP error messages\n   */\n  .factory('errorManager', function (toastr, $log, $state, $q, longTermMemory, models) {\n    var errorManager = function(err) {\n      // log every errors\n      $log.error(err);\n\n      // Unwrap HTTP errors and take actions if needed\n      if(angular.isObject(err) && err.status){\n        switch(err.status){\n          case 401:\n            $state.go('main.logout');\n            err = err.data;\n            break;\n          case 403:\n            $state.go('main.home');\n            err = err.data;\n            break;\n          case 422:\n            err = err.data;\n            break;\n          case 404:\n            err = err.data;\n            break;\n          case 413:\n            err = 'Il file che stai cercando di caricare è troppo grande';\n            break;\n          case -1:\n            err = 'Il server non è raggiungibile o non sei connesso ad Internet';\n            break;\n          default:\n            break;\n        }\n      }\n\n      var getErrorString = function (err) {\n        if(angular.isString(err)){\n          return err;\n        }\n        else if(angular.isObject(err) && (err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error)){\n          return getErrorString(err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error );\n        }\n        else if(angular.isArray(err)){\n          var myErr = [];\n          for (var i = 0; i < err.length; i++) {\n            myErr[i] = getErrorString(err[i]);\n          }\n          return getErrorString(myErr.join('<br>'));\n        }\n        // Don't manage different kinds of error\n        else{\n          longTermMemory.oblivion(); // Forget everything. We don't want the app to be broken forever!\n          models.reset(); // Reset all the models. We don't want the app to be broken forever!\n          return 'Si è verificato un errore imprevisto. Si prega di riprovare più tardi.';\n        }\n      }\n\n      toastr.error(getErrorString(err), 'Errore');\n\n      return $q.reject(err);\n    };\n\n    return errorManager;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('datepicker', datepicker);\n\n  /** @ngInject */\n  function datepicker() {\n    var directive = {\n      restrict: 'A',\n      link: datepickerLink,\n      scope: {\n        datepicker: '@',\n        model: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function datepickerLink(scope, el) {\n      scope.watchInput = function () {\n        scope.$watch('model', function () {\n          scope.drp.elementChanged();\n        });\n      }\n\n      if(scope.datepicker === 'range'){\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY') + ' -> ' + picker.endDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n      else{\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          singleDatePicker: true,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('compareTo', compareTo);\n\n  /** @ngInject */\n  function compareTo() {\n    var directive = {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=compareTo'\n      },\n      link: compareToLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function compareToLink(scope, element, attrs, ngModel) {\n      ngModel.$validators.compareTo = function (modelvalue) {\n        return modelvalue == scope.otherModelValue;\n      }\n      scope.$watch('otherModelValue', function () {\n        ngModel.$validate();\n      })\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * User models manager\n   */\n   .factory('users', function (frispoApi, errorManager, models, longTermMemory, resPipe, toastr, $state, $q, ezfb, $log) {\n\n      var users = {\n        /**\n         * Register a new user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        register: function (userData) {\n          return frispoApi\n            .register(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email;\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(function (res) {\n              $log.info('Frispo registration');\n              return res;\n            })\n            .catch(errorManager);\n        },\n\n        /**\n         * Login a user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        login: function (userData) {\n          return frispoApi\n            .login(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email; // Add the email from the input as it's missing from the response\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Logout a user\n         * @param  {Object} userData an object containing the user data\n         * @return {Promise}          a promise that will be fullfilled after the logout\n         */\n        logout: function (userData) {\n          if(userData.loggedIn){\n            return frispoApi\n              .logout(models.currentUser)\n              .then(function (res) {\n                toastr.success('Succesfully logged out', 'Logout');\n                $log.info('Frispo logout');\n                return res;\n              })\n              .catch(errorManager)\n              .finally(function() {\n                models.currentUser = {};\n                longTermMemory.forget('currentUser');\n                $state.go('main.login');\n              })\n              .then(function () {\n                ezfb.logout();\n              });\n          }\n          return $q.resolve(userData);\n        },\n\n        /**\n         * Login a user to frispo's server using the facebook login() response data\n         * @param  {Object} facebookData The object returned by the Facebook SDK after a succesful login\n         * @return {Promise}             A promise fulfilled with the authentication data for the user,\n         */\n        loginFacebook: function (facebookData) {\n          return frispoApi\n            .loginFacebook(facebookData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged in\n         * @param  {Object} userData The object containing the user data\n         * @return {Object}          The same userData, useful for promise chaining\n         */\n        onLoggedIn: function (userData) {\n          toastr.success(\"Benvenuto, \" + (userData.displayName) + \"!\", \"Accesso effettuato\")\n          if($state.current.name === 'main.login' || $state.current.name === 'main.register'){\n            $state.go('main.admin.dashboard');\n          }\n          $log.info('Frispo login');\n          return userData;\n        },\n\n        /**\n         * Backup user data and setup the anonymous user for testing purposes\n         */\n        setAnonymousUser: function (res) {\n          models.bkp =  {\n            uuid: models.currentUser.uuid,\n            accessToken: models.currentUser.accessToken\n          }\n          models.currentUser.uuid = 'anonimo';\n          models.currentUser.accessToken = '4e66c966e021918f0b088ddc929847f7'\n          return $q.resolve(res);\n        },\n\n        /**\n         * Restore user backup\n         */\n        unsetAnonymousUser: function (res) {\n          models.currentUser.uuid = models.bkp.uuid;\n          models.currentUser.accessToken = models.bkp.accessToken;\n          delete models.bkp;\n          return $q.resolve(res);\n        }\n      };\n\n      return users;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('teams', function (frispoApi, errorManager, resPipe, $q, models, utils) {\n\n      var teams = {\n        /**\n         * List the teams of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listTeams(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeams)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        /**\n         * Create a group of teams and add it to an event\n         */\n        addGroup: function (teamsData) {\n          return frispoApi\n            .addGroupTeams(models.currentEvent.evenId, teamsData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from a team form into an teamsData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the teamsData object\n         */\n        form2Teams: function (formData) {\n          var teamsData = { extra: [] };\n          angular.forEach(formData.teams, function (team) {\n            var teamData = {};\n            var teamTime = utils.str2Time(team.time);\n            if(team.captain) teamData.team_captain = team.captain;\n            if(teamTime) teamData.team_time = teamTime;\n            if(team.name) teamData.team_name = team.name;\n            if(team.phone) teamData.team_mobile_phone = team.phone;\n            if(team.place) teamData.team_place = team.place;\n            if(team.round) teamData.team_groups = team.round;\n            if(team.desc) teamData.team_description = team.desc;\n            teamsData.extra.push(teamData);\n          });\n          return $q.resolve(teamsData);\n        }\n      };\n\n      return teams;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n  * Models cache\n  */\n  .factory('models', function (longTermMemory) {\n\n    var models = {\n       reset: function () {\n         models.events = longTermMemory.remember('events') || [];\n         models.regions = longTermMemory.remember('regions') || [];\n         models.currentUser = longTermMemory.remember('currentUser') || {};\n         models.currentEvent = longTermMemory.remember('currentEvent') || undefined;\n       }\n    };\n\n    models.reset();\n\n    return models;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Matches models manager\n   */\n   .factory('matches', function (frispoApi, errorManager, resPipe, models) {\n\n      var matches = {\n\n        /**\n         * Create a matches calendar for an event\n         */\n        createCalendar: function (eventId) {\n          return frispoApi\n            .createMatchesCalendar(eventId)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the matches for a day of an event\n         */\n        list: function (day) {\n          return frispoApi\n            .listMatches(models.currentEvent.evenId, day)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMatches)\n            .then(resPipe.memorizeCurrentEvent)\n            .catch(errorManager);\n        }\n      };\n\n      return matches;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('events', function (frispoApi, errorManager, resPipe, $q, utils) {\n\n      var events = {\n        /**\n         * Show all events\n         */\n         list: function () {\n          return frispoApi\n            .listEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateEvents)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a new event\n         */\n        create: function (eventData) {\n          return frispoApi\n            .createEvent(eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show an event\n         */\n        show: function (eventId) {\n          return frispoApi\n            .showEvent(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroy: function (event) {\n          return frispoApi\n            .destroyEvent(event)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return event;\n            })\n            .then(resPipe.removeEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        /**\n         * Update an event\n         */\n        update: function (eventId, eventData) {\n          return frispoApi\n            .updateEvent(eventId, eventData)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return events.show(eventId);\n            })\n            .catch(errorManager);\n        },\n\n        /**\n        * List the active regions\n        */\n        listRegions: function () {\n          return frispoApi\n            .listRegions()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateRegions)\n            .then(resPipe.memorizeRegions)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from an event form into an eventData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the eventData object\n         */\n        form2Event: function (formData) {\n          var eventData = {};\n          var dateRange = utils.str2Date(formData.dates);\n          if(angular.isDefined(formData.name)) eventData.even_name = formData.name;\n          if(angular.isDefined(formData.desc)) eventData.even_description = formData.desc;\n          if(angular.isDefined(formData.email)) eventData.even_email = formData.email;\n          if(angular.isDefined(formData.address)) eventData.even_address = formData.address;\n          if(angular.isDefined(formData.type)) eventData.even_type = +formData.type;\n          if(angular.isDefined(formData.organizer)) eventData.even_organize_by = formData.organizer;\n          if(angular.isDefined(formData.formula)) eventData.even_formula = +formData.formula;\n          if(angular.isDefined(formData.telephone)) eventData.even_mobile_phone = formData.telephone;\n          if(angular.isArray(dateRange) && dateRange.length > 0 && dateRange[0]) eventData.even_date_start = dateRange[0];\n          if(angular.isArray(dateRange) && dateRange.length > 1 && dateRange[1]) eventData.even_date_end = dateRange[1];\n          if(formData.region && formData.region.regiId) eventData.regi_id = formData.region.regiId;\n          // TODO: remove this line: it's a mock\n          else eventData.regi_id = 1;\n          if(formData.currentDay && formData.currentDay.matcDayId) eventData.even_day_active = formData.currentDay.matcDayId;\n          return $q.resolve(eventData);\n        }\n\n      };\n\n      return events;\n   });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(\n    $rootScope,\n    uiState,\n    defaultBodyClasses,\n    ezfb,\n    $log,\n    users,\n    models\n  ) {\n      // Bind the uiState to $rootScope as it's used in index.html\n      $rootScope.uiState = uiState;\n\n      // On state change\n      var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess', function (event, toState) {\n        var pms = toState.params || {};\n        uiState.bodyClasses = pms.bodyClasses || defaultBodyClasses;\n      });\n\n      // Subscribe to FB login\n      ezfb.Event.subscribe('auth.login', function (response) {\n        $log.info('Facebook login');\n        users.loginFacebook(response);\n      });\n\n      // Subscribe to FB logout\n      ezfb.Event.subscribe('auth.logout', function () {\n        $log.info('Facebook logout');\n        if(models.currentUser.loggedIn){\n          users.logout();\n        }\n      });\n\n      // Check FB connection\n      ezfb.getLoginStatus();\n\n      // Destroy watchers\n      $rootScope.$on('$destroy', function() {\n        stateChangeSuccess();\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    var requireLoggedIn = function ($timeout, $state, models) {\n      if(!models.currentUser.loggedIn){\n        $timeout(function() {\n          $state.go('main.login');\n        });\n      }\n    };\n\n    $stateProvider\n      .state('main', {\n        abstract: true,\n        templateUrl: 'app/pages/main/main.html'\n      })\n      .state('main.admin', {\n        abstract: true,\n        templateUrl: 'app/pages/admin/admin.html',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.dashboard', {\n        url: '/',\n        templateUrl: 'app/pages/dashboard/dashboard.html',\n        controller: 'DashboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.createEvent', {\n        url: '/create-event',\n        templateUrl: 'app/pages/createEvent/createEvent.html',\n        controller: 'CreateEventController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.events', {\n        url: '/events',\n        templateUrl: 'app/pages/events/events.html',\n        controller: 'EventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.teams', {\n        url: '/teams',\n        templateUrl: 'app/pages/teams/teams.html',\n        controller: 'TeamsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.calendar', {\n        url: '/calendar',\n        templateUrl: 'app/pages/calendar/calendar.html',\n        controller: 'CalendarController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scoreboard', {\n        url: '/scoreboard',\n        templateUrl: 'app/pages/scoreboard/scoreboard.html',\n        controller: 'ScoreboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.news', {\n        url: '/news',\n        templateUrl: 'app/pages/news/news.html',\n        controller: 'NewsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.disciplinary', {\n        url: '/disciplinary',\n        templateUrl: 'app/pages/disciplinary/disciplinary.html',\n        controller: 'DisciplinaryController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.login', {\n        url: '/login',\n        templateUrl: 'app/pages/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition login-page'\n        },\n        onEnter: function ($timeout, $state, models) {\n          if(models.currentUser.loggedIn){\n            $timeout(function () {\n              $state.go('main.admin.dashboard');\n            })\n          }\n        }\n      })\n      .state('main.register', {\n        url: '/register',\n        templateUrl: 'app/pages/register/register.html',\n        controller: 'RegisterController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition register-page'\n        },\n        onEnter: function ($timeout, $state, models) {\n          if(models.currentUser.loggedIn){\n            $timeout(function () {\n              $state.go('main.admin.dashboard');\n            })\n          }\n        }\n      })\n      .state('main.logout', {\n        url: '/logout',\n        onEnter: function(frispoApi, $state, toastr, models, longTermMemory, users) {\n          users.logout(models.currentUser);\n        }\n      });\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('defaultBodyClasses', 'skin-green fixed sidebar-mini')\n    .constant('usersApiUrl', 'http://52.50.82.14:9763/FrispoUsers/1.0.0/api/users/1.0.0/frispo/base/0/users')\n    .constant('eventsApiUrl', 'https://52.50.82.14:8243/api/events/1.0.0/frispo/base/0')\n    .constant('teamsApiUrl', 'https://52.50.82.14:8243/api/teams/1.0.0/football/base/0')\n    .constant('matchesApiUrl', 'https://52.50.82.14:8243/api/matches/1.0.0/football/base/0')\n    .constant('consumerKey', 'K9khQffyZfMXjF6fEIN1GflFDToa')\n    .constant('consumerSecret', 'uBRbkCgAtVmw8f_5qTYYcqAO7iMa');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $animateProvider, $locationProvider, ezfbProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Animate only elements with class \"animate\"\n    $animateProvider.classNameFilter(/animate/);\n\n    // Set options for toastr\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = false;\n    toastrConfig.progressBar = false;\n\n    //Removes '#' from the URL\n    $locationProvider.html5Mode(true);\n    $locationProvider.hashPrefix('!');\n\n    // Configure facebook\n    ezfbProvider.setLocale('it_IT');\n    ezfbProvider.setInitParams({\n      appId: '1025958327498737'\n    });\n  }\n\n})();\n\nangular.module(\"frispo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/frispoFooter/frispoFooter.html\",\"<footer class=main-footer><div class=\\\"pull-right hidden-xs\\\"><b>Version</b> 1.0.0</div><strong>Copyright © 2014-2016 <a href=http://andreaciaccia.it>Andrea Ciaccia</a>.</strong> All rights reserved.</footer>\");\n$templateCache.put(\"app/components/frispoHeader/frispoHeader.html\",\"<header class=main-header><a ui-sref=main.admin.dashboard class=logo><!-- mini logo for sidebar mini 50x50 pixels --> <span class=logo-mini><b>F</b>O</span><!-- logo for regular state and mobile devices --> <span class=logo-lg><b>Frispo</b></span></a><nav class=\\\"navbar navbar-static-top\\\" role=navigation><!-- Sidebar toggle button--> <a href=# class=sidebar-toggle data-toggle=offcanvas role=button><span class=sr-only>Toggle navigation</span> </a><!-- Navbar Right Menu --><div class=navbar-custom-menu><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown user user-menu\\\"><a href=# class=dropdown-toggle data-toggle=dropdown aria-expanded=false><span class=hidden-xs>{{ header.models.currentUser.displayName }}</span></a><ul class=dropdown-menu><!-- User image --><li class=user-header><img src=assets/images/angular.png class=img-circle alt=\\\"User Image\\\"><p>{{ header.models.currentUser.displayName }}</p></li><!-- Menu Footer--><li class=user-footer><div class=pull-left><a href=main.admin.profile class=\\\"btn btn-default btn-flat\\\">Profile</a></div><div class=pull-right><a ui-sref=main.logout class=\\\"btn btn-default btn-flat\\\">Sign out</a></div></li></ul></li></ul></div></nav></header>\");\n$templateCache.put(\"app/components/frispoSidebar/frispoSidebar.html\",\"<div class=main-sidebar><!-- Inner sidebar --><div class=sidebar><!-- Sidebar Menu --><ul class=sidebar-menu><li class=header>Menu</li><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.dashboard\\'}\\\"><a ui-sref=main.admin.dashboard><i class=\\\"fa fa-tachometer\\\" aria-hidden=true></i><span>Dashboard</span></a></li><li class=treeview><a href=#><i class=\\\"fa fa-futbol-o\\\" aria-hidden=true></i><span>Gestisci</span></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.createEvent\\'}\\\"><a ui-sref=main.admin.createEvent><i class=\\\"fa fa-circle-o\\\"></i> Crea Evento Smart</a></li><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.events\\'}\\\"><a ui-sref=main.admin.events><i class=\\\"fa fa-circle-o\\\"></i> Eventi</a></li><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.teams\\'}\\\"><a ui-sref=main.admin.teams><i class=\\\"fa fa-circle-o\\\"></i> Squadre</a></li><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.calendar\\'}\\\"><a ui-sref=main.admin.calendar><i class=\\\"fa fa-circle-o\\\"></i> Calendario</a></li><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scoreboard\\'}\\\"><a ui-sref=main.admin.scoreboard><i class=\\\"fa fa-circle-o\\\"></i> Classifica</a></li></ul></li><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.news\\'}\\\"><a ui-sref=main.admin.news><i class=\\\"fa fa-newspaper-o\\\"></i> <span>News</span></a></li><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.disciplinary\\'}\\\"><a ui-sref=disciplinary><i class=\\\"fa fa-fire\\\"></i> <span>Disciplinare</span></a><ul class=treeview-menu style=\\\"display: none\\\"><li><a href=pages/layout/top-nav.html><i class=\\\"fa fa-circle-o\\\"></i> Ammoniti</a></li><li><a href=pages/layout/boxed.html><i class=\\\"fa fa-circle-o\\\"></i> Diffidati</a></li><li><a href=pages/layout/fixed.html><i class=\\\"fa fa-circle-o\\\"></i> Squalificati</a></li><li><a href=pages/layout/collapsed-sidebar.html><i class=\\\"fa fa-circle-o\\\"></i> Ammende</a></li></ul></li></ul><!-- /.sidebar-menu --></div><!-- /.sidebar --></div><!-- /.main-sidebar -->\");\n$templateCache.put(\"app/pages/admin/admin.html\",\"<div class=wrapper><frispo-header></frispo-header><frispo-sidebar></frispo-sidebar><div class=content-wrapper><div ui-view></div></div><frispo-footer></frispo-footer></div>\");\n$templateCache.put(\"app/pages/calendar/calendar.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona un evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as (event.evenName + \\' (\\' + event.evenCode + \\')\\') for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona una giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div></div></div><div class=\\\"box-body table-responsive no-padding\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=\\\"table table-hover\\\"><tr><th>Giornata</th><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Girone</th><th>Giocata</th></tr><tr ng-repeat=\\\"match in vm.models.currentEvent.currentDay.matches\\\"><td>Giornata {{ match.matcDayId }}</td><td>{{ match.matcTeamA }}</td><td>{{ match.matcTeamB }}</td><td>{{ match.matcScoreTeamA }}</td><td>{{ match.matcScoreTeamB }}</td><td>{{ match.matcDateMatch }}</td><td>{{ match.matcTime }}</td><td>{{ match.matcNameGroups }}</td><td>{{ match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td></tr></table></div><div ng-show=vm.loading class=overlay><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/createEvent/createEvent.html\",\"<section class=create-event><section class=content-header><h1>Crea un evento <small>&nbsp;{{ vm.wizard | wizardTextProgress }}</small></h1><wizard-progress wizard=vm.wizard></wizard-progress></section><section class=content><wizard-step-box step=1 wizard=vm.wizard title=\\\"Impostazioni evento\\\"><form id=formStep1 name=formStep1 ng-submit=vm.step1Done()><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.name.$dirty && formStep1.name.$invalid}\\\"><label for=formStep1-name>Nome</label><input id=formStep1-name ng-model=vm.step1.name name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=formStep1.name.$dirty ng-messages=formStep1.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.desc.$dirty && formStep1.desc.$invalid}\\\"><label for=formStep1-desc>Descrizione</label><textarea id=formStep1-desc rows=5 ng-model=vm.step1.desc name=desc class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\"></textarea><span ng-show=formStep1.desc.$dirty ng-messages=formStep1.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.address.$dirty && formStep1.address.$invalid}\\\"><label for=formStep1-address>Indirizzo</label><input id=formStep1-address ng-model=vm.step1.address name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo principale dell\\'evento\\\" required> <span ng-show=formStep1.address.$dirty ng-messages=formStep1.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.type.$dirty && formStep1.type.$invalid}\\\"><label for=formStep1-type>Tipologia</label><select id=formStep1-type ng-init=\\\"vm.step1.type = 0\\\" ng-model=vm.step1.type name=type class=form-control><option ng-selected=\\\"vm.step1.type === 0\\\" value=0>Campionato italiana</option><option ng-selected=\\\"vm.step1.type === 1\\\" value=1>Torneo a gironi</option></select><span ng-show=formStep1.type.$dirty ng-messages=formStep1.type.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.organizer.$dirty && formStep1.organizer.$invalid}\\\"><label for=formStep1-organizer>Organizzatore</label><input id=formStep1-organizer ng-model=vm.step1.organizer name=organizer type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'organizzatore\\\" required> <span ng-show=formStep1.organizer.$dirty ng-messages=formStep1.organizer.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.telephone.$dirty && formStep1.telephone.$invalid}\\\"><label for=formStep1-telephone>Telefono organizzatore</label><input id=formStep1-telephone ng-model=vm.step1.telephone name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore\\\" required> <span ng-show=formStep1.telephone.$dirty ng-messages=formStep1.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.email.$dirty && formStep1.email.$invalid}\\\"><label for=formStep1-email>E-mail organizzatore</label><input id=formStep1-email ng-model=vm.step1.email name=email type=email class=form-control placeholder=\\\"Inserisci l\\'indirizzo e-mail dell\\'organizzatore\\\" required> <span ng-show=formStep1.email.$dirty ng-messages=formStep1.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.dates.$dirty && formStep1.dates.$invalid}\\\"><label for=formStep1-dates>Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=formStep1-dates ng-model=vm.step1.dates model=vm.step1.dates name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><!-- /.input group --> <span ng-show=formStep1.dates.$dirty ng-messages=formStep1.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.formula.$dirty && formStep1.formula.$invalid}\\\"><label for=formStep1-formula>Formula</label><select id=formStep1-formula ng-init=\\\"vm.step1.formula = 0\\\" ng-model=vm.step1.formula name=formula class=form-control placeholder=\\\"Inserisci la formula desiderata\\\"><option ng-selected=\\\"vm.step1.formula === 0\\\" value=0>Anadata e ritorno</option><option ng-selected=\\\"vm.step1.formula === 1\\\" value=1>Solo andata</option></select><span ng-show=formStep1.formula.$dirty ng-messages=formStep1.formula.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><!-- /.col --></div><!-- /.row --><div class=pull-right><input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=2 wizard=vm.wizard title=\\\"Aggiungi squadre\\\"><form id=formStep2 name=formStep2 ng-submit=vm.step2Done()><div class=row><div ng-if=\\\"vm.step1.type == \\'1\\' && !vm.forceManualRounds\\\"><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundType.$dirty && formStep2.roundType.$invalid}\\\"><label for=formStep2-roundType>Inserimento Gironi</label><select id=formStep2-roundType ng-init=\\\"vm.step2.roundType = 0\\\" ng-model=vm.step2.roundType name=roundType class=form-control ng-change=vm.initDefaultTeams()><option value=0>Manuale</option><option value=1>Automatico</option></select><span ng-show=formStep2.roundType.$dirty ng-messages=formStep2.roundType.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-if=\\\"vm.step2.roundType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundNumber.$dirty && formStep2.roundNumber.$invalid}\\\"><label for=formStep2-roundNumber>Numero di gironi</label><input id=formStep2-roundNumber ng-model=team.roundNumber name=roundNumber type=text class=form-control placeholder=\\\"Inserisci il numero di gironi dell\\'evento\\\" required> <span ng-show=formStep2.roundNumber.$dirty ng-messages=formStep2.roundNumber.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=clearfix></div><div class=col-sm-6 ng-repeat=\\\"team in vm.step2.teams\\\"><div class=\\\"panel panel-default\\\"><div class=panel-heading>Squadra {{ $index+1 }} <button tabindex=-1 type=button class=close ng-click=vm.removeTeam($index)><span>&times;</span></button></div><div class=panel-body><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'name\\' + ($index+1)].$dirty && formStep2[\\'name\\' + ($index+1)].$invalid}\\\"><label for=formStep2-name{{$index+1}}>Nome</label><input id=formStep2-name{{$index+1}} ng-model=team.name name=name{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome della squadra\\\" required> <span ng-show=\\\"formStep2[\\'name\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'name\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'desc\\' + ($index+1)].$dirty && formStep2[\\'desc\\' + ($index+1)].$invalid}\\\"><label for=formStep2-desc{{$index+1}}>Descrizione</label><input id=formStep2-desc{{$index+1}} ng-model=team.desc name=desc{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'desc\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'desc\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'captain\\' + ($index+1)].$dirty && formStep2[\\'captain\\' + ($index+1)].$invalid}\\\"><label for=formStep2-captain{{$index+1}}>Capitano</label><input id=formStep2-captain{{$index+1}} ng-model=team.captain name=captain{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome del capitano della squadra\\\" required> <span ng-show=\\\"formStep2[\\'captain\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'captain\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'phone\\' + ($index+1)].$dirty && formStep2[\\'phone\\' + ($index+1)].$invalid}\\\"><label for=formStep2-phone{{$index+1}}>Telefono</label><input id=formStep2-phone{{$index+1}} ng-model=team.phone name=phone{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il numero di telefono della squadra\\\" required> <span ng-show=\\\"formStep2[\\'phone\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'phone\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'time\\' + ($index+1)].$dirty && formStep2[\\'time\\' + ($index+1)].$invalid}\\\"><label for=formStep2-time{{$index+1}}>Orario preferito</label><input id=formStep2-time{{$index+1}} ng-model=team.time name=time{{$index+1}} type=text class=form-control timepicker placeholder=\\\"Inserisci l\\'orario preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'time\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'time\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'place\\' + ($index+1)].$dirty && formStep2[\\'place\\' + ($index+1)].$invalid}\\\"><label for=formStep2-place{{$index+1}}>Luogo preferito</label><input id=formStep2-place{{$index+1}} ng-model=team.place name=place{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'place\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'place\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div ng-if=\\\"vm.step2.roundType == 0\\\" class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'round\\' + ($index+1)].$dirty && formStep2[\\'round\\' + ($index+1)].$invalid}\\\"><label for=formStep2-round{{$index+1}}>Girone</label><select id=formStep2-round{{$index+1}} ng-init=\\\"team.round = \\'A\\'\\\" ng-model=team.round name=round{{$index+1}} class=form-control ng-options=\\\"roundName as roundName for roundName in vm.roundNames track by roundName\\\" required></select><span ng-show=\\\"formStep2[\\'round\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'round\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></div><div class=clearfix></div><div class=col-md-6><a role=button ng-click=vm.addTeam() class=\\\"btn btn-default btn-block\\\" ng-show=vm.step2.roundType>Aggiungi Squadra</a></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=3 wizard=vm.wizard title=Riepilogo><form id=formStep3 name=formStep3 ng-submit=vm.submitWizard()><div class=row><div class=col-md-6><div class=form-group><label>Nome</label><p class=form-control-static>{{ vm.step1.name }}</p></div><div class=form-group><label>Descrizione</label><p class=form-control-static>{{ vm.step1.desc }}</p></div><div class=form-group><label>Indirizzo</label><p class=form-control-static>{{ vm.step1.address }}</p></div><div class=form-group><label>Tipologia</label><p class=form-control-static>{{ vm.step1.type == \\'1\\' ? \\'Torneo a gironi\\' : \\'Campionato Italiana\\' }}</p></div><div class=form-group><label>Numero di squadre</label><p class=form-control-static>{{ vm.step2.teams.length }}</p></div></div><div class=col-md-6><div class=form-group><label>Organizzatore</label><p class=form-control-static>{{ vm.step1.organizer }}</p></div><div class=form-group><label>Telefono organizzatore</label><p class=form-control-static>{{ vm.step1.telephone }}</p></div><div class=form-group><label>E-mail organizzatore</label><p class=form-control-static>{{ vm.step1.email }}</p></div><div class=form-group><label>Perioto</label><p class=form-control-static>{{ vm.step1.dates }}</p></div><div class=form-group><label>Formula</label><p class=form-control-static>{{ vm.step1.formula == \\'1\\' ? \\'Solo andata\\' : \\'Andata e Ritorno\\' }}</p></div></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Conferma></div></form></wizard-step-box></section></section>\");\n$templateCache.put(\"app/pages/dashboard/dashboard.html\",\"<div class=dashboard>Dashboard page</div>\");\n$templateCache.put(\"app/pages/disciplinary/disciplinary.html\",\"<div class=disciplinary>disciplinary page</div>\");\n$templateCache.put(\"app/pages/events/events.html\",\"<div class=\\\"content events\\\"><div class=row><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.events.length === 0\\\"><div class=box-header><div class=box-title>Eventi</div></div><div class=box-body>Non sono stati trovati eventi. <a ui-sref=main.admin.createEvent>Creane uno ora</a>.</div></div><div class=\\\"box {{ tableFilter.boxClass }}\\\" ng-repeat=\\\"tableFilter in vm.tableFilters\\\" ng-show=\\\"(vm.models.events | filter:tableFilter.filter).length > 0\\\"><div class=box-header><h3 class=box-title>{{ tableFilter.title }}</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.eventFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat-start=\\\"event in vm.models.events | filter:tableFilter.eventFilter\\\" event-show=event></tr><tr ng-repeat-end event-edit=event></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/login/login.html\",\"<div class=\\\"login login-box\\\"><div class=login-logo><b>Frispo</b></div><!-- /.login-logo --><div class=login-box-body><p class=login-box-msg>Sign in to start your session</p><form id=loginForm name=loginForm ng-submit=vm.login()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.email.$dirty && loginForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=loginForm.email.$dirty ng-messages=loginForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.password.$dirty && loginForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=loginForm.password.$dirty ng-messages=loginForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=row><!-- /.col --><div class=\\\"col-xs-offset-8 col-xs-4\\\"><button ng-disabled=loginForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a ng-click=vm.loginFacebook() class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign in using Facebook</a></div><!-- /.social-auth-links --> <a href=#>I forgot my password</a><br><a ui-sref=main.register class=text-center>Register a new membership</a></div><!-- /.login-box-body --></div>\");\n$templateCache.put(\"app/pages/main/main.html\",\"<div class=animate ui-view></div>\");\n$templateCache.put(\"app/pages/news/news.html\",\"<div class=news>news page</div>\");\n$templateCache.put(\"app/pages/register/register.html\",\"<div class=register-box><div class=register-logo><b>Frispo</b></div><div class=register-box-body><p class=login-box-msg>Register a new membership</p><form id=registerForm name=registerForm ng-submit=vm.register()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.email.$dirty && registerForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=registerForm.email.$dirty ng-messages=registerForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.password.$dirty && registerForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required minlength=8> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=registerForm.password.$dirty ng-messages=registerForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=minlength>La password deve essere lunga almeno 8 caratteri</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.retypePassword.$dirty && registerForm.retypePassword.$invalid}\\\"><input ng-model=vm.user.retypePassword name=retypePassword type=password class=form-control placeholder=\\\"Retype password\\\" required compare-to=vm.user.password> <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span> <span ng-show=registerForm.retypePassword.$dirty ng-messages=registerForm.retypePassword.$error class=help-block role=alert><span ng-message=compareTo>Le due password non coincidono</span></span></div><div class=row><div class=col-xs-8><div class=\\\"checkbox icheck\\\"><label><div class=icheckbox_square-blue aria-checked=false aria-disabled=false style=\\\"position: relative\\\"><input type=checkbox style=\\\"position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; border: 0px; opacity: 0; background: rgb(255, 255, 255)\\\"><ins class=iCheck-helper style=\\\"position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; border: 0px; opacity: 0; background: rgb(255, 255, 255)\\\"></ins></div>I agree to the <a href=#>terms</a></label></div></div><!-- /.col --><div class=col-xs-4><button ng-disabled=registerForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Register</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a href=# class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign up using Facebook</a></div><a ui-sref=main.login class=text-center>I already have a membership</a></div><!-- /.form-box --></div><!-- /.register-box -->\");\n$templateCache.put(\"app/pages/scoreboard/scoreboard.html\",\"<div class=scoreboard>scoreboard page</div>\");\n$templateCache.put(\"app/pages/teams/teams.html\",\"<div class=teams><section class=content-header><h1>Squadre <small>partecipanti</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md3 col-lg-2\\\"><div class=form-group><label for=selectEvent><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as (event.evenName + \\' (\\' + event.evenCode + \\') \\') for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></label></div></div></div></div><div class=\\\"box-body table-responsive no-padding\\\" ng-show=vm.models.currentEvent.teams><table class=\\\"table table-hover\\\"><tr><th>Nome</th><th>Ora gioco</th><th>Campo di gioco</th><th>Nome girone</th></tr><tr ng-repeat=\\\"team in vm.models.currentEvent.teams\\\"><td>{{ team.teamName }}</td><td>{{ team.teamTime }}</td><td>{{ team.teamPlace }}</td><td>{{ team.teamGroups }}</td></tr></table></div></div></div></div></section></div>\");\n$templateCache.put(\"app/components/wizard/wizardProgress/wizardProgress.html\",\"<div class=wizard-progress><i ng-repeat=\\\"i in wizardProgress.range(wizardProgress.wizard.totalSteps) track by $index\\\" class=fa ng-class=\\\"{\\n      \\'fa-circle\\': $index+1 === wizardProgress.wizard.currentStep,\\n      \\'fa-circle-thin\\': $index+1 !== wizardProgress.wizard.currentStep\\n    }\\\">&nbsp;</i></div>\");\n$templateCache.put(\"app/components/wizard/wizardStepBox/wizardStepBox.html\",\"<div class=\\\"wizard-step-box box\\\" ng-class=\\\"{\\'box-success\\': wizardStepBox.active, \\'box-default\\': !wizardStepBox.active}\\\"><div class=\\\"box-header with-border\\\"><h3 class=box-title>{{ wizardStepBox.title }}</h3><div class=\\\"box-tools pull-right hidden\\\"><button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><!-- /.box-header --><div class=box-body><ng-transclude></ng-transclude></div><!-- /.box-body --><div ng-show=\\\"wizardStepBox.active && wizardStepBox.wizard.loading\\\" class=overlay><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><!-- /.box -->\");\n$templateCache.put(\"app/pages/events/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=eventDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Se elimini questo evento, verranno eliminati anche tutti dati relativi alle squadre e alle partite associate.<br>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventDestroy.ok()>Elimina evento</a></div>\");\n$templateCache.put(\"app/pages/events/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=event-edit-form-{{eventEdit.event.evenId}} class=\\\"accordion-body collapse\\\"><form class=event-edit-form name=eventEditForm ng-submit=eventEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.name.$dirty && eventEditForm.name.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-name>Modifica Nome</label><input id=eventEditForm{{eventEdit.event.evenId}}-name ng-model=eventEdit.form.name ng-init=\\\"eventEdit.form.name = eventEdit.event.evenName\\\" name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=eventEditForm.name.$dirty ng-messages=eventEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.desc.$dirty && eventEditForm.desc.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-desc>Modifica Descrizione</label><input id=eventEditForm{{eventEdit.event.evenId}}-desc ng-model=eventEdit.form.desc ng-init=\\\"eventEdit.form.desc = eventEdit.event.evenDescription\\\" name=desc type=text class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\" required> <span ng-show=eventEditForm.desc.$dirty ng-messages=eventEditForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.currentDay.$dirty && eventEditForm.currentDay.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-currentDay>Modifica Giornata Corrente</label><select id=eventEditForm{{eventEdit.event.evenId}}-currentDay ng-model=eventEdit.form.currentDay ng-init=\\\"eventEdit.form.currentDay = eventEdit.event.evenCurrentDay\\\" name=currentDay class=form-control ng-options=\\\"day as day.matcDayName for day in eventEdit.event.matchDays track by day.matcDayId\\\" required></select><span ng-show=eventEditForm.currentDay.$dirty ng-messages=eventEditForm.currentDay.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.dates.$dirty && eventEditForm.dates.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-dates>Modifica Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=eventEditForm{{eventEdit.event.evenId}}-dates ng-model=eventEdit.form.dates model=eventEdit.form.dates ng-init=\\\"eventEdit.form.dates = eventEdit.event.dates\\\" name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><span ng-show=eventEditForm.dates.$dirty ng-messages=eventEditForm.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.address.$dirty && eventEditForm.address.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-address>Modifica Indirizzo</label><input id=eventEditForm{{eventEdit.event.evenId}}-address ng-model=eventEdit.form.address ng-init=\\\"eventEdit.form.address = eventEdit.event.evenAddress\\\" name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo dell\\'evento\\\" required> <span ng-show=eventEditForm.address.$dirty ng-messages=eventEditForm.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.region.$dirty && eventEditForm.region.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-region>Modifica Regione</label><select id=eventEditForm{{eventEdit.event.evenId}}-region ng-model=eventEdit.form.region ng-init=\\\"eventEdit.form.region = eventEdit.event.regions\\\" name=region class=form-control ng-options=\\\"region as region.regiName for region in eventEdit.models.regions track by region.regiId\\\" required></select><span ng-show=eventEditForm.region.$dirty ng-messages=eventEditForm.region.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.telephone.$dirty && eventEditForm.telephone.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-telephone>Modifica Telefono Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-telephone ng-model=eventEdit.form.telephone ng-init=\\\"eventEdit.form.telephone = eventEdit.event.evenMobilePhone\\\" name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.telephone.$dirty ng-messages=eventEditForm.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.email.$dirty && eventEditForm.email.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-email>Modifica E-mail Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-email ng-model=eventEdit.form.email ng-init=\\\"eventEdit.form.email = eventEdit.event.evenEmail\\\" name=email type=text class=form-control placeholder=\\\"Inserisci l\\'e-mail dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.email.$dirty ng-messages=eventEditForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-left><a role=button class=\\\"btn btn-warning\\\" ng-click=eventEdit.recreateCalendar()>Ricrea calendario</a></div><div class=pull-right><div><a role=button class=\\\"btn btn-default\\\" ng-click=eventEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/events/edit/recreateCalendar.html\",\"<div class=modal-header><a role=button class=close ng-click=eventRecreateCalendar.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Tutte le partite e le giornate saranno ricreate. Quelle presenti ora verranno eliminate.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventRecreateCalendar.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventRecreateCalendar.ok()>Ricrea calendario dell\\'evento</a></div>\");\n$templateCache.put(\"app/pages/events/show/show.html\",\"<tr><td>{{ eventShow.event.evenName }}</td><td>{{ eventShow.event.evenTypePretty }}</td><td>{{ eventShow.event.evenFormulaPretty }}</td><td>{{ eventShow.event.regions.regiName }}</td><td>{{ eventShow.event.evenDayActive }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': eventShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=#event-edit-form-{{eventShow.event.evenId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=eventShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");}]);"],"sourceRoot":"/source/"}