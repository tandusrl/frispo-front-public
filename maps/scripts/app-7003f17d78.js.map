{"version":3,"sources":["scripts/app.js"],"names":["angular","module","teamShow","TeamShowController","$uibModal","teams","models","vm","this","destroy","open","templateUrl","controller","controllerAs","windowClass","result","then","res","team","TeamShowLink","scope","el","attrs","hover","$apply","showControls","$inject","directive","restrict","bindToController","replace","link","teamEdit","TeamEditController","$q","setLoading","loading","resolve","unsetLoading","submit","form","form2Team","teamData","update","teamId","show","TeamEditLink","cancel","find","collapse","TeamDestroyController","$uibModalInstance","ok","close","dismiss","TeamCreateController","utils","roundNames","alphabetChars","eventShow","events","EventShowController","event","EventShowLink","element","evenId","on","listRegions","EventRecreateCalendarController","eventEdit","EventEditController","matches","form2Event","eventData","publish","even_stato_evento","unpublish","recreateCalendar","createCalendar","EventEditLink","$watch","newVal","oldVal","isDefined","currentDay","evenCurrentDay","EventDestroyController","matchShow","MatchShowController","match","MatchShowLink","matchEdit","MatchEditController","form2Match","matchData","matchId","scores","matcId","MatchEditLink","MatchDestroyController","DayCreateController","MatchCreateController","wizardStepBox","WizardStepBoxController","WizardStepBoxLink","step","wizard","currentStep","active","first","addClass","hide","AdminLTE","boxWidget","title","transclude","wizardProgress","WizardProgressController","range","n","Array","TeamsController","updateCurrentEvent","currentEvent","i","length","list","createNewTeam","create","ScoreboardController","RegisterController","users","toastr","$state","user","register","success","email","go","NewsController","LoginController","ezfb","login","loginFacebook","EventsController","tableFilters","eventFilter","evenStatoEvento","boxClass","DisciplinaryController","DashboardController","CreateEventController","Wizard","resPipe","$log","totalSteps","startFromStep","forceManualRounds","initDefaultTeams","step2","addTeam","roundType","push","name","round","removeTeam","index","error","splice","step1Done","step1","type","next","submitStep1","info","step2Done","submitStep2","form2Teams","addGroup","step3Done","submitWizard","submitStep3","CalendarController","updateMatchDay","matchDays","matcDayId","createNewMatch","createNewDay","form2Day","createDay","wizardTextProgressFilter","filter","factory","defaults","options","merge","prev","str2Date","str","split","forEach","date","trim","date2Str","dateStart","dateEnd","str2Time","splitted","hm","pmAdd","uiState","timepicker","timepickerLink","showOnHover","linkFunc","visible","target","removeClass","showAnimate","updateVisibility","$filter","longTermMemory","parseResponse","status_code","data","reject","unwrapArray","isArray","camelize","newRes","isObject","v","k","injectUserDefaults","loggedIn","displayName","updateCurrentUser","currentUser","mockAnonymousUser","accessToken","uuid","memorizeCurrentUser","memorize","injectEventsDefaults","evenFormula","evenFormulaPretty","evenType","evenTypePretty","dates","evenDateStart","evenDateEnd","isUndefined","isNumber","evenDayActive","search","evenName","regions","regiName","evenCode","evenSeason","join","sort","a","b","matcProg","updateEvents","removeEvent","memorizeEvents","updateRegions","memorizeRegions","memorizeCurrentEvent","updateMatches","daysChanged","insertMatch","curDay","updateTeams","updateTeam","removeMatch","log","debugger","allowedKeys","key","val","indexOf","localStorage","toJson","remember","fromJson","e","forget","oblivion","clear","frispoSidebar","SidebarController","state","manageMenuEntries","frispoHeader","HeaderController","frispoFooter","$timeout","FooterController","FooterLink","window","trigger","$http","usersApiUrl","eventsApiUrl","teamsApiUrl","matchesApiUrl","consumerKey","consumerSecret","cache","helpers","cacheOrHttp","method","fullUrl","headers","keep","config","toUpperCase","url","promise","err","response","userApiCall","consumer_key","consumer_secret","Authorization","eventsApiCall","teamsApiCall","eventId","matchesApiCall","expect200","status","unwrapData","frispoApi","userData","password","facebookData","facebook_token","authResponse","logout","access_token","anonymous_user","listEvents","createEvent","updateEvent","destroyEvent","showEvent","listTeams","createTeam","destroyTeam","showTeam","addGroupTeams","teamsData","createMatchesCalendar","listMatches","day","updateMatch","createMatch","matchDayId","dayData","destroyMatch","errorManager","getErrorString","isString","full_messages","error_description","errors","msg","myErr","reset","datepicker","datepickerLink","watchInput","drp","elementChanged","daterangepicker","autoUpdateInput","locale","format","separator","ev","picker","model","startDate","endDate","singleDatePicker","compareTo","compareToLink","ngModel","$validators","modelvalue","otherModelValue","$validate","require","onLoggedIn","current","setAnonymousUser","bkp","unsetAnonymousUser","formData","extra","teamTime","time","captain","team_captain","team_time","team_name","phone","team_mobile_phone","place","team_place","team_groups","desc","team_description","undefined","showMatch","matchTime","matchDate","matc_id","teamA","matc_team_id_a","teamB","matc_team_id_b","scoreA","matc_goal_team_a","scoreB","matc_goal_team_b","dateExpected","matc_date_expected","matc_date_match","matc_time","address","matc_address","matc_name_groups","played","value","matc_flg_play","shootoutA","matc_shootout_team_a","shootoutB","matc_shootout_team_b","matc_place","mada_name","mada_description","dateRange","even_name","even_description","even_email","even_address","even_type","organizer","even_organize_by","formula","even_formula","telephone","even_mobile_phone","even_date_start","even_date_end","region","regiId","regi_id","even_day_active","runBlock","$rootScope","defaultBodyClasses","stateChangeSuccess","$on","toState","pms","params","bodyClasses","Event","subscribe","getLoginStatus","run","routerConfig","$stateProvider","$urlRouterProvider","requireLoggedIn","abstract","onEnter","otherwise","constant","malarkey","moment","$logProvider","toastrConfig","$animateProvider","$locationProvider","ezfbProvider","debugEnabled","classNameFilter","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","html5Mode","hashPrefix","setLocale","setInitParams","appId","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,UACN,YACA,YACA,aACA,aACA,YACA,sBACA,SACA,OACA,oBAKN,WACE,YAOA,SAASC,KAiBP,QAASC,GAAmBC,EAAWC,EAAOC,GAC5C,GAAIC,GAAKC,IAETD,GAAGE,QAAU,WAEXL,EAAUM,MACNC,YAAa,uCACbC,WAAY,wBACZC,aAAc,cACdC,YAAa,iBACZC,OACFC,KAAK,SAAUC,GACXA,KAAQ,GACTZ,EAAMI,QAAQF,EAAGW,SAKzBX,EAAGD,OAASA,EAId,QAASa,GAAaC,EAAOC,EAAIC,EAAOf,GACtCc,EAAGE,MACD,WACEH,EAAMI,OAAO,WACXjB,EAAGkB,cAAe,KAGtB,WACEL,EAAMI,OAAO,WACXjB,EAAGkB,cAAe,MA/C1BtB,EAAmBuB,SAAW,YAAa,QAAS,UACpDP,EAAaO,SAAW,QAAS,KAAM,QAAS,KADhD,IAAIC,IACFC,SAAU,KACVjB,YAAa,iCACbC,WAAYT,EACZU,aAAc,WACdgB,kBAAkB,EAClBC,SAAS,EACTC,KAAMZ,EACNC,OACEF,KAAM,aAIV,OAAOS,GAnBT3B,QACGC,OAAO,UACP0B,UAAU,WAAYzB,MA4D3B,WACE,YASA,SAAS8B,KAeP,QAASC,GAAmB3B,EAAQ4B,EAAI7B,GACtC,GAAIE,GAAKC,IAETD,GAAGD,OAASA,EAEZC,EAAG4B,WAAa,SAAUlB,GAExB,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAG+B,aAAe,SAAUrB,GAE1B,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAGgC,OAAS,WACV,MAAOhC,GAAG4B,WAAW5B,EAAGiC,MACrBxB,KAAKX,EAAMoC,WACXzB,KAAK,SAAU0B,GACd,MAAOrC,GAAMsC,OAAOpC,EAAGW,KAAK0B,OAAQF,KAErC1B,KAAK,WACJ,MAAOX,GAAMwC,KAAKtC,EAAGW,KAAK0B,UANvBrC,WAQIA,EAAG+B,eAIlB,QAASQ,GAAa1B,EAAOC,EAAIC,EAAOf,GACtCA,EAAGwC,OAAS,WACV1B,EAAG2B,KAAK,mBAAmBC,SAAS,SA5CxChB,EAAmBP,SAAW,SAAU,KAAM,QAF9C,IAAIC,IACFC,SAAU,KACVjB,YAAa,iCACbC,WAAYqB,EACZpB,aAAc,WACdkB,KAAMe,EACNjB,kBAAkB,EAClBC,SAAS,EACTV,OACEF,KAAM,aAIV,OAAOS,GAnBT3B,QACGC,OAAO,UACP0B,UAAU,WAAYK,MAyD3B,WACE,YAOA,SAASkB,GAAsBC,GAC7B,GAAI5C,GAAKC,IAETD,GAAG6C,GAAK,WACND,EAAkBE,OAAM,IAG1B9C,EAAGwC,OAAS,WACVI,EAAkBG,WAVtBJ,EAAsBxB,SAAW,qBAHjC1B,QACGC,OAAO,UACPW,WAAW,wBAAyBsC,MAgBzC,WACE,YAOA,SAASK,GAAqBJ,EAAmB7C,EAAQkD,GACvD,GAAIjD,GAAKC,IAETD,GAAGkD,WAAaD,EAAME,gBACtBnD,EAAGD,OAASA,EAEZC,EAAG6C,GAAK,WACN7C,EAAG6B,SAAU,EACbe,EAAkBE,MAAM9C,EAAGiC,OAG7BjC,EAAGwC,OAAS,WACVI,EAAkBG,WAbtBC,EAAqB7B,SAAW,oBAAqB,SAAU,SAJ/D1B,QACGC,OAAO,UACPW,WAAW,uBAAwB2C,MAoBxC,WACE,YAaA,SAASI,GAAUC,GAWjB,QAASC,GAAoBvD,EAAQF,GACnC,GAAIG,GAAKC,IAETD,GAAGE,QAAU,WAEXL,EAAUM,MACNC,YAAa,wCACbC,WAAY,yBACZC,aAAc,eACdC,YAAa,iBACZC,OACFC,KAAK,SAAUC,GACXA,KAAQ,GACT2C,EAAOnD,QAAQF,EAAGuD,UAK1BvD,EAAGD,OAASA,EAId,QAASyD,GAAc3C,EAAOC,EAAIC,EAAOf,GACvCc,EAAGE,MACD,WACEH,EAAMI,OAAO,WACXjB,EAAGkB,cAAe,KAGtB,WACEL,EAAMI,OAAO,WACXjB,EAAGkB,cAAe,MAIxBzB,QAAQgE,QAAQ,oBAAsBzD,EAAGuD,MAAMG,QAAQC,GAAG,mBAAoB,WAC5EN,EAAOf,KAAKtC,EAAGuD,MAAMG,QACrBL,EAAOO,YAAY5D,EAAGuD,MAAMG,UA/ChCJ,EAAoBnC,SAAW,SAAU,aACzCqC,EAAcrC,SAAW,QAAS,KAAM,QAAS,KAPjD,IAAIC,IACFC,SAAU,KACVjB,YAAa,kCACbC,WAAYiD,EACZhD,aAAc,YACdgB,kBAAkB,EAClBC,SAAS,EACTC,KAAMgC,EACN3C,OACE0C,MAAO,cAIX,OAAOnC,GAdTgC,EAAUjC,SAAW,UALrB1B,QACGC,OAAO,UACP0B,UAAU,YAAagC,MAgE5B,WACE,YAOA,SAASS,GAAgCjB,GACvC,GAAI5C,GAAKC,IAETD,GAAG6C,GAAK,WACND,EAAkBE,OAAM,IAG1B9C,EAAGwC,OAAS,WACVI,EAAkBG,WALtBc,EAAgC1C,SAAW,qBAR3C1B,QACGC,OAAO,UACPW,WAAW,kCAAmCwD,MAgBnD,WACE,YAgBA,SAASC,KAQP,QAASC,GAAoBhE,EAAQsD,EAAQW,EAASnE,EAAW8B,GAC/D,GAAI3B,GAAKC,IAETD,GAAGD,OAASA,EAEZC,EAAG4B,WAAa,SAAUlB,GAExB,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAG+B,aAAe,SAAUrB,GAE1B,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAGgC,OAAS,WACV,MAAOhC,GAAG4B,WAAW5B,EAAGiC,MACrBxB,KAAK4C,EAAOY,YACZxD,KAAK,SAAUyD,GACd,MAAOb,GAAOjB,OAAOpC,EAAGuD,MAAMG,OAAQQ,KAHnClE,WAKIA,EAAG+B,eAGhB/B,EAAGmE,QAAU,WACX,MAAOnE,GAAG4B,aACPnB,KAAK,WACJ,MAAO4C,GAAOjB,OAAOpC,EAAGuD,MAAMG,QAASU,kBAAmB,MAFvDpE,WAIIA,EAAG+B,eAGhB/B,EAAGqE,UAAY,WACb,MAAOrE,GAAG4B,aACPnB,KAAK,WACJ,MAAO4C,GAAOjB,OAAOpC,EAAGuD,MAAMG,QAASU,kBAAmB,MAFvDpE,WAIIA,EAAG+B,eAGhB/B,EAAGsE,iBAAmB,WACpBzE,EAAUM,MACRC,YAAa,8CACbC,WAAY,kCACZC,aAAc,wBACdC,YAAa,kBACZC,OACFC,KAAK,SAAUC,GACd,MAAGA,MAAQ,EACFV,EAAG4B,WAAW5B,EAAGuD,MAAMG,QAC3BjD,KAAKuD,EAAQO,gBACb9D,KAAK,WACJ,MAAO4C,GAAOf,KAAKtC,EAAGuD,MAAMG,UAHzB1D,WAKIA,EAAG+B,cANhB,UAaN,QAASyC,GAAc3D,EAAOC,EAAIC,EAAOf,GACvCA,EAAGwC,OAAS,WACV1B,EAAG2B,KAAK,mBAAmBC,SAAS,SAGtC7B,EAAM4D,OAAO,iCAAkC,SAAUC,EAAQC,GAC5DlF,QAAQmF,UAAUF,IAAWA,IAAWC,IACzC3E,EAAGiC,KAAK4C,WAAa7E,EAAGuD,MAAMuB,kBA3EpCf,EAAoB5C,SAAW,SAAU,SAAU,UAAW,YAAa,KAT3E,IAAIC,IACFC,SAAU,KACVjB,YAAa,kCACbC,WAAY0D,EACZzD,aAAc,YACdkB,KAAMgD,EACNlD,kBAAkB,EAClBC,SAAS,EACTV,OACE0C,MAAO,cAIX,OAAOnC,GAnBT3B,QACGC,OAAO,UACP0B,UAAU,YAAa0C,MAgG5B,WACE,YAOA,SAASiB,GAAuBnC,GAC9B,GAAI5C,GAAKC,IAETD,GAAG6C,GAAK,WACND,EAAkBE,OAAM,IAG1B9C,EAAGwC,OAAS,WACVI,EAAkBG,WAHtBgC,EAAuB5D,SAAW,qBAVlC1B,QACGC,OAAO,UACPW,WAAW,yBAA0B0E,MAgB1C,WACE,YAkBA,SAASC,KAMP,QAASC,GAAoBpF,EAAWmE,EAASjE,GAC/C,GAAIC,GAAKC,IAETD,GAAGE,QAAU,WAEXL,EAAUM,MACNC,YAAa,0CACbC,WAAY,yBACZC,aAAc,eACdC,YAAa,iBACZC,OACFC,KAAK,SAAUC,GACXA,KAAQ,GACTsD,EAAQ9D,QAAQF,EAAGkF,UAK3BlF,EAAGD,OAASA,EAId,QAASoF,GAActE,EAAOC,EAAIC,EAAOf,GACvCc,EAAGE,MACD,WACEH,EAAMI,OAAO,WACXjB,EAAGkB,cAAe,KAGtB,WACEL,EAAMI,OAAO,WACXjB,EAAGkB,cAAe,MApC1B+D,EAAoB9D,SAAW,YAAa,UAAW,UACvDgE,EAAchE,SAAW,QAAS,KAAM,QAAS,KAZjD,IAAIC,IACFC,SAAU,KACVjB,YAAa,oCACbC,WAAY4E,EACZ3E,aAAc,YACdgB,kBAAkB,EAClBC,SAAS,EACTC,KAAM2D,EACNtE,OACEqE,MAAO,cAIX,OAAO9D,GAnBT3B,QACGC,OAAO,UACP0B,UAAU,YAAa4D,MA4D5B,WACE,YAoBA,SAASI,KAIP,QAASC,GAAoBtF,EAAQ4B,EAAIqC,EAASf,GAChD,GAAIjD,GAAKC,IAETD,GAAGD,OAASA,EAEZC,EAAG4B,WAAa,SAAUlB,GAExB,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAG+B,aAAe,SAAUrB,GAE1B,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAGgC,OAAS,WACV,MAAOhC,GAAG4B,WAAW5B,EAAGiC,MACrBxB,KAAKuD,EAAQsB,YACb7E,KAAK,SAAU8E,GACd,MAAOvB,GAAQ5B,OAAOmD,KAEvB9E,KAAK,WACJ,MAAOuD,GAAQ1B,KAAKtC,EAAGkF,MAAMM,WAN1BxF,WAQIA,EAAG+B,eAGhB/B,EAAGyF,OAASxC,EAAMwC,SAElBzF,EAAGiC,MAASuD,QAASxF,EAAGkF,MAAMQ,QAGhC,QAASC,GAAc9E,EAAOC,EAAIC,EAAOf,GACvCA,EAAGwC,OAAS,WACV1B,EAAG2B,KAAK,mBAAmBC,SAAS,SArCxC2C,EAAoBlE,SAAW,SAAU,KAAM,UAAW,QAb1D,IAAIC,IACFC,SAAU,KACVjB,YAAa,oCACbC,WAAYgF,EACZ/E,aAAc,YACdkB,KAAMmE,EACNrE,kBAAkB,EAClBC,SAAS,EACTV,OACEqE,MAAO,cAIX,OAAO9D,GAnBT3B,QACGC,OAAO,UACP0B,UAAU,YAAagE,MA6D5B,WACE,YAOA,SAASQ,GAAuBhD,GAC9B,GAAI5C,GAAKC,IAETD,GAAG6C,GAAK,WACND,EAAkBE,OAAM,IAG1B9C,EAAGwC,OAAS,WACVI,EAAkBG,WACtB6C,EAAuBzE,SAAW,qBAdlC1B,QACGC,OAAO,UACPW,WAAW,yBAA0BuF,MAgB1C,WACE,YAOA,SAASC,GAAoBjD,EAAmB7C,GAC9C,GAAIC,GAAKC,IAETD,GAAGD,OAASA,EAEZC,EAAG6C,GAAK,WACN7C,EAAG6B,SAAU,EACbe,EAAkBE,MAAM9C,EAAGiC,OAG7BjC,EAAGwC,OAAS,WACVI,EAAkBG,WADtB8C,EAAoB1E,SAAW,oBAAqB,UAfpD1B,QACGC,OAAO,UACPW,WAAW,sBAAuBwF,MAmBvC,WACE,YAOA,SAASC,GAAsBlD,EAAmB7C,EAAQkD,GACxD,GAAIjD,GAAKC,IAETD,GAAGyF,OAASxC,EAAMwC,SAClBzF,EAAGD,OAASA,EAEZC,EAAG6C,GAAK,WACN7C,EAAG6B,SAAU,EACbe,EAAkBE,MAAM9C,EAAGiC,OAG7BjC,EAAGwC,OAAS,WACVI,EAAkBG,WADtB+C,EAAsB3E,SAAW,oBAAqB,SAAU,SAhBhE1B,QACGC,OAAO,UACPW,WAAW,wBAAyByF,MAoBzC,WACE,YAOA,SAASC,KAmBP,QAASC,MAGT,QAASC,GAAkBpF,EAAOC,EAAIC,EAAOf,GACxCA,EAAGkG,OAASlG,EAAGmG,OAAOC,YACvBpG,EAAGqG,QAAS,GAGZvF,EAAG2B,KAAK,oBAAoB6D,QAAQC,SAAS,iBAC7CzF,EAAG2B,KAAK,aAAa6D,QAAQE,QAG/B3F,EAAM4D,OAAO,mCAAoC,SAAUC,EAAQC,GAC9DD,IAAWC,IAEXD,IAAW1E,EAAGkG,MAASlG,EAAGqG,OAKrB3B,IAAW1E,EAAGkG,MAAQlG,EAAGqG,SAC/BrG,EAAGqG,QAAS,EACZ5G,QAAQgE,QAAQgD,SAASC,UAAUhE,SAAS5B,EAAG2B,KAAK,oBANpDzC,EAAGqG,QAAS,EACZ5G,QAAQgE,QAAQgD,SAASC,UAAUhE,SAAS5B,EAAG2B,KAAK,sBAnC1D,GAAIrB,IACFC,SAAU,IACVjB,YAAa,yDACbC,WAAY2F,EACZ1F,aAAc,gBACdgB,kBAAkB,EAClBT,OACEsF,OAAQ,IACRD,KAAM,IACNS,MAAO,KAETnF,KAAMyE,EACNW,YAAY,EAGd,OAAOxF,GArBT3B,QACGC,OAAO,UACP0B,UAAU,gBAAiB2E,MAoDhC,WACE,YAOA,SAASc,KAeP,QAASC,KACP,GAAI9G,GAAKC,IAETD,GAAG+G,MAAQ,SAAUC,GACnB,MAAO,IAAIC,OAAMD,IAlBrB,GAAI5F,IACFC,SAAU,IACVjB,YAAa,2DACbC,WAAYyG,EACZxG,aAAc,iBACdgB,kBAAkB,EAClBT,OACEsF,OAAQ,KAIZ,OAAO/E,GAjBT3B,QACGC,OAAO,UACP0B,UAAU,iBAAkByF,MA6BjC,WACE,YAOA,SAASK,GAAgBnH,EAAQsD,EAAQvD,EAAO6B,EAAI9B,GAClD,GAAIG,GAAKC,IACTD,GAAGD,OAASA,EAGZC,EAAGmH,mBAAqB,WAEtB,GAAIpH,EAAOqH,aAAX,CAGA,IAAK,GAAIC,GAAI,EAAGA,EAAItH,EAAOsD,OAAOiE,OAAQD,IACxC,GAAGtH,EAAOsD,OAAOgE,GAAG3D,SAAW3D,EAAOqH,aAAa1D,OAAO,CACxD3D,EAAOqH,aAAerH,EAAOsD,OAAOgE,EACpC,OAIJ,MAAOrH,GACJ4B,WAAW7B,EAAOqH,aAAa1D,QAC/BjD,KAAKX,EAAMyH,MAFPvH,WAGIA,EAAG+B,gBAGhB/B,EAAG4B,WAAa,SAAUlB,GAExB,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAG+B,aAAe,SAAUrB,GAE1B,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAGwH,cAAgB,WACjB3H,EAAUM,MACNC,YAAa,qCACbC,WAAY,uBACZC,aAAc,aACdC,YAAa,kBACZC,OACFC,KAAK,SAAUC,GACXjB,QAAQmF,UAAUlE,IACnBV,EAAG4B,WAAWlB,GACXD,KAAKX,EAAMoC,WACXzB,KAAKX,EAAM2H,QACXhH,KAAKX,EAAMyH,MAHdvH,WAIWA,EAAG+B,iBAKtBsB,EACGkE,OACA9G,KAAKT,EAAGmH,oBAzCbD,EAAgB/F,SAAW,SAAU,SAAU,QAAS,KAAM,aAjB9D1B,QACGC,OAAO,UACPW,WAAW,kBAAmB6G,MA4DnC,WACE,YAOA,SAASQ,MALTjI,QACGC,OAAO,UACPW,WAAW,uBAAwBqH,MAOxC,WACE,YAOA,SAASC,GAAmBC,EAAOC,EAAQC,GACzC,GAAI9H,GAAKC,IAETD,GAAG+H,KAAO/H,EAAG+H,SAEb/H,EAAGgI,SAAW,WACZJ,EACGI,SAAShI,EAAG+H,MACZtH,KAAK,SAAUC,GACdmH,EAAOI,QAAQvH,EAAIwH,MAAQ,0CAA2C,yBACtEJ,EAAOK,GAAG,2BAGlBR,EAAmBxG,SAAW,QAAS,SAAU,UAlBjD1B,QACGC,OAAO,UACPW,WAAW,qBAAsBsH,MAmBtC,WACE,YAOA,SAASS,MALT3I,QACGC,OAAO,UACPW,WAAW,iBAAkB+H,MAOlC,WACE,YAOA,SAASC,GAAgBT,EAAOC,EAAQC,EAAQQ,GAC9C,GAAItI,GAAKC,IAETD,GAAG+H,KAAO/H,EAAG+H,SAGb/H,EAAGuI,MAAQ,WACTX,EAAMW,MAAMvI,EAAG+H,OAIjB/H,EAAGwI,cAAgB,WACjBF,EAAKC,MAAM,MAAM1H,MAAO,0BAE5BwH,EAAgBlH,SAAW,QAAS,SAAU,SAAU,QAnBxD1B,QACGC,OAAO,UACPW,WAAW,kBAAmBgI,MAoBnC,WACE,YAOA,SAASI,GAAiB1I,EAAQsD,GAChC,GAAIrD,GAAKC,IAGTD,GAAGD,OAASA,EAGZC,EAAG0I,eAGCC,aAAeC,gBAAiB,KAChCjC,MAAO,wBACPkC,SAAU,gBAGVF,aAAeC,gBAAiB,KAChCjC,MAAO,oBACPkC,SAAU,gBAKdxF,EAAOkE,OAPTkB,EAAiBtH,SAAW,SAAU,UApBtC1B,QACGC,OAAO,UACPW,WAAW,mBAAoBoI,MA6BpC,WACE,YAOA,SAASK,MALTrJ,QACGC,OAAO,UACPW,WAAW,yBAA0ByI,MAO1C,WACE,YAOA,SAASC,MALTtJ,QACGC,OAAO,UACPW,WAAW,sBAAuB0I,MAOvC,WACE,YAOA,SAASC,GAAsBC,EAAQ5F,EAAQ6F,EAASrB,EAAQ/H,EAAOkE,EAASmF,EAAMrB,EAAQ/H,EAAQkD,GACpG,GAAIjD,GAAKC,IAGTD,GAAGmG,OAAS,GAAI8C,IAAQG,WAAY,EAAGC,cAAe,IAItDrJ,EAAGsJ,mBAAoB,EAEvBtJ,EAAGkD,WAAaD,EAAME,gBAEtBnD,EAAGuJ,iBAAmB,WAChBvJ,EAAGwJ,MAAM1J,QACXE,EAAGwJ,MAAM1J,SACTE,EAAGyJ,UACHzJ,EAAGyJ,YAIPzJ,EAAGyJ,QAAU,WACRzJ,EAAGwJ,OAAgC,IAAvBxJ,EAAGwJ,MAAME,UACtB1J,EAAGwJ,MAAM1J,MAAM6J,MAAMC,KAAM,KAG3B5J,EAAGwJ,MAAM1J,MAAM6J,MAAMC,KAAM,GAAIC,MAAO,MAI1C7J,EAAG8J,WAAa,SAAUC,GACrB/J,EAAGwJ,MAAM1J,MAAMwH,QAAU,EAC1BO,EAAOmC,MAAM,4CAA8C,oCAG3DhK,EAAGwJ,MAAM1J,MAAMmK,OAAOF,EAAM,IAIhC/J,EAAGkK,UAAY,WACTlK,EAAGwJ,QAAOxJ,EAAGwJ,UAGG,GAAjBxJ,EAAGmK,MAAMC,MACVpK,EAAGwJ,MAAME,UAAY,IACrB1J,EAAGuJ,oBAIGvJ,EAAGsJ,oBACTtJ,EAAGwJ,MAAME,UAAY,IACrB1J,EAAGuJ,oBAGLvJ,EAAGmG,OAAOkE,QAGZrK,EAAGsK,YAAc,WAEf,MADAnB,GAAKoB,KAAK,sBACHlH,EACJY,WAAWjE,EAAGmK,OACd1J,KAAK4C,EAAOoE,SAGjBzH,EAAGwK,UAAY,WACbxK,EAAGmG,OAAOkE,QAGZrK,EAAGyK,YAAc,WAEf,MADAtB,GAAKoB,KAAK,wBACHzK,EACJ4K,WAAW1K,EAAGwJ,OACd/I,KAAKX,EAAM6K,WAGhB3K,EAAG4K,UAAY,WACb5K,EAAG6K,gBAGL7K,EAAG8K,YAAc,WAEf,MADA3B,GAAKoB,KAAK,2BACHvG,EAAQO,eAAexE,EAAOqH,aAAa1D,SAGpD1D,EAAG6K,aAAe,WAChB7K,EAAGmG,OAAOtE,SAAU,EACpB7B,EAAGsK,cACA7J,KAAKT,EAAGyK,aACRhK,KAAKT,EAAG8K,aACRrK,KAAK,WACJqH,EAAOK,GAAG,uBAJdnI,WAMW,WACPA,EAAGmG,OAAOtE,SAAU,KA5E5BmH,EAAsB7H,SAAW,SAAU,SAAU,UAAW,SAAU,QAAS,UAAW,OAAQ,SAAU,SAAU,SArB1H1B,QACGC,OAAO,UACPW,WAAW,wBAAyB2I,MAqGzC,WACE,YAOA,SAAS+B,GAAmBhL,EAAQsD,EAAQW,EAASrC,EAAI9B,EAAWC,GAClE,GAAIE,GAAKC,IACTD,GAAGD,OAASA,EAGZC,EAAGmH,mBAAqB,WAEtB,GAAIpH,EAAOqH,aAAX,CAGA,IAAK,GAAIC,GAAI,EAAGA,EAAItH,EAAOsD,OAAOiE,OAAQD,IACxC,GAAGtH,EAAOsD,OAAOgE,GAAG3D,SAAW3D,EAAOqH,aAAa1D,OAAO,CACxD3D,EAAOqH,aAAerH,EAAOsD,OAAOgE,EACpC,OAIJ,MAAOrH,GACJ4B,WAAW7B,EAAOqH,aAAa1D,QAC/BjD,KAAK4C,EAAOf,MACZ7B,KAAKX,EAAMyH,MACX9G,KAAKT,EAAGgL,gBAJJhL,WAKIA,EAAG+B,gBAIhB/B,EAAGgL,eAAiB,WAElB,GAAIjL,EAAOqH,cAAiBrH,EAAOqH,aAAa6D,WAAsD,IAAzClL,EAAOqH,aAAa6D,UAAU3D,OAA3F,CAKA,GAAIvH,EAAOqH,aAAavC,YAMtB,IAAK,GAAIwC,GAAI,EAAGA,EAAItH,EAAOqH,aAAa6D,UAAU3D,OAAQD,IACxD,GAAGtH,EAAOqH,aAAa6D,UAAU5D,GAAG6D,YAAclL,EAAGD,OAAOqH,aAAavC,WAAWqG,UAAU,CAC5FlL,EAAGD,OAAOqH,aAAavC,WAAa9E,EAAOqH,aAAa6D,UAAU5D,EAClE,YAPJtH,GAAOqH,aAAavC,WAAa9E,EAAOqH,aAAa6D,UAAU,EAYjE,OAAOjL,GACJ4B,aACAnB,KAAKuD,EAAQuD,MAFTvH,WAGIA,EAAG+B,gBAGhB/B,EAAG4B,WAAa,SAAUlB,GAExB,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAG+B,aAAe,SAAUrB,GAE1B,MADAV,GAAG6B,SAAU,EACNF,EAAGG,QAAQpB,IAGpBV,EAAGmL,eAAiB,WAClBtL,EAAUM,MACNC,YAAa,wCACbC,WAAY,wBACZC,aAAc,cACdC,YAAa,kBACZC,OACFC,KAAK,SAAUC,GACXjB,QAAQmF,UAAUlE,IACnBV,EAAG4B,WAAWlB,GACXD,KAAKuD,EAAQsB,YACb7E,KAAKuD,EAAQyD,QACbhH,KAAKuD,EAAQuD,MAHhBvH,WAIWA,EAAG+B,iBAKtB/B,EAAGoL,aAAe,WAChBvL,EAAUM,MACNC,YAAa,4CACbC,WAAY,sBACZC,aAAc,YACdC,YAAa,kBACZC,OACFC,KAAK,SAAUC,GACXjB,QAAQmF,UAAUlE,IACnBV,EAAG4B,WAAWlB,GACXD,KAAKuD,EAAQqH,UACb5K,KAAKuD,EAAQsH,WACb7K,KAAK,SAAUC,MAIfD,KAAKT,EAAGgL,gBAPXhL,WAQWA,EAAG+B,iBAMtBsB,EACGkE,OACA9G,KAAKT,EAAGmH,oBAzFb4D,EAAmB5J,SAAW,SAAU,SAAU,UAAW,KAAM,YAAa,SAtBhF1B,QACGC,OAAO,UACPW,WAAW,qBAAsB0K,MAiHtC,WACE,YAOA,SAASQ,KACP,MAAO,UAASpF,GACd,MAAO,QAAUA,EAAOC,YAAc,OAASD,EAAOiD,YAP1D3J,QACGC,OAAO,UACP8L,OAAO,qBAAsBD,MAalC9L,QAAQC,OAAO,UAIZ+L,QAAQ,SAAU,WACjB,GAAIC,IACFtC,WAAY,EACZC,cAAe,EAGjB,OAAO,UAAiBsC,GACtB1L,KAAK0L,QAAUlM,QAAQmM,MAAMF,EAAUC,GAEvC1L,KAAKmJ,WAAanJ,KAAK0L,QAAQvC,WAC/BnJ,KAAKmG,YAAcnG,KAAK0L,QAAQtC,cAEhCpJ,KAAKoK,KAAO,WACPpK,KAAKmG,YAAcnG,KAAKmJ,YACzBnJ,KAAKmG,eAITnG,KAAK4L,KAAO,WACP5L,KAAKmG,YAAc,GACpBnG,KAAKmG,kBAQf3G,QAAQC,OAAO,UAIZ+L,QAAQ,QAAS,WAChB,GAAIxI,IACF6I,SAAU,SAAUC,GAClB,GAAIA,EAAJ,CAEA,GAAIrL,MACAqG,EAAQgF,EAAIC,MAAM,KAMtB,OALAvM,SAAQwM,QAAQlF,EAAO,SAAUmF,GAC/B,GAAIF,GAAQE,EAAKF,MAAM,IACH,KAAjBA,EAAM1E,QACT5G,EAAIiJ,KAAKqC,EAAM,GAAGG,OAAS,IAAMH,EAAM,GAAGG,OAAS,IAAMH,EAAM,GAAGG,UAElD,IAAfzL,EAAI4G,OACE5G,EAAI,GAGJA,IAGX0L,SAAU,SAAUC,EAAWC,GAC7B,GAAID,EAAJ,CAEA,GAAIL,GAAQK,EAAUL,MAAM,IAC5B,IAAoB,IAAjBA,EAAM1E,OAAT,CACA,GAAI5G,GAAMsL,EAAM,GAAGG,OAAS,IAAMH,EAAM,GAAGG,OAAS,IAAMH,EAAM,GAAGG,MAKnE,OAHGG,KACD5L,GAAQ,OAASuC,EAAMmJ,SAASE,IAE3B5L,KAET6L,SAAU,SAAUR,GAClB,GAAIA,EAAJ,CAEA,GAAIrL,GAAM,KACN8L,EAAWT,EAAII,OAAOH,MAAM,IAChC,IAAsB,GAAnBQ,EAASlF,OAAY,CACtB,GAAImF,GAAKD,EAAS,GAAGL,OAAOH,MAAM,KAC9BU,EAAwB,MAAfF,EAAS,GAAa,GAAK,CACxB,IAAbC,EAAGnF,SACJ5G,GAAQ+L,EAAG,GAAKC,EAAS,IAAMD,EAAG,IAGtC,MAAO/L,KAETyC,cAAe,WACb,OAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAE9GsC,OAAQ,WACN,OAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAI9D,OAAOxC,KAKXxD,QAAQC,OAAO,UAKZ+L,QAAQ,UAAW,WAClB,GAAIkB,KAEJ,OAAOA,KAGX,WACE,YA8BA,SAASC,KAdP,QAASC,GAAehM,EAAOC,GAC7BA,EAAG8L,aAcLC,EAAe1L,SAAW,QAAS,KAvBnC,IAAIC,IACFC,SAAU,IACVG,KAAMqL,EAGR,OAAOzL,GAXT3B,QACGC,OAAO,UACP0B,UAAU,aAAcwL,MAmB7B,WACE,YAOA,SAASE,KAYP,QAASC,GAASlM,EAAOC,GACvB,GAAIkM,IAAU,EACVC,EAASxN,QAAQgE,QAAQ5C,EAAMiM,YAEnCjM,GAAM4D,OAAO,cAAe,WAC1BwI,EAAOC,YAAY,wBAAwBA,YAAY,eAAeA,YAAY,gBAClFD,EAASxN,QAAQgE,QAAQ5C,EAAMiM,aAC/BG,EAAO1G,SAAS,wBACb1F,EAAMsM,aACPF,EAAO1G,SAAS,gBAElB1F,EAAMuM,qBAGRvM,EAAMuM,iBAAmB,WACpBJ,EACDC,EAAOC,YAAY,eAGnBD,EAAO1G,SAAS,gBAIpBzF,EAAGE,MAAM,WACDgM,IACFA,GAAU,EACVnM,EAAMuM,qBAGV,WACKJ,IACDA,GAAU,EACVnM,EAAMuM,sBA3Cd,GAAIhM,IACFC,SAAU,IACVG,KAAMuL,EACNlM,OACEiM,YAAa,IACbK,YAAa,KAIjB,OAAO/L,GAfT3B,QACGC,OAAO,UACP0B,UAAU,cAAe0L,MA0D9BrN,QAAQC,OAAO,UAMZ+L,QAAQ,WAAA,KAAA,UAAA,SAAA,iBAAA,OAAA,QAAW,SAAU9J,EAAI0L,EAAStN,EAAQuN,EAAgBnE,EAAMlG,GACvE,GAAIiG,IAKFqE,cAAe,SAAS7M,GAEtB,OAAQA,EAAI8M,aACV,IAAK,KACH,MAAO9M,GAAI+M,IACb,SACE,MAAO9L,GAAG+L,QAAQ1D,MAAOtJ,EAAIsJ,UAOnC2D,YAAa,SAAUjN,GACrB,MAAGjB,SAAQmO,QAAQlN,IAAuB,IAAfA,EAAI4G,OAAqB5G,EAAI,GACjDA,GAMTmN,SAAU,SAAUnN,GAClB,GAAIoN,EACJ,OAAGrO,SAAQmO,QAAQlN,IACjBoN,KACArO,QAAQwM,QAAQvL,EAAK,SAAUI,GAC7BgN,EAAOnE,KAAKT,EAAQ2E,SAAS/M,MAExBgN,GAEDrO,QAAQsO,SAASrN,IACvBoN,KACArO,QAAQwM,QAAQvL,EAAK,SAASsN,EAAEC,GAC9BH,EAAOT,EAAQ,YAAYY,IAAM/E,EAAQ2E,SAASG,KAE7CF,GAGApN,GAOXwN,mBAAoB,SAAUxN,GAG5B,MAFAA,GAAIyN,UAAW,EACfzN,EAAI0N,YAAc1N,EAAI0N,aAAe1N,EAAIwH,OAASxH,EAAIkJ,MAAQ,eACvDlJ,GAMT2N,kBAAmB,SAAU3N,GAE3B,MADAX,GAAOuO,YAAc5N,EACdA,GAMT6N,kBAAmB,SAAU7N,GAG3B,MAFAA,GAAI8N,YAAc,mCAClB9N,EAAI+N,KAAO,GACJ/N,GAMTgO,oBAAqB,SAAUhO,GAE7B,MADA4M,GAAeqB,SAAS,cAAe5O,EAAOuO,aACvC5N,GAMTkO,qBAAsB,SAAUlO,GAE9B,GAAGjB,QAAQmO,QAAQlN,GAAK,CACtB,GAAIoN,KAIJ,OAHArO,SAAQwM,QAAQvL,EAAK,SAAUI,GAC7BgN,EAAOnE,KAAKT,EAAQ0F,qBAAqB9N,MAEpCgN,EA0BT,GAtBuB,IAApBpN,EAAImO,YACLnO,EAAIoO,kBAAoB,mBACE,IAApBpO,EAAImO,cACVnO,EAAIoO,kBAAoB,eAGN,IAAjBpO,EAAIqO,SACLrO,EAAIsO,eAAiB,sBACE,IAAjBtO,EAAIqO,WACVrO,EAAIsO,eAAiB,oBAGnBtO,EAAIuO,OAASvO,EAAIwO,eAAiBxO,EAAIyO,cACxCzO,EAAIuO,MAAQhM,EAAMmJ,SAAS1L,EAAIwO,cAAexO,EAAIyO,cAIjD1P,QAAQ2P,YAAY1O,EAAIkI,mBACzBlI,EAAIkI,gBAAkB,GAIrBnJ,QAAQ4P,SAAS3O,EAAI4O,gBAAkB7P,QAAQmO,QAAQlN,EAAIuK,WAC5D,IAAK,GAAI5D,GAAI,EAAGA,EAAI3G,EAAIuK,UAAU3D,OAAQD,IACxC,GAAG3G,EAAIuK,UAAU5D,GAAG6D,YAAcxK,EAAI4O,cAAc,CAClD5O,EAAIoE,eAAiBpE,EAAIuK,UAAU5D,EACnC,OAsBN,MAhBA3G,GAAI6O,QACF7O,EAAI8O,SACJ9O,EAAIsO,eACJtO,EAAIoO,kBACJpO,EAAI+O,SAAW/O,EAAI+O,QAAQC,UAAY,GACvChP,EAAIiP,SACJjP,EAAIkP,YACJC,KAAK,KAGJpQ,QAAQmO,QAAQlN,EAAIuK,YACrBvK,EAAIuK,UAAU6E,KAAK,SAAUC,EAAEC,GAC7B,MAAOD,GAAEE,SAAWD,EAAEC,WAInBvP,GAMTwP,aAAc,SAAUxP,GAEtB,MADAX,GAAOsD,OAAS3C,EACTA,GAMTyP,YAAa,SAAUzP,GAErB,GAAI2G,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAItH,EAAOsD,OAAOiE,QACvBvH,EAAOsD,OAAOgE,GAAG3D,SAAWhD,EAAIgD,OADD2D,KASpC,MAHGA,IAAK,GAAKA,EAAItH,EAAOsD,OAAOiE,QAC7BvH,EAAOsD,OAAO4G,OAAO5C,EAAE,GAElB3G,GAMT0P,eAAgB,SAAU1P,GAExB,MADA4M,GAAeqB,SAAS,SAAU5O,EAAOsD,QAClC3C,GAMT2P,cAAe,SAAU3P,GAEvB,MADAX,GAAO0P,QAAU/O,EACVA,GAMT4P,gBAAiB,SAAU5P,GAEzB,MADA4M,GAAeqB,SAAS,UAAW5O,EAAO0P,SACnC/O,GAMTyG,mBAAoB,SAAUzG,GAC5B,GAAGjB,QAAQmO,QAAQ7N,EAAOsD,QACxB,IAAK,GAAIgE,GAAI,EAAGA,EAAItH,EAAOsD,OAAOiE,OAAQD,IACxC,GAAGtH,EAAOsD,OAAOgE,GAAG3D,SAAWhD,EAAIgD,OAGjC,MAFAjE,SAAQmM,MAAM7L,EAAOsD,OAAOgE,GAAI3G,GAChCX,EAAOqH,aAAerH,EAAOsD,OAAOgE,GAC7BtH,EAAOqH,YAKpB,OADArH,GAAOqH,aAAe1G,EACfA,GAMT6P,qBAAsB,SAAU7P,GAE9B,MADA4M,GAAeqB,SAAS,eAAgB5O,EAAOqH,cACxC1G,GAOT8P,cAAe,SAAU9P,GACvB,IAAIX,EAAOqH,eAAiB3H,QAAQmO,QAAQ7N,EAAOqH,aAAa6D,WAAY,MAAOvK,EAEnF,IAAI+P,MAEAC,EAAc,SAAUxL,GAC1B,IAAK,GAAImC,GAAI,EAAGA,EAAItH,EAAOqH,aAAa6D,UAAU3D,OAAQD,IAAK,CAC7D,GAAIsJ,GAAS5Q,EAAOqH,aAAa6D,UAAU5D,EAC3C,IAAGnC,EAAMgG,YAAcyF,EAAOzF,UAAU,CACnCuF,EAAYvL,EAAMgG,UAAU,IAC7ByF,EAAO3M,QAAQ2F,KAAKzE,GAGpByL,EAAO3M,SAAWkB,GAEpBuL,EAAYE,EAAOzF,UAAU,KAAM,CACnC,SAYN,OAPGzL,SAAQmO,QAAQlN,GACjBjB,QAAQwM,QAAQvL,EAAKgQ,GAGrBA,EAAYhQ,GAGPA,GAMTkQ,YAAa,SAAUlQ,GAIrB,MAHGX,GAAOqH,eACRrH,EAAOqH,aAAatH,MAAQY,GAEvBA,GAGTmQ,WAAY,SAAUnQ,GACpB,GAAGX,EAAOqH,cAAgB1G,EAAI2B,QAAU5C,QAAQmO,QAAQ7N,EAAOqH,aAAatH,OAC1E,IAAK,GAAIuH,GAAI,EAAGA,EAAItH,EAAOqH,aAAatH,MAAMwH,OAAQD,IACpD,GAAGtH,EAAOqH,aAAatH,MAAMuH,GAAGhF,SAAW3B,EAAI2B,OAC7C,MAAO5C,SAAQmM,MAAM7L,EAAOqH,aAAatH,MAAMuH,GAAI3G,EAIzD,OAAOA,IAMToJ,WAAY,SAAUpJ,GACpB,IAAIA,EAAI2B,SAAWtC,EAAOqH,eAAiB3H,QAAQmO,QAAQ7N,EAAOqH,aAAatH,OAAQ,MAAOY,EAG9F,IAAI2G,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAItH,EAAOqH,aAAatH,MAAMwH,QACnCvH,EAAOqH,aAAatH,MAAMuH,GAAGhF,SAAW3B,EAAI2B,OADDgF,KAShD,MAHGA,IAAK,GAAKA,EAAItH,EAAOqH,aAAatH,MAAMwH,QACzCvH,EAAOqH,aAAatH,MAAMmK,OAAO5C,EAAE,GAE9B3G,GAMToQ,YAAa,SAAUpQ,GACrB,KAAIA,EAAIgF,QAAW3F,EAAOqH,cAAiBrH,EAAOqH,aAAavC,YAAepF,QAAQmO,QAAQ7N,EAAOqH,aAAavC,WAAWb,UAAU,MAAOtD,EAG9I,IAAI2G,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAItH,EAAOqH,aAAavC,WAAWb,QAAQsD,QAChDvH,EAAOqH,aAAavC,WAAWb,QAAQqD,GAAG3B,SAAWhF,EAAIgF,OADD2B,KAS7D,MAHGA,IAAK,GAAKA,EAAItH,EAAOqH,aAAavC,WAAWb,QAAQsD,QACtDvH,EAAOqH,aAAavC,WAAWb,QAAQiG,OAAO5C,EAAE,GAE3C3G,GAgfTqQ,IAAK,SAAUrQ,GAEb,MADAyI,GAAKoB,KAAK7J,GACHA,GAGTsQ,WAAU,SAAUtQ,GAElB,MAAOA,IAIX,OAAOwI,MAKXzJ,QAAQC,OAAO,UAKZ+L,QAAQ,iBAAkB,WACzB,GAAIwF,IACF,cACA,SACA,UACA,gBAGE3D,GACFqB,SAAU,SAASuC,EAAKC,GACnBF,EAAYG,QAAQF,GAAO,IAI9BG,aAAaH,GAAOzR,QAAQ6R,OAAOH,KAGrCI,SAAU,SAASL,GACjB,GAAGD,EAAYG,QAAQF,GAAO,EAC5B,MAAO,KAGT,KACE,MAAOzR,SAAQ+R,SAASH,aAAaH,IAEvC,MAAMO,GAEJ,aADOJ,cAAaH,GACb,OAIXQ,OAAQ,SAASR,GACf,MAAGD,GAAYG,QAAQF,GAAO,EACrB,gBAGFG,cAAaH,IAGtBS,SAAU,WACRlS,QAAQwM,QAAQgF,EAAa,SAASC,SAC7BG,cAAaH,KAEtBG,aAAaO,SAIjB,OAAOtE,KAGX,WACE,YA+BA,SAASuE,KAZP,QAASC,GAAkB/R,EAAQ+H,GACjC,GAAI9H,GAAKC,IAETD,GAAGD,OAASA,EACZC,EAAG+R,MAAQjK,EAEX9H,EAAGgS,mBACD,yBACA,oBACA,mBACA,sBACA,yBAEJF,EAAkB3Q,SAAW,SAAU,SAxBvC,IAAIC,IACFC,SAAU,IACVjB,YAAa,kDACbC,WAAYyR,EACZxR,aAAc,UACdgB,kBAAkB,EAGpB,OAAOF,GAdT3B,QACGC,OAAO,UACP0B,UAAU,gBAAiByQ,MAiChC,WACE,YAgCA,SAASI,KAbP,QAASC,GAAiBnS,GACxB,GAAIC,GAAKC,IAETD,GAAGD,OAASA,EAWdmS,EAAiB/Q,SAAW,SAzB5B,IAAIC,IACFC,SAAU,IACVjB,YAAa,gDACbC,WAAY6R,EACZ5R,aAAc,SACdgB,kBAAkB,EAGpB,OAAOF,GAdT3B,QACGC,OAAO,UACP0B,UAAU,eAAgB6Q,MAwB/B,WACE,YAkCA,SAASE,GAAaC,GAdpB,QAASC,GAAiBtS,GACxB,GAAIC,GAAKC,IAETD,GAAGD,OAASA,EAGd,QAASuS,KACPF,EAAS,WACP3S,QAAQgE,QAAQ8O,QAAQC,QAAQ,YAOpCH,EAAiBlR,SAAW,SA3B5B,IAAIC,IACFC,SAAU,IACVjB,YAAa,gDACbC,WAAYgS,EACZ/R,aAAc,SACdkB,KAAM8Q,EACNhR,kBAAkB,EAGpB,OAAOF,GAWT+Q,EAAahR,SAAW,YA1BxB1B,QACGC,OAAO,UACP0B,UAAU,eAAgB+Q,MAiC/B1S,QAAQC,OAAO,UAIX+L,QAAQ,aAAA,KAAA,QAAA,cAAA,eAAA,cAAA,gBAAA,cAAA,iBAAA,SAAa,SAAU9J,EAAI8Q,EAAOC,EAAaC,EAAcC,EAAaC,EAAeC,EAAaC,EAAgBhT,GAE5H,GAAIiT,MAGAC,GAUFC,YAAa,SAASC,EAAQC,EAAS3F,EAAM4F,EAASC,GACpD,GAAIpC,GAAMiC,EAASC,GAAW3F,EAAOhO,QAAQ6R,OAAO7D,GAAQ,IAExD8F,IAMJ,IALGJ,IAAQI,EAAOJ,OAASA,EAAOK,eAC/BJ,IAASG,EAAOE,IAAML,GACtB3F,IAAM8F,EAAO9F,KAAOA,GACpB4F,IAASE,EAAOF,QAAUA,IAExBL,EAAM9B,GAAM,CACf,GAAIwC,GACAC,GAAM,CACV,QAAOR,GACL,IAAK,MACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACHO,EAAUjB,EAAMc,EAChB,MACF,SACEI,GAAM,EACND,EAAU/R,EAAG+L,SAGbiG,IACFX,EAAM9B,GAAOwC,EAAAA,WAAgB,SAASE,EAASD,GAI7C,MAHIL,UACKN,GAAM9B,GAEZyC,EAAchS,EAAG+L,OAAOiG,GACxBC,EAAmBA,EAAtB,UAKN,MAAOZ,GAAM9B,IAWf2C,YAAa,SAAUV,EAAQM,EAAKhG,EAAM4F,GAExC,MADAI,GAAMA,GAAO,IACNR,EAAQC,YACbC,EACAT,EAAce,EACdhU,QAAQmM,OACJkI,aAAchB,EACdiB,gBAAiBhB,GAEnBtF,GAEFhO,QAAQmM,OACJoI,cAAe,8BAEjBX,KAaNY,cAAe,SAAUd,EAAQM,EAAKhG,EAAM4F,EAASC,GAEnD,MADAG,GAAMA,GAAO,IACNR,EAAQC,YACbC,EACAR,EAAec,EACfhG,EACAhO,QAAQmM,OACJoI,cAAe,UAAYjU,EAAOuO,YAAYE,aAEhD6E,GAEFC,IAYJY,aAAc,SAAUC,EAAShB,EAAQM,EAAKhG,EAAM4F,GAElD,MADAI,GAAMA,GAAO,IACNR,EAAQC,YACbC,EACAP,EAAc,WAAauB,EAAU,SAAWV,EAChDhG,EACAhO,QAAQmM,OACJoI,cAAe,UAAYjU,EAAOuO,YAAYE,aAEhD6E,KAaNe,eAAgB,SAAUD,EAAShB,EAAQM,EAAKhG,EAAM4F,GAEpD,MADAI,GAAMA,GAAO,IACNR,EAAQC,YACbC,EACAN,EAAgB,UAAYsB,EAAUV,EACtChG,EACAhO,QAAQmM,OACJoI,cAAe,UAAYjU,EAAOuO,YAAYE,aAEhD6E,KASNgB,UAAW,SAAUT,GACnB,MAAuB,OAApBA,EAASU,OACHV,EAASnG,KAGT9L,EAAG+L,OAAOkG,IAIrBW,WAAY,SAAUX,GACpB,MAAOA,GAASnG,OAIhB+G,GAMFxM,SAAU,SAASyM,GACjB,MAAOxB,GACJY,YAAY,OAAQ,WACnB3L,MAAOuM,EAASvM,MAChBwM,SAAUD,EAASC,WAEpBjU,KAAKwS,EAAQoB,YAMlB9L,MAAO,SAASkM,GACd,MAAOxB,GACJY,YAAY,OAAQ,UACnB3L,MAAOuM,EAASvM,MAChBwM,SAAUD,EAASC,WAEpBjU,KAAKwS,EAAQoB,YAMlB7L,cAAe,SAAUmM,GACvB,MAAO1B,GACJY,YAAY,OAAQ,mBAEnBe,eAAgBD,EAAaE,aAAarG,cAI3C/N,KAAKwS,EAAQoB,YAQlBS,OAAQ,SAAUL,GAChB,MAAOxB,GACJY,YAAY,OAAQ,WACnBkB,aAAcN,EAASjG,YACvBwG,eAAgB,YAEjBvU,KAAKwS,EAAQoB,YASlBY,WAAY,WACV,MAAOhC,GACJgB,cAAc,MAAO,WAAalU,EAAOuO,YAAYG,MACrDhO,KAAKwS,EAAQoB,YAOlBa,YAAa,SAAUhR,GACrB,MAAO+O,GACJgB,cAAc,OAAQ,eAAiBlU,EAAOuO,YAAYG,KAAMvK,GAChEzD,KAAKwS,EAAQoB,YAMlBc,YAAa,SAAUhB,EAASjQ,GAC9B,MAAO+O,GACJgB,cAAc,OAAQ,WAAaE,EAAU,SAAWpU,EAAOuO,YAAYG,KAAMvK,GACjFzD,KAAKwS,EAAQoB,YAMlBe,aAAc,SAAUlR,GACtB,MAAO+O,GACJgB,cAAc,SAAU,WAAa/P,EAAUR,OAAS,WAAa3D,EAAOuO,YAAYG,MACxFhO,KAAKwS,EAAQoB,YAOlBgB,UAAW,SAAUlB,GACnB,MAAOlB,GACJgB,cAAc,MAAO,UAAYE,EAAU,IAAMpU,EAAOuO,YAAYG,MACpEhO,KAAKwS,EAAQoB,YAMlBzQ,YAAa,WACX,MAAOqP,GACJgB,cAAc,MAAO,YAAclU,EAAOuO,YAAYG,KAAM,KAAM,MAAM,GACxEhO,KAAKwS,EAAQoB,YASlBiB,UAAW,SAAUnB,GACnB,MAAOlB,GACJiB,aAAaC,EAAS,MAAO,IAAMpU,EAAOuO,YAAYG,MACtDhO,KAAKwS,EAAQoB,YAMlBxD,WAAY,SAAUsD,EAAS9R,EAAQF,GACrC,MAAO8Q,GACJiB,aAAaC,EAAS,OAAQ,IAAM9R,EAAS,SAAWtC,EAAOuO,YAAYG,KAAMtM,GACjF1B,KAAKwS,EAAQoB,YAMlBkB,WAAY,SAAUpB,EAAShS,GAC7B,MAAO8Q,GACJiB,aAAaC,EAAS,OAAQ,QAAUpU,EAAOuO,YAAYG,KAAMtM,GACjE1B,KAAKwS,EAAQoB,YAMlBmB,YAAa,SAAUrB,EAAS9R,GAC9B,MAAO4Q,GACJiB,aAAaC,EAAS,OAAQ,IAAM9R,EAAS,WAAatC,EAAOuO,YAAYG,MAC7EhO,KAAKwS,EAAQoB,YAMlBoB,SAAU,SAAUtB,EAAS9R,GAC3B,MAAO4Q,GACJiB,aAAaC,EAAS,MAAO,IAAM9R,EAAS,IAAMtC,EAAOuO,YAAYG,MACrEhO,KAAKwS,EAAQoB,YAQlBqB,cAAe,SAAUvB,EAASwB,GAChC,MAAO1C,GACJiB,aAAaC,EAAS,OAAQ,oBAAsBpU,EAAOuO,YAAYG,KAAMkH,GAC7ElV,KAAKwS,EAAQoB,YAUlBuB,sBAAuB,SAAUzB,GAC/B,MAAOlB,GACJmB,eAAeD,EAAS,OAAQ,0BAA4BpU,EAAOuO,YAAYG,MAC/EhO,KAAKwS,EAAQoB,YAOlBwB,YAAa,SAAU1B,EAAS2B,GAC9B,MAAO7C,GACJmB,eAAeD,EAAS,MAAO,QAAU2B,EAAM,YAAc/V,EAAOuO,YAAYG,MAChFhO,KAAKwS,EAAQoB,YAMlB0B,YAAa,SAAU5B,EAAS5O,GAC9B,MAAO0N,GACJmB,eAAeD,EAAS,OAAQ,mBAAqBpU,EAAOuO,YAAYG,KAAMlJ,GAC9E9E,KAAKwS,EAAQoB,YAMlB2B,YAAa,SAAU7B,EAAS8B,EAAY1Q,GAC1C,MAAO0N,GACJmB,eAAeD,EAAS,OAAQ,QAAU8B,EAAa,gBAAkBlW,EAAOuO,YAAYG,KAAMlJ,GAClG9E,KAAKwS,EAAQoB,YAMlB/I,UAAW,SAAU6I,EAAS+B,GAC5B,MAAOjD,GACJmB,eAAeD,EAAS,OAAQ,oBAAsBpU,EAAOuO,YAAYG,KAAMyH,GAC/EzV,KAAKwS,EAAQoB,YAMlB8B,aAAc,SAAUhC,EAAS8B,EAAYzQ,GAC3C,MAAOyN,GACJmB,eAAeD,EAAS,OAAQ,cAAgB8B,EAAa,YAAczQ,EAAU,WAAazF,EAAOuO,YAAYG,MACrHhO,KAAKwS,EAAQoB,YAIpB,OAAOG,MAKb/U,QAAQC,OAAO,UAKZ+L,QAAQ,gBAAA,SAAA,OAAA,SAAA,KAAA,iBAAA,SAAgB,SAAU5D,EAAQsB,EAAMrB,EAAQnG,EAAI2L,EAAgBvN,GAC3E,GAAIqW,GAAe,SAASzC,GAK1B,GAHAxK,EAAKa,MAAM2J,GAGRlU,QAAQsO,SAAS4F,IAAQA,EAAIW,OAC9B,OAAOX,EAAIW,QACT,IAAK,KACHxM,EAAOK,GAAG,eACVwL,EAAMA,EAAIlG,IACV,MACF,KAAK,KACH3F,EAAOK,GAAG,aACVwL,EAAMA,EAAIlG,IACV,MACF,KAAK,KACHkG,EAAMA,EAAIlG,IACV,MACF,KAAK,KACHkG,EAAMA,EAAIlG,IACV,MACF,KAAK,KACHkG,EAAM,uDACN,MACF,KAAK,GACHA,EAAM,+DAOZ,GAAI0C,GAAiB,SAAU1C,GAC7B,GAAGlU,QAAQ6W,SAAS3C,GAClB,MAAOA,EAEJ,IAAGlU,QAAQsO,SAAS4F,KAASA,EAAI4C,eAAiB5C,EAAI6C,mBAAqB7C,EAAI8C,QAAU9C,EAAIlG,MAAQkG,EAAI+C,KAAO/C,EAAI3J,OACvH,MAAOqM,GAAe1C,EAAI4C,eAAiB5C,EAAI6C,mBAAqB7C,EAAI8C,QAAU9C,EAAIlG,MAAQkG,EAAI+C,KAAO/C,EAAI3J,MAE1G,IAAGvK,QAAQmO,QAAQ+F,GAAK,CAE3B,IAAK,GADDgD,MACKtP,EAAI,EAAGA,EAAIsM,EAAIrM,OAAQD,IAC9BsP,EAAMtP,GAAKgP,EAAe1C,EAAItM,GAEhC,OAAOgP,GAAeM,EAAM9G,KAAK,SAMjC,MAFAvC,GAAeqE,WACf5R,EAAO6W,QACA,yEAMX,OAFA/O,GAAOmC,MAAMqM,EAAe1C,GAAM,UAE3BhS,EAAG+L,OAAOiG,GAGnB,OAAOyC,MAGX,WACE,YAmCA,SAASS,KAfP,QAASC,GAAejW,EAAOC,GAC7BD,EAAMkW,WAAa,WACjBlW,EAAM4D,OAAO,QAAS,WACpB5D,EAAMmW,IAAIC,oBAIU,UAArBpW,EAAMgW,YACPhW,EAAMmW,IAAMlW,EAAGoW,iBACbC,iBAAiB,EACjBC,QACEC,OAAQ,aACRC,UAAW,UAEZ7J,KAAK,mBACR3M,EAAG6C,GAAG,wBAAyB,SAAU4T,EAAIC,GAC3C3W,EAAMI,OAAO,WACXJ,EAAM4W,MAAQD,EAAOE,UAAUL,OAAO,cAAgB,OAASG,EAAOG,QAAQN,OAAO,kBAGzFvW,EAAG6C,GAAG,yBAA0B,WAC9B9C,EAAMI,OAAO,WACXJ,EAAM4W,MAAQ,OAGlB5W,EAAMkW,eAGNlW,EAAMmW,IAAMlW,EAAGoW,iBACbC,iBAAiB,EACjBS,kBAAkB,EAClBR,QACEC,OAAQ,aACRC,UAAW,UAEZ7J,KAAK,mBACR3M,EAAG6C,GAAG,wBAAyB,SAAU4T,EAAIC,GAC3C3W,EAAMI,OAAO,WACXJ,EAAM4W,MAAQD,EAAOE,UAAUL,OAAO,kBAG1CvW,EAAG6C,GAAG,yBAA0B,WAC9B9C,EAAMI,OAAO,WACXJ,EAAM4W,MAAQ,OAGlB5W,EAAMkW,cA9BVD,EAAe3V,SAAW,QAAS,KA5BnC,IAAIC,IACFC,SAAU,IACVG,KAAMsV,EACNjW,OACEgW,WAAY,IACZY,MAAO,KAIX,OAAOrW,GAfT3B,QACGC,OAAO,UACP0B,UAAU,aAAcyV,MAqE7B,WACE,YAoCA,SAASgB,KAhBP,QAASC,GAAcjX,EAAO4C,EAAS1C,EAAOgX,GAC5CA,EAAQC,YAAYH,UAAY,SAAUI,GACxC,MAAOA,IAAcpX,EAAMqX,iBAE7BrX,EAAM4D,OAAO,kBAAmB,WAC9BsT,EAAQI,cAYZL,EAAc3W,SAAW,QAAS,UAAW,QAAS,UA7BtD,IAAIC,IACFC,SAAU,IACV+W,QAAS,UACTvX,OACEqX,gBAAiB,cAEnB1W,KAAMsW,EAGR,OAAO1W,GAfT3B,QACGC,OAAO,UACP0B,UAAU,YAAayW,MA8B5BpY,QAAQC,OAAO,UAIX+L,QAAQ,SAAA,YAAA,eAAA,SAAA,iBAAA,UAAA,SAAA,SAAA,KAAA,OAAA,OAAS,SAAU+I,EAAW4B,EAAcrW,EAAQuN,EAAgBpE,EAASrB,EAAQC,EAAQnG,EAAI2G,EAAMa,GAE7G,GAAIvB,IAMFI,SAAU,SAAUyM,GAClB,MAAOD,GACJxM,SAASyM,GACThU,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQyE,aACblN,KAAK,SAAUC,GAEd,MADAA,GAAIwH,MAAQuM,EAASvM,MACdxH,IAERD,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQgF,oBACbzN,KAAKyI,EAAQmF,mBACb5N,KAAKyI,EAAQwF,qBACbjO,KAAK,SAAUC,GAEd,MADAyI,GAAKoB,KAAK,uBACH7J,IAdJ8T,SAgBE4B,IAQX7N,MAAO,SAAUkM,GACf,MAAOD,GACJjM,MAAMkM,GACNhU,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQyE,aACblN,KAAK,SAAUC,GAEd,MADAA,GAAIwH,MAAQuM,EAASvM,MACdxH,IAERD,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQgF,oBACbzN,KAAKyI,EAAQmF,mBACb5N,KAAKyI,EAAQwF,qBACbjO,KAAKmH,EAAMyQ,YAZP7D,SAaE4B,IAQXtB,OAAQ,SAAUL,GAChB,MAAGA,GAAStG,SACHqG,EACJM,OAAO/U,EAAOuO,aACd7N,KAAK,SAAUC,GAGd,MAFAmH,GAAOI,QAAQ,yBAA0B,UACzCkB,EAAKoB,KAAK,iBACH7J,IALJ8T,SAOE4B,GAPF5B,WAQI,WACPzU,EAAOuO,eACPhB,EAAeoE,OAAO,eACtB5J,EAAOK,GAAG,gBAEX1H,KAAK,WACJ6H,EAAKwM,WAGJnT,EAAGG,QAAQ2S,IAQpBjM,cAAe,SAAUmM,GACvB,MAAOH,GACJhM,cAAcmM,GACdlU,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQyE,aACblN,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQgF,oBACbzN,KAAKyI,EAAQmF,mBACb5N,KAAKyI,EAAQwF,qBACbjO,KAAKmH,EAAMyQ,YARP7D,SASE4B,IAQXiC,WAAY,SAAU5D,GAMpB,MALA5M,GAAOI,QAAQ,cAAiBwM,EAAS,YAAe,IAAK,uBAClC,eAAxB3M,EAAOwQ,QAAQ1O,MAAiD,kBAAxB9B,EAAOwQ,QAAQ1O,OACxD9B,EAAOK,GAAG,wBAEZgB,EAAKoB,KAAK,gBACHkK,GAMT8D,iBAAkB,SAAU7X,GAO1B,MANAX,GAAOyY,KACL/J,KAAM1O,EAAOuO,YAAYG,KACzBD,YAAazO,EAAOuO,YAAYE,aAElCzO,EAAOuO,YAAYG,KAAO,UAC1B1O,EAAOuO,YAAYE,YAAc,mCAC1B7M,EAAGG,QAAQpB,IAMpB+X,mBAAoB,SAAU/X,GAI5B,MAHAX,GAAOuO,YAAYG,KAAO1O,EAAOyY,IAAI/J,KACrC1O,EAAOuO,YAAYE,YAAczO,EAAOyY,IAAIhK,kBACrCzO,GAAOyY,IACP7W,EAAGG,QAAQpB,IAItB,OAAOkH,MAKbnI,QAAQC,OAAO,UAIX+L,QAAQ,SAAA,YAAA,eAAA,UAAA,KAAA,SAAA,QAAS,SAAU+I,EAAW4B,EAAclN,EAASvH,EAAI5B,EAAQkD,GAEvE,GAAInD,IAIFyH,KAAM,WACJ,MAAOiN,GACJc,UAAUvV,EAAOqH,aAAa1D,QAC9BjD,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQ0H,aACbnQ,KAAKyI,EAAQqH,sBACb9P,KAAKyI,EAAQkH,gBANToE,SAOE4B,IAGX9T,KAAM,SAAUD,GACd,MAAOmS,GACJiB,SAAS1V,EAAOqH,aAAa1D,OAAQrB,GACrC5B,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQyE,aACblN,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQ2H,YACbpQ,KAAKyI,EAAQqH,sBACb9P,KAAKyI,EAAQkH,gBAPToE,SAQE4B,IAGX3O,OAAQ,SAAU9G,GAChB,MAAO6T,GACJe,WAAWxV,EAAOqH,aAAa1D,OAAQ/C,GACvCF,KAAKyI,EAAQqE,eAFTiH,SAGE4B,IAGXhU,OAAQ,SAAUC,EAAQ1B,GACxB,MAAO6T,GACJ3D,WAAW9Q,EAAOqH,aAAa1D,OAAQrB,EAAQ1B,GAC/CF,KAAKyI,EAAQqE,eAFTiH,SAGE4B,IAGXlW,QAAS,SAAUS,GACjB,MAAO6T,GACJgB,YAAYzV,EAAOqH,aAAa1D,OAAQ/C,EAAK0B,QAC7C5B,KAAKyI,EAAQqE,eACb9M,KAAK,WACJ,MAAOE,KAERF,KAAKyI,EAAQY,YACbrJ,KAAKyI,EAAQqH,sBACb9P,KAAKyI,EAAQkH,gBARToE,SASE4B,IAMXzL,SAAU,SAAUgL,GAClB,MAAOnB,GACJkB,cAAc3V,EAAOqH,aAAa1D,OAAQiS,GAC1ClV,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQyE,aACblN,KAAKyI,EAAQ2E,UAJT2G,SAKE4B,IAQX1L,WAAY,SAAUgO,GACpB,GAAI/C,IAAcgD,SAIlB,OAHAlZ,SAAQwM,QAAQyM,EAAS5Y,MAAO,SAAUa,GACxCgV,EAAUgD,MAAMhP,KAAK7J,EAAMoC,UAAUvB,MAEhCgB,EAAGG,QAAQ6T,IAGpBzT,UAAW,SAAUwW,GACnB,GAAIvW,MACAyW,EAAW3V,EAAMsJ,SAASmM,EAASG,KAQvC,OAPGpZ,SAAQmF,UAAU8T,EAASI,WAAU3W,EAAS4W,aAAeL,EAASI,SACtErZ,QAAQmF,UAAUgU,KAAWzW,EAAS6W,UAAYJ,GAClDnZ,QAAQmF,UAAU8T,EAAS9O,QAAOzH,EAAS8W,UAAYP,EAAS9O,MAChEnK,QAAQmF,UAAU8T,EAASQ,SAAQ/W,EAASgX,kBAAoBT,EAASQ,OACzEzZ,QAAQmF,UAAU8T,EAASU,SAAQjX,EAASkX,WAAaX,EAASU,OAClE3Z,QAAQmF,UAAU8T,EAAS7O,SAAQ1H,EAASmX,YAAcZ,EAAS7O,OACnEpK,QAAQmF,UAAU8T,EAASa,QAAOpX,EAASqX,iBAAmBd,EAASa,MACnEpX,GAIX,OAAOrC,MAKbL,QAAQC,OAAO,UAIZ+L,QAAQ,UAAA,iBAAU,SAAU6B,GAE3B,GAAIvN,IACD6W,MAAO,WACL7W,EAAOsD,OAASiK,EAAeiE,SAAS,cACxCxR,EAAO0P,QAAUnC,EAAeiE,SAAS,eACzCxR,EAAOuO,YAAchB,EAAeiE,SAAS,mBAC7CxR,EAAOqH,aAAerH,EAAOsD,OAAOiE,OAAO,GAAKgG,EAAeiE,SAAS,iBAAmBkI,QAMhG,OAFA1Z,GAAO6W,QAEA7W,KAKXN,QAAQC,OAAO,UAIX+L,QAAQ,WAAA,YAAA,eAAA,UAAA,SAAA,QAAA,KAAW,SAAU+I,EAAW4B,EAAclN,EAASnJ,EAAQkD,EAAOtB,GAE5E,GAAIqC,IAKFO,eAAgB,SAAU4P;AACxB,MAAOK,GACJoB,sBAAsBzB,GADlBK,SAEE4B,IAMX7O,KAAM,WACJ,MAAOiN,GACJqB,YAAY9V,EAAOqH,aAAa1D,OAAQ3D,EAAOqH,aAAavC,WAAWqG,WACvEzK,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQsH,eACb/P,KAAKyI,EAAQqH,sBACb9P,KAAKyI,EAAQkH,gBANToE,SAOE4B,IAMXhU,OAAQ,SAAUmD,GAChB,MAAOiP,GACJuB,YAAYhW,EAAOqH,aAAa1D,OAAQ6B,GACxC9E,KAAKyI,EAAQqE,eAFTiH,SAGE4B,IAMX3O,OAAQ,SAAUlC,GAChB,MAAOiP,GACJwB,YAAYjW,EAAOqH,aAAa1D,OAAQ3D,EAAOqH,aAAavC,WAAWqG,UAAW3F,GAClF9E,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQ6H,KAHTyD,SAIE4B,IAMX9K,UAAW,SAAU4K,GACnB,MAAO1B,GACJlJ,UAAUvL,EAAOqH,aAAa1D,OAAQwS,GACtCzV,KAAKyI,EAAQqE,eAFTiH,SAGE4B,IAMXlW,QAAS,SAAUqF,GACjB,MAAOiP,GACJ2B,aAAapW,EAAOqH,aAAa1D,OAAQ3D,EAAOqH,aAAavC,WAAWqG,UAAW3F,EAAUG,QAC7FjF,KAAKyI,EAAQqE,eACb9M,KAAK,WACJ,MAAO8E,KAER9E,KAAKyI,EAAQ4H,aACbrQ,KAAKyI,EAAQqH,sBACb9P,KAAKyI,EAAQkH,gBARToE,SASE4B,IAMV9T,KAAM,SAAUkD,GACd,MAAOgP,GACLkF,UAAU3Z,EAAOqH,aAAa1D,OAAQ8B,GACtC/E,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQyE,aACblN,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQ6M,aACbtV,KAAKyI,EAAQqH,sBACb9P,KAAKyI,EAAQkH,gBAPRoE,SAQC4B,IAQV9Q,WAAY,SAAUoT,GACpB,GAAInT,MACAoU,EAAY1W,EAAMsJ,SAASmM,EAASG,MACpCe,EAAY3W,EAAM6I,SAAS4M,EAASxM,KAexC,OAdGzM,SAAQmF,UAAU8T,EAASlT,WAAUD,EAAUsU,QAAUnB,EAASlT,SAClEkT,EAASoB,OAASra,QAAQmF,UAAU8T,EAASoB,MAAMzX,UAASkD,EAAUwU,eAAiBrB,EAASoB,MAAMzX,QACtGqW,EAASsB,OAASva,QAAQmF,UAAU8T,EAASsB,MAAM3X,UAASkD,EAAU0U,eAAiBvB,EAASsB,MAAM3X,QACtG5C,QAAQmF,UAAU8T,EAASwB,UAAS3U,EAAU4U,iBAAmBzB,EAASwB,QAC1Eza,QAAQmF,UAAU8T,EAAS0B,UAAS7U,EAAU8U,iBAAmB3B,EAAS0B,QAC1E3a,QAAQ6W,SAASoC,EAAS4B,gBAAe/U,EAAUgV,mBAAqB7B,EAAS4B,cACjF7a,QAAQ6W,SAASsD,KAAYrU,EAAUiV,gBAAkBZ,GACzDna,QAAQ6W,SAASqD,KAAYpU,EAAUkV,UAAYd,GACnDla,QAAQ6W,SAASoC,EAASgC,WAAUnV,EAAUoV,aAAejC,EAASgC,SACtEjb,QAAQ6W,SAASoC,EAAS7O,SAAQtE,EAAUqV,iBAAmBlC,EAAS7O,OACxE6O,EAASmC,QAAUpb,QAAQmF,UAAU8T,EAASmC,OAAOC,SAAQvV,EAAUwV,cAAgBrC,EAASmC,OAAOC,OACvGrb,QAAQmF,UAAU8T,EAASsC,aAAYzV,EAAU0V,qBAAuBvC,EAASsC,WACjFvb,QAAQmF,UAAU8T,EAASwC,aAAY3V,EAAU4V,qBAAuBzC,EAASwC,WACjFzb,QAAQ6W,SAASoC,EAASU,SAAQ7T,EAAU6V,WAAa1C,EAASU,OAC9DzX,EAAGG,QAAQyD,IAQpB8F,SAAU,SAAUqN,GAClB,GAAIxC,KAGJ,OAFGzW,SAAQmF,UAAU8T,EAAS9O,QAAOsM,EAAQmF,UAAY3C,EAAS9O,MAC/DnK,QAAQmF,UAAU8T,EAASa,QAAOrD,EAAQoF,iBAAmB5C,EAASa,MAClE5X,EAAGG,QAAQoU,IAIvB,OAAOlS,MAKbvE,QAAQC,OAAO,UAIX+L,QAAQ,UAAA,YAAA,eAAA,UAAA,KAAA,QAAA,SAAU,SAAU+I,EAAW4B,EAAclN,EAASvH,EAAIsB,EAAOlD,GAEvE,GAAIsD,IAIDkE,KAAM,WACL,MAAOiN,GACJS,aACAxU,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQ0F,sBACbnO,KAAKyI,EAAQgH,cACbzP,KAAKyI,EAAQkH,gBANToE,SAOE4B,IAMX3O,OAAQ,SAAUvD,GAChB,MAAOsQ,GACJU,YAAYhR,GACZzD,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQyE,aACblN,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQ0F,sBACbnO,KAAKyI,EAAQ/B,oBACb1G,KAAKyI,EAAQqH,sBAPTiE,SAQE4B,IAMX9T,KAAM,SAAU6R,GACd,MAAOK,GACJa,UAAUlB,GACV1T,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQyE,aACblN,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQ0F,sBACbnO,KAAKyI,EAAQ/B,oBACb1G,KAAKyI,EAAQqH,sBACb9P,KAAKyI,EAAQkH,gBARToE,SASE4B,IAMXlW,QAAS,SAAUqD,GACjB,MAAOiR,GACJY,aAAa7R,GACb9C,KAAKyI,EAAQqE,eACb9M,KAAK,WACJ,MAAO8C,KAER9C,KAAKyI,EAAQiH,aACb1P,KAAKyI,EAAQkH,gBAPToE,SAQE4B,IAMXhU,OAAQ,SAAU+R,EAASjQ,GACzB,MAAOsQ,GACJW,YAAYhB,EAASjQ,GACrBzD,KAAKyI,EAAQqE,eACb9M,KAAK,WACJ,MAAO4C,GAAOf,KAAK6R,KAJhBK,SAME4B,IAMXxS,YAAa,WACX,MAAO4Q,GACJ5Q,cACAnD,KAAKyI,EAAQqE,eACb9M,KAAKyI,EAAQ2E,UACbpN,KAAKyI,EAAQmH,eACb5P,KAAKyI,EAAQoH,iBALTkE,SAME4B,IAQXnS,WAAY,SAAUyU,GACpB,GAAIxU,MACAqX,EAAYtY,EAAM6I,SAAS4M,EAASzJ,MAexC,OAdGxP,SAAQmF,UAAU8T,EAAS9O,QAAO1F,EAAUsX,UAAY9C,EAAS9O,MACjEnK,QAAQmF,UAAU8T,EAASa,QAAOrV,EAAUuX,iBAAmB/C,EAASa,MACxE9Z,QAAQmF,UAAU8T,EAASxQ,SAAQhE,EAAUwX,WAAahD,EAASxQ,OACnEzI,QAAQmF,UAAU8T,EAASgC,WAAUxW,EAAUyX,aAAejD,EAASgC,SACvEjb,QAAQmF,UAAU8T,EAAStO,QAAOlG,EAAU0X,WAAalD,EAAStO,MAClE3K,QAAQmF,UAAU8T,EAASmD,aAAY3X,EAAU4X,iBAAmBpD,EAASmD,WAC7Epc,QAAQmF,UAAU8T,EAASqD,WAAU7X,EAAU8X,cAAgBtD,EAASqD,SACxEtc,QAAQmF,UAAU8T,EAASuD,aAAY/X,EAAUgY,kBAAoBxD,EAASuD,WAC9Exc,QAAQmO,QAAQ2N,IAAcA,EAAUjU,OAAS,GAAKiU,EAAU,KAAIrX,EAAUiY,gBAAkBZ,EAAU,IAC1G9b,QAAQmO,QAAQ2N,IAAcA,EAAUjU,OAAS,GAAKiU,EAAU,KAAIrX,EAAUkY,cAAgBb,EAAU,IACxG7C,EAAS2D,QAAU3D,EAAS2D,OAAOC,OAAQpY,EAAUqY,QAAU7D,EAAS2D,OAAOC,OAE7EpY,EAAUqY,QAAU,EACtB7D,EAAS7T,YAAc6T,EAAS7T,WAAWqG,YAAWhH,EAAUsY,gBAAkB9D,EAAS7T,WAAWqG,WAClGvJ,EAAGG,QAAQoC,IAKtB,OAAOb,MAGb,WACE,YAOA,SAASoZ,GACPC,EACA/P,EACAgQ,EACArU,EACAa,EACAvB,EACA7H,GAGE2c,EAAW/P,QAAUA,CAGrB,IAAIiQ,GAAqBF,EAAWG,IAAI,sBAAuB,SAAUtZ,EAAOuZ,GAC9E,GAAIC,GAAMD,EAAQE,UAClBrQ,GAAQsQ,YAAcF,EAAIE,aAAeN,GAI3CrU,GAAK4U,MAAMC,UAAU,aAAc,SAAUvJ,GAC3CzK,EAAKoB,KAAK,kBACV3C,EAAMY,cAAcoL,KAItBtL,EAAK4U,MAAMC,UAAU,cAAe,WAClChU,EAAKoB,KAAK,mBACPxK,EAAOuO,YAAYH,UACpBvG,EAAMkN,WAKVxM,EAAK8U,iBAGLV,EAAWG,IAAI,WAAY,WACzBD,MAZNH,EAAStb,SAAW,aAAc,UAAW,qBAAsB,OAAQ,OAAQ,QAAS,UA9B5F1B,QACGC,OAAO,UACP2d,IAAIZ,MA6CT,WACE,YAOA,SAASa,GAAaC,EAAgBC,GACpC,GAAIC,GAAkB,SAAUrL,EAAUtK,EAAQ/H,GAC5CA,EAAOuO,YAAYH,UACrBiE,EAAS,WACPtK,EAAOK,GAAG,gBAoChBsV,GAAgBtc,SAAW,WAAY,SAAU,UA/BjDoc,EACGxL,MAAM,QACL2L,YAAU,EACVtd,YAAa,6BAEd2R,MAAM,cACL2L,YAAU,EACVtd,YAAa,6BACbud,QAASF,IAEV1L,MAAM,wBACL0B,IAAK,IACLrT,YAAa,qCACbC,WAAY,sBACZC,aAAc,KACdqd,QAASF,IAEV1L,MAAM,0BACL0B,IAAK,gBACLrT,YAAa,yCACbC,WAAY,wBACZC,aAAc,KACdqd,QAASF,IAEV1L,MAAM,qBACL0B,IAAK,UACLrT,YAAa,+BACbC,WAAY,mBACZC,aAAc,KACdqd,QAASF,IAEV1L,MAAM,oBACL0B,IAAK,SACLrT,YAAa,6BACbC,WAAY,kBACZC,aAAc,KACdqd,QAASF,IAEV1L,MAAM,uBACL0B,IAAK,YACLrT,YAAa,mCACbC,WAAY,qBACZC,aAAc,KACdqd,QAASF,IAEV1L,MAAM,yBACL0B,IAAK,cACLrT,YAAa,uCACbC,WAAY,uBACZC,aAAc,KACdqd,QAASF,IAEV1L,MAAM,mBACL0B,IAAK,QACLrT,YAAa,2BACbC,WAAY,iBACZC,aAAc,KACdqd,QAASF,IAEV1L,MAAM,2BACL0B,IAAK,gBACLrT,YAAa,2CACbC,WAAY,yBACZC,aAAc,KACdqd,QAASF,IAEV1L,MAAM,cACL0B,IAAK,SACLrT,YAAa,6BACbC,WAAY,kBACZC,aAAc,KACd0c,QACEC,YAAa,8BAEfU,SAAA,WAAA,SAAA,SAAS,SAAUvL,EAAUtK,EAAQ/H,GAChCA,EAAOuO,YAAYH,UACpBiE,EAAS,WACPtK,EAAOK,GAAG,8BAKjB4J,MAAM,iBACL0B,IAAK,YACLrT,YAAa,mCACbC,WAAY,qBACZC,aAAc,KACd0c,QACEC,YAAa,iCAEfU,SAAA,WAAA,SAAA,SAAS,SAAUvL,EAAUtK,EAAQ/H,GAChCA,EAAOuO,YAAYH,UACpBiE,EAAS,WACPtK,EAAOK,GAAG,8BAKjB4J,MAAM,eACL0B,IAAK,UACLkK,SAAA,YAAA,SAAA,SAAA,SAAA,iBAAA,QAAS,SAASnJ,EAAW1M,EAAQD,EAAQ9H,EAAQuN,EAAgB1F,GACnEA,EAAMkN,OAAO/U,EAAOuO,iBAG1BkP,EAAmBI,UAAU,KAvF/BN,EAAanc,SAAW,iBAAkB,sBA/B1C1B,QACGC,OAAO,UACP6T,OAAO+J,MA0HZ,WACE,YAEA7d,SACGC,OAAO,UACPme,SAAS,WAAYC,UACrBD,SAAS,SAAUE,QACnBF,SAAS,qBAAsB,iCAC/BA,SAAS,cAAe,iFACxBA,SAAS,eAAgB,2DACzBA,SAAS,cAAe,4DACxBA,SAAS,gBAAiB,8DAC1BA,SAAS,cAAe,gCACxBA,SAAS,iBAAkB,mCAGhC,WACE,YAOA,SAAStK,GAAOyK,EAAcC,EAAcC,EAAkBC,EAAmBC,GAE/EJ,EAAaK,cAAa,GAG1BH,EAAiBI,gBAAgB,WAGjCL,EAAaM,WAAY,EACzBN,EAAaO,QAAU,IACvBP,EAAaQ,cAAgB,kBAC7BR,EAAaS,mBAAoB,EACjCT,EAAaU,aAAc,EAG3BR,EAAkBS,WAAU,GAC5BT,EAAkBU,WAAW,KAG7BT,EAAaU,UAAU,SACvBV,EAAaW,eACXC,MAAO,qBAOXzL,EAAOpS,SAAW,eAAgB,eAAgB,mBAAoB,oBAAqB,gBAjC3F1B,QACGC,OAAO,UACP6T,OAAOA,MA8BZ9T,QAAQC,OAAO,UAAU2d,KAAK,iBAAkB,SAAS4B,GAAiBA,EAAeC,IAAI,gDAAgD,kNAC7ID,EAAeC,IAAI,gDAAgD,kqCACnED,EAAeC,IAAI,kDAAkD,0nEACrED,EAAeC,IAAI,6BAA6B,gLAChDD,EAAeC,IAAI,mCAAmC,y0DACtDD,EAAeC,IAAI,yCAAyC,gyaAC5DD,EAAeC,IAAI,qCAAqC,6CACxDD,EAAeC,IAAI,2CAA2C,mDAC9DD,EAAeC,IAAI,+BAA+B,g1CAClDD,EAAeC,IAAI,6BAA6B,syDAChDD,EAAeC,IAAI,2BAA2B,qCAC9CD,EAAeC,IAAI,2BAA2B,mCAC9CD,EAAeC,IAAI,mCAAmC;AACtDD,EAAeC,IAAI,uCAAuC,+CAC1DD,EAAeC,IAAI,6BAA6B,0wCAChDD,EAAeC,IAAI,2DAA2D,uTAC9ED,EAAeC,IAAI,yDAAyD,ulBAC5ED,EAAeC,IAAI,wCAAwC,siJAC3DD,EAAeC,IAAI,4CAA4C,siDAC/DD,EAAeC,IAAI,0CAA0C,qcAC7DD,EAAeC,IAAI,oCAAoC,2kLACvDD,EAAeC,IAAI,oCAAoC,02BACvDD,EAAeC,IAAI,wCAAwC,qjBAC3DD,EAAeC,IAAI,kCAAkC,6tNACrDD,EAAeC,IAAI,8CAA8C,khBACjED,EAAeC,IAAI,kCAAkC,+nBACrDD,EAAeC,IAAI,qCAAqC,qtHACxDD,EAAeC,IAAI,iCAAiC;AACpDD,EAAeC,IAAI,uCAAuC,kcAC1DD,EAAeC,IAAI,iCAAiC","file":"scripts/app-7003f17d78.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('frispo', [\n      'ngAnimate',\n      'ngCookies',\n      'ngSanitize',\n      'ngMessages',\n      'ui.router',\n      'puigcerber.camelize',\n      'toastr',\n      'ezfb',\n      'ui.bootstrap'\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamShow', teamShow);\n\n  /** @ngInject */\n  function teamShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/show/show.html',\n      controller: TeamShowController,\n      controllerAs: 'teamShow',\n      bindToController: true,\n      replace: true,\n      link: TeamShowLink,\n      scope: {\n        team: '=teamShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamShowController($uibModal, teams, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/teams/destroy/destroy.html',\n            controller: 'TeamDestroyController',\n            controllerAs: 'teamDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              teams.destroy(vm.team);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function TeamShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamEdit', teamEdit);\n\n  /** @ngInject */\n  function teamEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/edit/edit.html',\n      controller: TeamEditController,\n      controllerAs: 'teamEdit',\n      link: TeamEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        team: '=teamEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamEditController(models, $q, teams) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Team)\n          .then(function (teamData) {\n            return teams.update(vm.team.teamId, teamData);\n          })\n          .then(function () {\n            return teams.show(vm.team.teamId);\n          })\n          .finally(vm.unsetLoading);\n      }\n    }\n\n    function TeamEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamDestroyController', TeamDestroyController);\n\n  /** @ngInject */\n  function TeamDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamCreateController', TeamCreateController);\n\n  /** @ngInject */\n  function TeamCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.roundNames = utils.alphabetChars();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventShow', eventShow);\n\n  /** @ngInject */\n  function eventShow(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/show/show.html',\n      controller: EventShowController,\n      controllerAs: 'eventShow',\n      bindToController: true,\n      replace: true,\n      link: EventShowLink,\n      scope: {\n        event: '=eventShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventShowController(models, $uibModal) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/events/destroy/destroy.html',\n            controller: 'EventDestroyController',\n            controllerAs: 'eventDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroy(vm.event);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function EventShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n      angular.element('#event-edit-form-' + vm.event.evenId).on('show.bs.collapse', function () {\n        events.show(vm.event.evenId); // Request additional info about the event\n        events.listRegions(vm.event.evenId); // We need regions\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventRecreateCalendarController', EventRecreateCalendarController);\n\n  /** @ngInject */\n  function EventRecreateCalendarController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventEdit', eventEdit);\n\n  /** @ngInject */\n  function eventEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/edit/edit.html',\n      controller: EventEditController,\n      controllerAs: 'eventEdit',\n      link: EventEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        event: '=eventEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventEditController(models, events, matches, $uibModal, $q) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(events.form2Event)\n          .then(function (eventData) {\n            return events.update(vm.event.evenId, eventData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.publish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 1});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.unpublish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 0});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.recreateCalendar = function () {\n        $uibModal.open({\n          templateUrl: 'app/pages/events/edit/recreateCalendar.html',\n          controller: 'EventRecreateCalendarController',\n          controllerAs: 'eventRecreateCalendar',\n          windowClass: 'modal-warning'\n        }).result\n        .then(function (res) {\n          if(res === true){\n            return vm.setLoading(vm.event.evenId)\n              .then(matches.createCalendar)\n              .then(function () {\n                return events.show(vm.event.evenId);\n              })\n              .finally(vm.unsetLoading);\n          }\n        })\n\n      }\n    }\n\n    function EventEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n\n      scope.$watch('eventEdit.event.evenCurrentDay', function (newVal, oldVal) {\n        if(angular.isDefined(newVal) && newVal !== oldVal){\n          vm.form.currentDay = vm.event.evenCurrentDay;\n        }\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventDestroyController', EventDestroyController);\n\n  /** @ngInject */\n  function EventDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchShow', matchShow);\n\n  /** @ngInject */\n  function matchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/show/show.html',\n      controller: MatchShowController,\n      controllerAs: 'matchShow',\n      bindToController: true,\n      replace: true,\n      link: MatchShowLink,\n      scope: {\n        match: '=matchShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchShowController($uibModal, matches, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/calendar/destroy/destroy.html',\n            controller: 'MatchDestroyController',\n            controllerAs: 'matchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroy(vm.match);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function MatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchEdit', matchEdit);\n\n  /** @ngInject */\n  function matchEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/edit/edit.html',\n      controller: MatchEditController,\n      controllerAs: 'matchEdit',\n      link: MatchEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        match: '=matchEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchEditController(models, $q, matches, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(matches.form2Match)\n          .then(function (matchData) {\n            return matches.update(matchData);\n          })\n          .then(function () {\n            return matches.show(vm.match.matchId);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { matchId: vm.match.matcId };\n    }\n\n    function MatchEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchDestroyController', MatchDestroyController);\n\n  /** @ngInject */\n  function MatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DayCreateController', DayCreateController);\n\n  /** @ngInject */\n  function DayCreateController($uibModalInstance, models) {\n    var vm = this;\n\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchCreateController', MatchCreateController);\n\n  /** @ngInject */\n  function MatchCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.scores = utils.scores();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardStepBox', wizardStepBox);\n\n  /** @ngInject */\n  function wizardStepBox() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardStepBox/wizardStepBox.html',\n      controller: WizardStepBoxController,\n      controllerAs: 'wizardStepBox',\n      bindToController: true,\n      scope: {\n        wizard: '=',\n        step: '=',\n        title: '@'\n      },\n      link: WizardStepBoxLink,\n      transclude: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardStepBoxController() {\n    }\n\n    function WizardStepBoxLink(scope, el, attrs, vm) {\n      if(vm.step === vm.wizard.currentStep){\n        vm.active = true;\n      }\n      else{\n        el.find('.wizard-step-box').first().addClass('collapsed-box');\n        el.find('.box-body').first().hide();\n      }\n\n      scope.$watch('wizardStepBox.wizard.currentStep', function (newVal, oldVal) {\n        if(newVal === oldVal) return;\n        // Activate the box\n        if(newVal === vm.step && !vm.active){\n          vm.active = true;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n        // Deactivate the box\n        else if(newVal !== vm.step && vm.active){\n          vm.active = false;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardProgress', wizardProgress);\n\n  /** @ngInject */\n  function wizardProgress() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardProgress/wizardProgress.html',\n      controller: WizardProgressController,\n      controllerAs: 'wizardProgress',\n      bindToController: true,\n      scope: {\n        wizard: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardProgressController() {\n      var vm = this;\n\n      vm.range = function (n) {\n        return new Array(n);\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamsController', TeamsController);\n\n  /** @ngInject */\n  function TeamsController(models, events, teams, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.events[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(teams.list)                       // List the teams of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewTeam = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/teams/create/create.html',\n          controller: 'TeamCreateController',\n          controllerAs: 'teamCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(teams.form2Team)\n              .then(teams.create)\n              .then(teams.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScoreboardController', ScoreboardController);\n\n  /** @ngInject */\n  function ScoreboardController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController(users, toastr, $state) {\n    var vm = this;\n\n    vm.user = vm.user || {};\n\n    vm.register = function () {\n      users\n        .register(vm.user)\n        .then(function (res) {\n          toastr.success(res.email + \", you have been succesfully registered!\", \"Registration complete\");\n          $state.go('main.admin.dashboard');\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('NewsController', NewsController);\n\n  /** @ngInject */\n  function NewsController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController(users, toastr, $state, ezfb) {\n    var vm = this;\n\n    vm.user = vm.user || {};\n\n    // Login with username and password\n    vm.login = function () {\n      users.login(vm.user);\n    }\n\n    // Login with facebook\n    vm.loginFacebook = function () {\n      ezfb.login(null,{scope: 'email,public_profile'});\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventsController', EventsController);\n\n  /** @ngInject */\n  function EventsController(models, events) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // Create filter objects to split events into published and not published\n    vm.tableFilters = [\n      // published events\n      {\n        eventFilter: { evenStatoEvento: '0' },\n        title: 'Eventi non pubblicati',\n        boxClass: 'box-warning'\n      },\n      {\n        eventFilter: { evenStatoEvento: '1' },\n        title: 'Eventi pubblicati',\n        boxClass: 'box-success'\n      }\n    ];\n\n    // API call\n    events.list();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DisciplinaryController', DisciplinaryController);\n\n  /** @ngInject */\n  function DisciplinaryController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DashboardController', DashboardController);\n\n  /** @ngInject */\n  function DashboardController() {\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CreateEventController', CreateEventController);\n\n  /** @ngInject */\n  function CreateEventController(Wizard, events, resPipe, toastr, teams, matches, $log, $state, models, utils) {\n    var vm = this;\n\n    // Initialize the wizard object\n    vm.wizard = new Wizard({totalSteps: 3, startFromStep: 1});\n\n    // If true, the user have to manually insert the rounds.\n    // If false, the user can choose between \"Inserimento gironi manuale\" and \"Inserimento gironi automatico\".\n    vm.forceManualRounds = true;\n\n    vm.roundNames = utils.alphabetChars();\n\n    vm.initDefaultTeams = function () {\n      if(!vm.step2.teams){\n        vm.step2.teams = [];\n        vm.addTeam();\n        vm.addTeam();\n      }\n    }\n\n    vm.addTeam = function () {\n      if(vm.step2 && vm.step2.roundType === 1){\n        vm.step2.teams.push({name: ''});\n      }\n      else{\n        vm.step2.teams.push({name: '', round: ''});\n      }\n    };\n\n    vm.removeTeam = function (index) {\n      if(vm.step2.teams.length <= 2){\n        toastr.error('E\\' obbligatorio inserire almeno 2 squadre', 'Impossibile rimuovere la squadra');\n      }\n      else{\n        vm.step2.teams.splice(index,1);\n      }\n    }\n\n    vm.step1Done = function () {\n      if(!vm.step2) vm.step2 = {}; // Initialize step2 if needed\n\n      // If not \"Torneo a gironi\"\n      if(vm.step1.type != 1){\n        vm.step2.roundType = '1';\n        vm.initDefaultTeams();\n      }\n\n      // If \"torneo a gironi\" and user can't choose manual or automatic round type\n      else if(vm.forceManualRounds){\n        vm.step2.roundType = '0'; // Manual rounds\n        vm.initDefaultTeams();\n      }\n\n      vm.wizard.next();\n    }\n\n    vm.submitStep1 = function () {\n      $log.info('creando l\\'evento..');\n      return events\n        .form2Event(vm.step1)\n        .then(events.create);\n    }\n\n    vm.step2Done = function () {\n      vm.wizard.next();\n    }\n\n    vm.submitStep2 = function () {\n      $log.info('creando le squadre..');\n      return teams\n        .form2Teams(vm.step2)\n        .then(teams.addGroup);\n    }\n\n    vm.step3Done = function () {\n      vm.submitWizard();\n    }\n\n    vm.submitStep3 = function () {\n      $log.info('creando il calendario..');\n      return matches.createCalendar(models.currentEvent.evenId);\n    }\n\n    vm.submitWizard = function () {\n      vm.wizard.loading = true;\n      vm.submitStep1()\n        .then(vm.submitStep2)\n        .then(vm.submitStep3)\n        .then(function () {\n          $state.go('main.admin.events');\n        })\n        .finally(function () {\n          vm.wizard.loading = false;\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CalendarController', CalendarController);\n\n  /** @ngInject */\n  function CalendarController(models, events, matches, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.events[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call)\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewMatch = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/create/create.html',\n          controller: 'MatchCreateController',\n          controllerAs: 'matchCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Match)\n              .then(matches.create)\n              .then(matches.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    vm.createNewDay = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/create_day/create.html',\n          controller: 'DayCreateController',\n          controllerAs: 'dayCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Day)\n              .then(matches.createDay)\n              .then(function (res) {\n                debugger\n                // TODO: set the new day as current\n              })\n              .then(vm.updateMatchDay)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .filter('wizardTextProgress', wizardTextProgressFilter);\n\n  /** @ngInject */\n  function wizardTextProgressFilter() {\n    return function(wizard) {\n      return 'Step ' + wizard.currentStep + ' di ' + wizard.totalSteps;\n    };\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * A wizard\n   */\n  .factory('Wizard', function () {\n    var defaults = {\n      totalSteps: 1,\n      startFromStep: 1\n    }\n\n    return function Wizard (options) {\n      this.options = angular.merge(defaults, options);\n\n      this.totalSteps = this.options.totalSteps;\n      this.currentStep = this.options.startFromStep;\n\n      this.next = function () {\n        if(this.currentStep < this.totalSteps){\n          this.currentStep++;\n        }\n      }\n\n      this.prev = function () {\n        if(this.currentStep > 1){\n          this.currentStep--;\n        }\n      }\n    };\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Utilities functions.\n   */\n  .factory('utils', function () {\n    var utils = {\n      str2Date: function (str) {\n        if(!str) return;\n\n        var res = [];\n        var range = str.split('->');\n        angular.forEach(range, function (date) {\n          var split = date.split('/');\n          if(split.length !== 3) return;\n          res.push(split[2].trim() + '-' + split[1].trim() + '-' + split[0].trim())\n        })\n        if(res.length === 1){\n          return res[0];\n        }\n        else{\n          return res;\n        }\n      },\n      date2Str: function (dateStart, dateEnd) {\n        if(!dateStart) return;\n\n        var split = dateStart.split('-');\n        if(split.length !== 3) return;\n        var res = split[2].trim() + '/' + split[1].trim() + '/' + split[0].trim();\n\n        if(dateEnd){\n          res +=  ' -> ' + utils.date2Str(dateEnd);\n        }\n        return res;\n      },\n      str2Time: function (str) {\n        if(!str) return;\n\n        var res = null;\n        var splitted = str.trim().split(' ');\n        if(splitted.length == 2){\n          var hm = splitted[0].trim().split(':');\n          var pmAdd = (splitted[1] == 'PM' ? 12 : 0);\n          if(hm.length == 2){\n            res = (+hm[0] + pmAdd) + ':' + hm[1];\n          }\n        }\n        return res;\n      },\n      alphabetChars: function () {\n        return ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n      },\n      scores: function () {\n        return [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\n      }\n    };\n\n    return utils;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * UI state service.\n   * Keep application-wide shared variables\n   */\n  .factory('uiState', function () {\n    var uiState = {};\n\n    return uiState;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('timepicker', timepicker);\n\n  /** @ngInject */\n  function timepicker() {\n    var directive = {\n      restrict: 'A',\n      link: timepickerLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function timepickerLink(scope, el) {\n      el.timepicker();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('showOnHover', showOnHover);\n\n  /** @ngInject */\n  function showOnHover() {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        showOnHover: '@',\n        showAnimate: '='\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var visible = false;\n      var target = angular.element(scope.showOnHover);\n\n      scope.$watch('showOnHover', function () {\n        target.removeClass('show-on-hover-target').removeClass('not-visible').removeClass('show-animate');\n        target = angular.element(scope.showOnHover);\n        target.addClass('show-on-hover-target');\n        if(scope.showAnimate){\n          target.addClass('show-animate');\n        }\n        scope.updateVisibility();\n      })\n\n      scope.updateVisibility = function () {\n        if(visible){\n          target.removeClass('not-visible');\n        }\n        else{\n          target.addClass('not-visible');\n        }\n      }\n\n      el.hover(function() {\n          if(!visible){\n            visible = true;\n            scope.updateVisibility();\n          }\n        },\n        function() {\n          if(visible){\n            visible = false;\n            scope.updateVisibility();\n          }\n        }\n      );\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Response management pipeline.\n   * Utilities to process a response from the moment it arrives to the models update.\n   * To use in a promise chain as a pipeline\n   */\n  .factory('resPipe', function ($q, $filter, models, longTermMemory, $log, utils) {\n    var resPipe = {\n\n      /**\n       * Parse the initial response from the Frispo API\n       */\n      parseResponse: function(res) {\n        // Look for the response status_code\n        switch (res.status_code) {\n          case 200:\n            return res.data;\n          default:\n            return $q.reject({error: res.error});\n        }\n      },\n\n      /**\n       * Unwrap the response from a single element array\n       */\n      unwrapArray: function (res) {\n        if(angular.isArray(res) && res.length === 1) return res[0];\n        return res;\n      },\n\n      /**\n       * Camelize the response\n       */\n      camelize: function (res) {\n        var newRes;\n        if(angular.isArray(res)){\n          newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.camelize(el));\n          })\n          return newRes;\n        }\n        else if(angular.isObject(res)){\n          newRes = {};\n          angular.forEach(res, function(v,k){\n            newRes[$filter('camelize')(k)] = resPipe.camelize(v);\n          });\n          return newRes;\n        }\n        else {\n          return res;\n        }\n      },\n\n      /**\n       * Inject default fields to User objects\n       */\n      injectUserDefaults: function (res) {\n        res.loggedIn = true;\n        res.displayName = res.displayName || res.email || res.name || 'Nome Cognome';\n        return res;\n      },\n\n      /**\n       * Update the current user\n       */\n      updateCurrentUser: function (res) {\n        models.currentUser = res;\n        return res;\n      },\n\n      /**\n       * Mock an anonymous user for testing APIs\n       */\n      mockAnonymousUser: function (res) {\n        res.accessToken = '4e66c966e021918f0b088ddc929847f7';\n        res.uuid = '';\n        return res;\n      },\n\n      /**\n      * Memorize the current user in long term memory\n      */\n      memorizeCurrentUser: function (res) {\n        longTermMemory.memorize('currentUser', models.currentUser);\n        return res;\n      },\n\n      /**\n       * Inject default fields to events\n       */\n      injectEventsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectEventsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify evenFormula\n        if(res.evenFormula === 0)\n          res.evenFormulaPretty = 'Andata e ritorno';\n        else if(res.evenFormula === 1)\n          res.evenFormulaPretty = 'Solo andata';\n\n        // Prettify evenType\n        if(res.evenType === 0)\n          res.evenTypePretty = 'Campionato italiana';\n        else if(res.evenType === 1)\n          res.evenTypePretty = 'Torneo a giorni';\n\n        // Make a dateRangePicker compliant field\n        if(!res.dates && res.evenDateStart && res.evenDateEnd){\n          res.dates = utils.date2Str(res.evenDateStart, res.evenDateEnd);\n        }\n\n        // Initialize a default published status\n        if(angular.isUndefined(res.evenStatoEvento)){\n          res.evenStatoEvento = 0; // Set as unpublished\n        }\n\n        // Initialize the currentDay based on its ID\n        if(angular.isNumber(res.evenDayActive) && angular.isArray(res.matchDays)){\n          for (var i = 0; i < res.matchDays.length; i++) {\n            if(res.matchDays[i].matcDayId === res.evenDayActive){\n              res.evenCurrentDay = res.matchDays[i];\n              break;\n            }\n          }\n        }\n\n        // Make a search field\n        res.search = [\n          res.evenName,\n          res.evenTypePretty,\n          res.evenFormulaPretty,\n          res.regions && res.regions.regiName || '',\n          res.evenCode,\n          res.evenSeason\n        ].join(' ');\n\n        // Sort the match days by prog number\n        if(angular.isArray(res.matchDays)){\n          res.matchDays.sort(function (a,b) {\n            return a.matcProg > b.matcProg;\n          });\n        }\n\n        return res;\n      },\n\n      /**\n       * Update the events\n       */\n      updateEvents: function (res) {\n        models.events = res;\n        return res;\n      },\n\n      /**\n       * Remove an event from the cache\n       */\n      removeEvent: function (res) {\n        // Look for the event in cache\n        var i = -1;\n        for (i=0; i < models.events.length; i++) {\n          if(models.events[i].evenId === res.evenId){\n            break;\n          }\n        }\n        // The event was found -> remove it\n        if(i >= 0 && i < models.events.length){\n          models.events.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Memorize the events user in long term memory\n       */\n      memorizeEvents: function (res) {\n        longTermMemory.memorize('events', models.events);\n        return res;\n      },\n\n      /**\n      * Update the regions\n      */\n      updateRegions: function (res) {\n        models.regions = res;\n        return res;\n      },\n\n      /**\n      * Memorize the regions user in long term memory\n      */\n      memorizeRegions: function (res) {\n        longTermMemory.memorize('regions', models.regions);\n        return res;\n      },\n\n      /**\n       * Update the current event\n       */\n      updateCurrentEvent: function (res) {\n        if(angular.isArray(models.events)){\n          for (var i = 0; i < models.events.length; i++) {\n            if(models.events[i].evenId === res.evenId){\n              angular.merge(models.events[i], res);\n              models.currentEvent = models.events[i];\n              return models.currentEvent;\n            }\n          }\n        }\n        models.currentEvent = res;\n        return res;\n      },\n\n      /**\n      * Memorize the events user in long term memory\n      */\n      memorizeCurrentEvent: function (res) {\n        longTermMemory.memorize('currentEvent', models.currentEvent);\n        return res;\n      },\n\n\n      /**\n       * Update the matches\n       */\n      updateMatches: function (res) {\n        if(!models.currentEvent || !angular.isArray(models.currentEvent.matchDays)) return res;\n\n        var daysChanged = {};\n\n        var insertMatch = function (match) {\n          for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n            var curDay = models.currentEvent.matchDays[i];\n            if(match.matcDayId === curDay.matcDayId){\n              if(daysChanged[match.matcDayId+'']){\n                curDay.matches.push(match);\n              }\n              else{\n                curDay.matches = [match];\n              }\n              daysChanged[curDay.matcDayId+''] = true;\n              break;\n            }\n          }\n        }\n\n        if(angular.isArray(res)){\n          angular.forEach(res, insertMatch);\n        }\n        else{\n          insertMatch(res);\n        }\n\n        return res;\n      },\n\n      /**\n       * Update the teams of current event\n       */\n      updateTeams: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.teams = res;\n        }\n        return res;\n      },\n\n      updateTeam: function (res) {\n        if(models.currentEvent && res.teamId && angular.isArray(models.currentEvent.teams)){\n          for (var i = 0; i < models.currentEvent.teams.length; i++) {\n            if(models.currentEvent.teams[i].teamId === res.teamId){\n              return angular.merge(models.currentEvent.teams[i], res);\n            }\n          }\n        }\n        return res;\n      },\n\n      /**\n       * Remove a team from the cache\n       */\n      removeTeam: function (res) {\n        if(!res.teamId || !models.currentEvent || !angular.isArray(models.currentEvent.teams)) return res;\n\n        // Look for the team in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.teams.length; i++) {\n          if(models.currentEvent.teams[i].teamId === res.teamId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.teams.length){\n          models.currentEvent.teams.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Remove a match from the cache\n       */\n      removeMatch: function (res) {\n        if(!res.matcId || !models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)) return res;\n\n        // Look for the match in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.currentDay.matches.length){\n          models.currentEvent.currentDay.matches.splice(i,1);\n        }\n        return res;\n      },\n\n    //\n    //   /**\n    //    * Inject some default values inside the response\n    //    */\n    //   injectDefaults: function(res) {\n    //     // Parse the model depending of its nature\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           helpers.forEachModel(model, helpers.injectProjectDefaults);\n    //           break;\n    //         case 'users':\n    //         case 'user':\n    //           helpers.forEachModel(model, helpers.injectUserDefaults);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //   * Mark the model as to be reloaded. This allows the resPipe to delete it\n    //   * from cache (if present) and to add it again\n    //   */\n    //   markReload: function (res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, function (m) {\n    //       m._reload = true;\n    //     });\n    //     return res;\n    //   },\n    //\n    //\n    //   /**\n    //   * Mark the model as destroyed. This allows the resPipe to delete it\n    //   * from cache (if present)\n    //   */\n    //   markDestroyed: function (res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, function (m) {\n    //       m._destroyed = true;\n    //     });\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort frames and comments in projects\n    //    */\n    //   sortFramesAndComments: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(angular.isArray(model)){\n    //       angular.forEach(model, function(project) {\n    //         helpers.sortFramesAndCommentsSingle(project);\n    //       });\n    //     }\n    //     else if(model){\n    //       helpers.sortFramesAndCommentsSingle(model);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort frames in cache\n    //    */\n    //   sortFramesCache: function(res) {\n    //     var project = helpers.getRelatedProject(res);\n    //     if(project && project.frames){\n    //       utils.sortByOrder(project.frames);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Sort Comments given order\n    //    */\n    //   sortCommentsCache: function(res) {\n    //     var frame = helpers.getRelatedFrame(res);\n    //     if(frame && frame.comments){\n    //       utils.sortByOrder(frame.comments);\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Update models cache\n    //    */\n    //   updateCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     var project = null;\n    //     var frame = null;\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           res[res._model] = helpers.updateModelCache(models.projects, model);\n    //           break;\n    //         case 'frames':\n    //         case 'frame':\n    //           project = helpers.getRelatedProject(res);\n    //           res[res._model] = helpers.updateModelCache(project.frames, model);\n    //           break;\n    //         case 'comments':\n    //         case 'comment':\n    //           frame = helpers.getRelatedFrame(res);\n    //           if(!frame.comments){\n    //             frame.comments = [];\n    //           }\n    //           res[res._model] = helpers.updateModelCache(frame.comments, model);\n    //           break;\n    //         case 'project_files':\n    //         case 'project_file':\n    //           project = helpers.getRelatedProject(res);\n    //           res[res._model] = helpers.updateModelCache(project.project_files, model);\n    //           break;\n    //         case 'user':\n    //         case 'users':\n    //           res[res._model] = helpers.updateModelCache(models.users, model);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Update models cache\n    //    */\n    //   cleanCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'users':\n    //           models.users = [];\n    //           if(models.currentUser){\n    //             models.users.push(models.currentUser);\n    //           }\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Prune the cache, removing old projects which probably has been deleted\n    //    */\n    //   pruneProjectCache: function(res) {\n    //     if(angular.isArray(res.projects)){\n    //       var ids = [];\n    //       var newCache = [];\n    //       // Remember projects returned by server in the response\n    //       angular.forEach(res.projects, function(project) {\n    //         ids.push(project.id);\n    //       });\n    //       // Keep in cache only allowed projects\n    //       angular.forEach(models.projects, function(project) {\n    //         // If the project was present in response, or if the project is not mine, keep.\n    //         // (Don't keep the project if it's mine but it's not present in response. This means it's been recently deleted)\n    //         if(ids.indexOf(project.id) >= 0 || project.owner.id !== models.currentUser.id){\n    //           newCache.push(project);\n    //         }\n    //       });\n    //       models.projects = newCache; // Replace the cache\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Prune the cache, removing old projects which probably has been deleted\n    //    */\n    //   forcePruneProjectCache: function(res) {\n    //     if(angular.isArray(res.projects)){\n    //       var ids = [];\n    //       var newCache = [];\n    //       // Remember projects returned by server in the response\n    //       angular.forEach(res.projects, function(project) {\n    //         ids.push(project.id);\n    //       });\n    //       // Keep in cache only allowed projects\n    //       angular.forEach(models.projects, function(project) {\n    //         // Keep only the projects that are in response\n    //         if(ids.indexOf(project.id) >= 0){\n    //           newCache.push(project);\n    //         }\n    //       });\n    //       models.projects = newCache; // Replace the cache\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Removes a model from cache\n    //    */\n    //   removeFromCache: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'project_files':\n    //         case 'project_file':\n    //           helpers.forEachModel(model, helpers.removeProjectFileFromCache);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Set the project(s) as mine mocking an owner\n    //    */\n    //   setProjectAsMine: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     helpers.forEachModel(model, helpers.setProjectAsMineSingle);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Set the project given in response as the current project\n    //    */\n    //   setAsCurrentProject: function(res) {\n    //     if(res.project && !angular.isArray(res.project)){\n    //       models.currentProject = res.project;\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //   * Set the user given in response as the current user\n    //   */\n    //   setAsCurrentUser: function (res) {\n    //     if(res.user && !angular.isArray(res.user)){\n    //       models.currentUser = res.user;\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Convert values to a human readable format\n    //    */\n    //   humanize: function(res) {\n    //     var model = helpers.fetchModel(res);\n    //     if(model){\n    //       switch(res._model){\n    //         case 'projects':\n    //         case 'project':\n    //           helpers.forEachModel(model, helpers.humanizeProject);\n    //           break;\n    //         default:\n    //           break;\n    //       }\n    //     }\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores projects in long term memory\n    //    */\n    //   memorizeProjects: function(res) {\n    //     longTermMemory.memorize('projects', models.projects);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores currentUser in long term memory\n    //    */\n    //   memorizeCurrentUser: function(res) {\n    //     longTermMemory.memorize('currentUser', models.currentUser);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Stores About projects in long term memory\n    //    */\n    //   memorizeAboutProjects: function(res) {\n    //     longTermMemory.memorize('aboutProjects', models.projects);\n    //     return res;\n    //   },\n    //\n    //   /**\n    //    * Manage side effects, if any\n    //    */\n    //   sideEffects: function(res) {\n    //     if(res.side_effects){\n    //       angular.forEach(res.side_effects, function(v,k) {\n    //         var project = null;\n    //         var frame = null;\n    //\n    //         switch(k){\n    //           case 'projects':\n    //           case 'project':\n    //             helpers.updateModelCache(models.projects, v);\n    //             break;\n    //           case 'user':\n    //           case 'users':\n    //             helpers.updateModelCache(models.users, v);\n    //             break;\n    //           case 'frames':\n    //           case 'frame':\n    //             project = helpers.getRelatedProject(res);\n    //             helpers.updateModelCache(project.frames, v);\n    //             break;\n    //           case 'project_files':\n    //           case 'project_file':\n    //             project = helpers.getRelatedProject(res);\n    //             helpers.updateModelCache(project.project_files, v);\n    //             break;\n    //           case 'comments':\n    //           case 'comment':\n    //             frame = helpers.getRelatedFrame(res);\n    //             helpers.updateModelCache(frame.comments, v);\n    //             break;\n    //           default:\n    //             $log.warn('Don\\'t know how to handle side effect \"' + k + '\":');\n    //             $log.warn(v);\n    //             break;\n    //         }\n    //       });\n    //     }\n    //     return res;\n    //   }\n    // };\n    //\n    // var helpers = {\n    //\n    //   /**\n    //    * Valid models names\n    //    */\n    //   validModels: [\n    //     'projects',\n    //     'project',\n    //     'frames',\n    //     'frame',\n    //     'comments',\n    //     'comment',\n    //     'project_files',\n    //     'project_file',\n    //     'users',\n    //     'user'\n    //   ],\n    //\n    //   /**\n    //    * Fetch the model from response\n    //    */\n    //   fetchModel: function(res) {\n    //     if(res._model && res[res._model]){\n    //       return res[res._model];\n    //     }\n    //     return null;\n    //   },\n    //\n    //   /**\n    //   * Get the related project referenced in res\n    //   */\n    //   getRelatedProject: function (res) {\n    //     return utils.findFirst(models.projects, res._project_id);\n    //   },\n    //\n    //   /**\n    //   * Get the related frame referenced in res\n    //   */\n    //   getRelatedFrame: function (res) {\n    //     var project = helpers.getRelatedProject(res);\n    //     return utils.findFirst(project.frames, res._frame_id);\n    //   },\n    //\n    //   /**\n    //    * Executes a function for each model\n    //    */\n    //   forEachModel: function(model, func) {\n    //     if(angular.isArray(model)){\n    //       angular.forEach(model, func);\n    //     }\n    //     else if(model){\n    //       func(model);\n    //     }\n    //   },\n    //\n    //   /**\n    //    * inject default values to a project\n    //    */\n    //   injectProjectDefaults: function(project) {\n    //     // Set default image if not set\n    //     if(!project.image){\n    //       project.image = 'assets/images/default-img.png';\n    //     }\n    //\n    //     // Default download url\n    //     if(!project.download_url){\n    //       project.download_url = apiUrl + '/v1/projects/' + project.id + '/download';\n    //     }\n    //   },\n    //\n    //   /**\n    //    * inject default values to a user\n    //    */\n    //   injectUserDefaults: function(user) {\n    //     // Default mb_used to 0\n    //     if(!user.mb_used){\n    //       user.mb_used = 0;\n    //     }\n    //\n    //     // Default mb_total to 0\n    //     if(!user.mb_total){\n    //       user.mb_total = 0;\n    //     }\n    //\n    //     if(!user.can){\n    //       user.can = {\n    //         manage: [],\n    //         update: [],\n    //         show: []\n    //       };\n    //     }\n    //   },\n    //\n    //   /**\n    //    * Set a project as mine\n    //    */\n    //   setProjectAsMineSingle: function(project) {\n    //     if(!project.owner && models.currentUser && models.currentUser.id){\n    //       project.owner = { id: models.currentUser.id };\n    //     }\n    //   },\n    //\n    //   /**\n    //    * Sort the frames and comments of a project by order\n    //    */\n    //   sortFramesAndCommentsSingle: function(project) {\n    //     utils.sortByOrder(project.frames);\n    //     angular.forEach(project.frames, function(frame) {\n    //       utils.sortByOrder(frame.comments);\n    //     });\n    //   },\n    //\n    //   humanizeProject: function(project) {\n    //     // force private to be a boolean (defaults to false), and set private string\n    //     project.private = !!project.private;\n    //     if(project.private){\n    //       project.privateString = 'Private Project';\n    //     }\n    //     else{\n    //       project.privateString = 'Public Project';\n    //     }\n    //   },\n    //\n    //   updateModelCache: function (modelCache, model) {\n    //     var newData = model;\n    //\n    //     // modelCache is array\n    //     if(angular.isArray(modelCache)){\n    //\n    //       // if model is array, recursion\n    //       if(angular.isArray(model)){\n    //         newData = [];\n    //         angular.forEach(model, function(m) {\n    //           if(m){\n    //             var merged = helpers.updateModelCache(modelCache, m); // recursion\n    //             if(merged){\n    //               newData.push(merged);\n    //             }\n    //           }\n    //         });\n    //       }\n    //\n    //       // single model\n    //       else if(model){\n    //         // if model is maked as _reload, remove it from cache and add it again\n    //         if(model._reload){\n    //           utils.removeFirst(modelCache, model.id);\n    //           delete model._reload; // Delete _reload metadata not to store it in cache\n    //           newData = utils.mergeOrPush(modelCache, model);\n    //         }\n    //         // if model is marked as _destroyed, remove it from cache\n    //         else if(model._destroyed){\n    //           utils.removeFirst(modelCache, model.id);\n    //         }\n    //         // otherwise, just update the cache\n    //         else{\n    //           newData = utils.mergeOrPush(modelCache, model);\n    //         }\n    //       }\n    //     }\n    //\n    //     return newData;\n    //   }\n\n      log: function (res) {\n        $log.info(res);\n        return res;\n      },\n\n      debugger: function (res) {\n        debugger; // eslint-disable-line no-debugger\n        return res;\n      }\n    };\n\n    return resPipe;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Long Term Memory\n   * Persist data to make it available after the browser is closed\n   */\n  .factory('longTermMemory', function () {\n    var allowedKeys = [\n      'currentUser',\n      'events',\n      'regions',\n      'currentEvent'\n    ];\n\n    var longTermMemory = {\n      memorize: function(key, val) {\n        if(allowedKeys.indexOf(key) < 0){\n          return;\n        }\n\n        localStorage[key] = angular.toJson(val);\n      },\n\n      remember: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        try {\n          return angular.fromJson(localStorage[key]);\n        }\n        catch(e){\n          delete localStorage[key];\n          return null;\n        }\n      },\n\n      forget: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        delete localStorage[key];\n      },\n\n      oblivion: function() {\n        angular.forEach(allowedKeys, function(key) {\n          delete localStorage[key];\n        });\n        localStorage.clear();\n      }\n    };\n\n    return longTermMemory;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoSidebar', frispoSidebar);\n\n  /** @ngInject */\n  function frispoSidebar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoSidebar/frispoSidebar.html',\n      controller: SidebarController,\n      controllerAs: 'sidebar',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function SidebarController(models, $state) {\n      var vm = this;\n\n      vm.models = models;\n      vm.state = $state;\n\n      vm.manageMenuEntries = [\n        'main.admin.createEvent',\n        'main.admin.events',\n        'main.admin.teams',\n        'main.admin.calendar',\n        'main.admin.scoreboard'\n      ]\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoHeader', frispoHeader);\n\n  /** @ngInject */\n  function frispoHeader() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoHeader/frispoHeader.html',\n      controller: HeaderController,\n      controllerAs: 'header',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function HeaderController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoFooter', frispoFooter);\n\n  /** @ngInject */\n  function frispoFooter($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoFooter/frispoFooter.html',\n      controller: FooterController,\n      controllerAs: 'footer',\n      link: FooterLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function FooterController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function FooterLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * My Project Overview API service\n   */\n   .factory('frispoApi', function ($q, $http, usersApiUrl, eventsApiUrl, teamsApiUrl, matchesApiUrl, consumerKey, consumerSecret, models) {\n      // Cache the promises (just to avoid to call the same API before the previous has finished)\n      var cache = {};\n\n      // Api Helpers (accessible only from this factory)\n      var helpers = {\n        /**\n         * Try to retrieve the result from cache, or make HTTP call\n         * @param  {String} method  The HTTP method\n         * @param  {String} fullUrl The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @param  {Boolean} keep   If true, the promise is cached even after it's been fulfilled\n         * @return {Promise}        A promise of the response\n         */\n        cacheOrHttp: function(method, fullUrl, data, headers, keep) {\n          var key = method + fullUrl + (data ? angular.toJson(data) : '');\n\n          var config = {};\n          if(method) config.method = method.toUpperCase();\n          if(fullUrl) config.url = fullUrl;\n          if(data) config.data = data;\n          if(headers) config.headers = headers;\n\n          if (!cache[key]) {\n            var promise;\n            var err = false;\n            switch(method){\n              case 'get':\n              case 'GET':\n              case 'post':\n              case 'POST':\n              case 'put':\n              case 'PUT':\n              case 'patch':\n              case 'PATCH':\n              case 'delete':\n              case 'DELETE':\n                promise = $http(config);\n                break;\n              default:\n                err = true;\n                promise = $q.reject();\n                break;\n            }\n            if(!err){\n              cache[key] = promise.finally(function(response,err) {\n                if(!keep){\n                  delete cache[key]; // delete the cache, so the next call will be fresh\n                }\n                if(err) { return $q.reject(err); }\n                if(response) { return response; }\n              });\n            }\n          }\n\n          return cache[key];\n        },\n\n        /**\n         * Perform an API call to the Users endpoint, using preset headers and required data\n         * @param  {String} method  The HTTP method\n         * @param  {String} url The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        userApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            usersApiUrl + url,\n            angular.merge({\n                consumer_key: consumerKey,\n                consumer_secret: consumerSecret\n              },\n              data\n            ),\n            angular.merge({\n                Authorization: 'Basic ZnJpc3BvOmZyMXNwMA==' // frispo:fr1sp0\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Events endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        eventsApiCall: function (method, url, data, headers, keep) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            eventsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            ),\n            keep\n          );\n        },\n\n        /**\n         * Perform an API call to the Teams endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        teamsApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            teamsApiUrl + '/events/' + eventId + '/teams' + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Match endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        matchesApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            matchesApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: 'Bearer ' + models.currentUser.accessToken\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Expect a 200 response and return data.\n         * Otherwise, return a rejected promise.\n         */\n        expect200: function (response) {\n          if(response.status === 200){\n            return response.data;\n          }\n          else{\n            return $q.reject(response);\n          }\n        },\n\n        unwrapData: function (response) {\n          return response.data;\n        }\n      };\n\n      var frispoApi = {\n        /** USER API **/\n\n        /**\n         * Register a new user\n         */\n        register: function(userData) {\n          return helpers\n            .userApiCall('post', '/create', {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Authenticate the user\n         */\n        login: function(userData) {\n          return helpers\n            .userApiCall('post', '/login', {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Authenticate the user using facebook\n         */\n        loginFacebook: function (facebookData) {\n          return helpers\n            .userApiCall('post', '/login_facebook', {\n              // TODO: uncomment this line\n              facebook_token: facebookData.authResponse.accessToken\n              // TODO: remove this line\n              // facebook_token: 'EAAOlGomqNZCEBAP0qxpxsF24LHj0U6f31n9pHfM2dWyBHSlW5P2gD3ZCkragDChLxZC2vmOdOeJxS6NJDHQiRel6schIQaC8aapfzlO9NzMTYBMVug27xr6m9XOW70nHpaiycsqGl33djVykZARc10PIg09g4gANZCa2NcRYKga0F32fZBH7PFNJs54rNf89MZD'\n            })\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Logout the user\n         * @param  {Object} userData  an hash containing the 'accessToken'\n         * @return {Promise}          A promise with the response\n         */\n        logout: function (userData) {\n          return helpers\n            .userApiCall('post', '/logout', {\n              access_token: userData.accessToken,\n              anonymous_user: 'siteweb'\n            })\n            .then(helpers.expect200);\n        },\n\n        /* EVENTS API */\n\n        /**\n         * List the events of the current user\n         * @return {Promise} A promise fulfilled with the event list\n         */\n        listEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/add/' + models.currentUser.uuid, eventData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Update an event\n         */\n        updateEvent: function (eventId, eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/' + eventId + '/edit/' + models.currentUser.uuid, eventData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroyEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('delete', '/events/' + eventData.evenId + '/remove/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Show an event\n         * @return {Promise} A promise fulfilled with the event requested\n         */\n        showEvent: function (eventId) {\n          return helpers\n            .eventsApiCall('get', '/event/' + eventId + '/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * List the active regions\n         */\n        listRegions: function () {\n          return helpers\n            .eventsApiCall('get', '/regions/' + models.currentUser.uuid, null, null, true)\n            .then(helpers.expect200);\n        },\n\n        /* TEAMS API */\n\n        /**\n         * List the teams of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listTeams: function (eventId) {\n          return helpers\n            .teamsApiCall(eventId, 'get', '/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * update a team\n         */\n        updateTeam: function (eventId, teamId, teamData) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/' + teamId + '/edit/' + models.currentUser.uuid, teamData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * update a team\n         */\n        createTeam: function (eventId, teamData) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/add/' + models.currentUser.uuid, teamData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * destroy a team\n         */\n        destroyTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/' + teamId + '/remove/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * show a team\n         */\n        showTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall(eventId, 'get', '/' + teamId + '/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Add a group of teams to an event\n         * @param {Number} eventId   The id of the event to add the teams to\n         * @param {Object} teamsData An object containing the informations about the teams we want to create\n         */\n        addGroupTeams: function (eventId, teamsData) {\n          return helpers\n            .teamsApiCall(eventId, 'post', '/add_group_teams/' + models.currentUser.uuid, teamsData)\n            .then(helpers.expect200);\n        },\n\n        /* MATCHES API */\n\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createMatchesCalendar: function (eventId) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/match/create_calendar/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * List the matches of an event for a given day\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatches: function (eventId, day) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/day/' + day + '/matches/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Update a match\n         */\n        updateMatch: function (eventId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches/update/' + models.currentUser.uuid, matchData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Create a match\n         */\n        createMatch: function (eventId, matchDayId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/day/' + matchDayId + '/matches/add/' + models.currentUser.uuid, matchData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (eventId, dayData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches_day/add/' + models.currentUser.uuid, dayData)\n            .then(helpers.expect200);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroyMatch: function (eventId, matchDayId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/match_day/' + matchDayId + '/matches/' + matchId + '/remove/' + models.currentUser.uuid)\n            .then(helpers.expect200);\n        }\n      };\n\n      return frispoApi;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Error Manager.\n   * Handles common HTTP error messages\n   */\n  .factory('errorManager', function (toastr, $log, $state, $q, longTermMemory, models) {\n    var errorManager = function(err) {\n      // log every errors\n      $log.error(err);\n\n      // Unwrap HTTP errors and take actions if needed\n      if(angular.isObject(err) && err.status){\n        switch(err.status){\n          case 401:\n            $state.go('main.logout');\n            err = err.data;\n            break;\n          case 403:\n            $state.go('main.home');\n            err = err.data;\n            break;\n          case 422:\n            err = err.data;\n            break;\n          case 404:\n            err = err.data;\n            break;\n          case 413:\n            err = 'Il file che stai cercando di caricare è troppo grande';\n            break;\n          case -1:\n            err = 'Il server non è raggiungibile o non sei connesso ad Internet';\n            break;\n          default:\n            break;\n        }\n      }\n\n      var getErrorString = function (err) {\n        if(angular.isString(err)){\n          return err;\n        }\n        else if(angular.isObject(err) && (err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error)){\n          return getErrorString(err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error );\n        }\n        else if(angular.isArray(err)){\n          var myErr = [];\n          for (var i = 0; i < err.length; i++) {\n            myErr[i] = getErrorString(err[i]);\n          }\n          return getErrorString(myErr.join('<br>'));\n        }\n        // Don't manage different kinds of error\n        else{\n          longTermMemory.oblivion(); // Forget everything. We don't want the app to be broken forever!\n          models.reset(); // Reset all the models. We don't want the app to be broken forever!\n          return 'Si è verificato un errore imprevisto. Si prega di riprovare più tardi.';\n        }\n      }\n\n      toastr.error(getErrorString(err), 'Errore');\n\n      return $q.reject(err);\n    };\n\n    return errorManager;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('datepicker', datepicker);\n\n  /** @ngInject */\n  function datepicker() {\n    var directive = {\n      restrict: 'A',\n      link: datepickerLink,\n      scope: {\n        datepicker: '@',\n        model: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function datepickerLink(scope, el) {\n      scope.watchInput = function () {\n        scope.$watch('model', function () {\n          scope.drp.elementChanged();\n        });\n      }\n\n      if(scope.datepicker === 'range'){\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY') + ' -> ' + picker.endDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n      else{\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          singleDatePicker: true,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('compareTo', compareTo);\n\n  /** @ngInject */\n  function compareTo() {\n    var directive = {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=compareTo'\n      },\n      link: compareToLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function compareToLink(scope, element, attrs, ngModel) {\n      ngModel.$validators.compareTo = function (modelvalue) {\n        return modelvalue == scope.otherModelValue;\n      }\n      scope.$watch('otherModelValue', function () {\n        ngModel.$validate();\n      })\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * User models manager\n   */\n   .factory('users', function (frispoApi, errorManager, models, longTermMemory, resPipe, toastr, $state, $q, ezfb, $log) {\n\n      var users = {\n        /**\n         * Register a new user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        register: function (userData) {\n          return frispoApi\n            .register(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email;\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(function (res) {\n              $log.info('Frispo registration');\n              return res;\n            })\n            .catch(errorManager);\n        },\n\n        /**\n         * Login a user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        login: function (userData) {\n          return frispoApi\n            .login(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email; // Add the email from the input as it's missing from the response\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Logout a user\n         * @param  {Object} userData an object containing the user data\n         * @return {Promise}          a promise that will be fullfilled after the logout\n         */\n        logout: function (userData) {\n          if(userData.loggedIn){\n            return frispoApi\n              .logout(models.currentUser)\n              .then(function (res) {\n                toastr.success('Succesfully logged out', 'Logout');\n                $log.info('Frispo logout');\n                return res;\n              })\n              .catch(errorManager)\n              .finally(function() {\n                models.currentUser = {};\n                longTermMemory.forget('currentUser');\n                $state.go('main.login');\n              })\n              .then(function () {\n                ezfb.logout();\n              });\n          }\n          return $q.resolve(userData);\n        },\n\n        /**\n         * Login a user to frispo's server using the facebook login() response data\n         * @param  {Object} facebookData The object returned by the Facebook SDK after a succesful login\n         * @return {Promise}             A promise fulfilled with the authentication data for the user,\n         */\n        loginFacebook: function (facebookData) {\n          return frispoApi\n            .loginFacebook(facebookData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged in\n         * @param  {Object} userData The object containing the user data\n         * @return {Object}          The same userData, useful for promise chaining\n         */\n        onLoggedIn: function (userData) {\n          toastr.success(\"Benvenuto, \" + (userData.displayName) + \"!\", \"Accesso effettuato\")\n          if($state.current.name === 'main.login' || $state.current.name === 'main.register'){\n            $state.go('main.admin.dashboard');\n          }\n          $log.info('Frispo login');\n          return userData;\n        },\n\n        /**\n         * Backup user data and setup the anonymous user for testing purposes\n         */\n        setAnonymousUser: function (res) {\n          models.bkp =  {\n            uuid: models.currentUser.uuid,\n            accessToken: models.currentUser.accessToken\n          }\n          models.currentUser.uuid = 'anonimo';\n          models.currentUser.accessToken = '4e66c966e021918f0b088ddc929847f7'\n          return $q.resolve(res);\n        },\n\n        /**\n         * Restore user backup\n         */\n        unsetAnonymousUser: function (res) {\n          models.currentUser.uuid = models.bkp.uuid;\n          models.currentUser.accessToken = models.bkp.accessToken;\n          delete models.bkp;\n          return $q.resolve(res);\n        }\n      };\n\n      return users;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('teams', function (frispoApi, errorManager, resPipe, $q, models, utils) {\n\n      var teams = {\n        /**\n         * List the teams of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listTeams(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeams)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        show: function (teamId) {\n          return frispoApi\n            .showTeam(models.currentEvent.evenId, teamId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        create: function (team) {\n          return frispoApi\n            .createTeam(models.currentEvent.evenId, team)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        update: function (teamId, team) {\n          return frispoApi\n            .updateTeam(models.currentEvent.evenId, teamId, team)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        destroy: function (team) {\n          return frispoApi\n            .destroyTeam(models.currentEvent.evenId, team.teamId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return team;\n            })\n            .then(resPipe.removeTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a group of teams and add it to an event\n         */\n        addGroup: function (teamsData) {\n          return frispoApi\n            .addGroupTeams(models.currentEvent.evenId, teamsData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from a team form into an teamsData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the teamsData object\n         */\n        form2Teams: function (formData) {\n          var teamsData = { extra: [] };\n          angular.forEach(formData.teams, function (team) {\n            teamsData.extra.push(teams.form2Team(team));\n          });\n          return $q.resolve(teamsData);\n        },\n\n        form2Team: function (formData) {\n          var teamData = {};\n          var teamTime = utils.str2Time(formData.time);\n          if(angular.isDefined(formData.captain)) teamData.team_captain = formData.captain;\n          if(angular.isDefined(teamTime)) teamData.team_time = teamTime;\n          if(angular.isDefined(formData.name)) teamData.team_name = formData.name;\n          if(angular.isDefined(formData.phone)) teamData.team_mobile_phone = formData.phone;\n          if(angular.isDefined(formData.place)) teamData.team_place = formData.place;\n          if(angular.isDefined(formData.round)) teamData.team_groups = formData.round;\n          if(angular.isDefined(formData.desc)) teamData.team_description = formData.desc;\n          return teamData;\n        }\n      };\n\n      return teams;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n  * Models cache\n  */\n  .factory('models', function (longTermMemory) {\n\n    var models = {\n       reset: function () {\n         models.events = longTermMemory.remember('events') || [];\n         models.regions = longTermMemory.remember('regions') || [];\n         models.currentUser = longTermMemory.remember('currentUser') || {};\n         models.currentEvent = models.events.length>0 && longTermMemory.remember('currentEvent') || undefined;\n       }\n    };\n\n    models.reset();\n\n    return models;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Matches models manager\n   */\n   .factory('matches', function (frispoApi, errorManager, resPipe, models, utils, $q) {\n\n      var matches = {\n\n        /**\n         * Create a matches calendar for an event\n         */\n        createCalendar: function (eventId) {\n          return frispoApi\n            .createMatchesCalendar(eventId)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the matches for a day of an event\n         */\n        list: function () {\n          return frispoApi\n            .listMatches(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMatches)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Update a match\n         */\n        update: function (matchData) {\n          return frispoApi\n            .updateMatch(models.currentEvent.evenId, matchData)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match\n         */\n        create: function (matchData) {\n          return frispoApi\n            .createMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.log)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (dayData) {\n          return frispoApi\n            .createDay(models.currentEvent.evenId, dayData)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroy: function (matchData) {\n          return frispoApi\n            .destroyMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData.matcId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return matchData;\n            })\n            .then(resPipe.removeMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show a match\n         */\n         show: function (matchId) {\n           return frispoApi\n            .showMatch(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n         },\n\n         /**\n          * Translate data from a match form into a matchData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the matchData object\n          */\n         form2Match: function (formData) {\n           var matchData = {};\n           var matchTime = utils.str2Time(formData.time);\n           var matchDate = utils.str2Date(formData.date);\n           if(angular.isDefined(formData.matchId)) matchData.matc_id = formData.matchId;\n           if(formData.teamA && angular.isDefined(formData.teamA.teamId)) matchData.matc_team_id_a = formData.teamA.teamId;\n           if(formData.teamB && angular.isDefined(formData.teamB.teamId)) matchData.matc_team_id_b = formData.teamB.teamId;\n           if(angular.isDefined(formData.scoreA)) matchData.matc_goal_team_a = formData.scoreA;\n           if(angular.isDefined(formData.scoreB)) matchData.matc_goal_team_b = formData.scoreB;\n           if(angular.isString(formData.dateExpected)) matchData.matc_date_expected = formData.dateExpected;\n           if(angular.isString(matchDate)) matchData.matc_date_match = matchDate;\n           if(angular.isString(matchTime)) matchData.matc_time = matchTime;\n           if(angular.isString(formData.address)) matchData.matc_address = formData.address;\n           if(angular.isString(formData.round)) matchData.matc_name_groups = formData.round;\n           if(formData.played && angular.isDefined(formData.played.value)) matchData.matc_flg_play = formData.played.value;\n           if(angular.isDefined(formData.shootoutA)) matchData.matc_shootout_team_a = formData.shootoutA;\n           if(angular.isDefined(formData.shootoutB)) matchData.matc_shootout_team_b = formData.shootoutB;\n           if(angular.isString(formData.place)) matchData.matc_place = formData.place;\n           return $q.resolve(matchData);\n         },\n\n         /**\n          * Translate data from a Day form into an dayData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the dayData object\n          */\n         form2Day: function (formData) {\n           var dayData = {};\n           if(angular.isDefined(formData.name)) dayData.mada_name = formData.name;\n           if(angular.isDefined(formData.desc)) dayData.mada_description = formData.desc;\n           return $q.resolve(dayData);\n         }\n      };\n\n      return matches;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('events', function (frispoApi, errorManager, resPipe, $q, utils, models) {\n\n      var events = {\n        /**\n         * Show all events\n         */\n         list: function () {\n          return frispoApi\n            .listEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateEvents)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a new event\n         */\n        create: function (eventData) {\n          return frispoApi\n            .createEvent(eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show an event\n         */\n        show: function (eventId) {\n          return frispoApi\n            .showEvent(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroy: function (event) {\n          return frispoApi\n            .destroyEvent(event)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return event;\n            })\n            .then(resPipe.removeEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        /**\n         * Update an event\n         */\n        update: function (eventId, eventData) {\n          return frispoApi\n            .updateEvent(eventId, eventData)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return events.show(eventId);\n            })\n            .catch(errorManager);\n        },\n\n        /**\n        * List the active regions\n        */\n        listRegions: function () {\n          return frispoApi\n            .listRegions()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateRegions)\n            .then(resPipe.memorizeRegions)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from an event form into an eventData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the eventData object\n         */\n        form2Event: function (formData) {\n          var eventData = {};\n          var dateRange = utils.str2Date(formData.dates);\n          if(angular.isDefined(formData.name)) eventData.even_name = formData.name;\n          if(angular.isDefined(formData.desc)) eventData.even_description = formData.desc;\n          if(angular.isDefined(formData.email)) eventData.even_email = formData.email;\n          if(angular.isDefined(formData.address)) eventData.even_address = formData.address;\n          if(angular.isDefined(formData.type)) eventData.even_type = +formData.type;\n          if(angular.isDefined(formData.organizer)) eventData.even_organize_by = formData.organizer;\n          if(angular.isDefined(formData.formula)) eventData.even_formula = +formData.formula;\n          if(angular.isDefined(formData.telephone)) eventData.even_mobile_phone = formData.telephone;\n          if(angular.isArray(dateRange) && dateRange.length > 0 && dateRange[0]) eventData.even_date_start = dateRange[0];\n          if(angular.isArray(dateRange) && dateRange.length > 1 && dateRange[1]) eventData.even_date_end = dateRange[1];\n          if(formData.region && formData.region.regiId) eventData.regi_id = formData.region.regiId;\n          // TODO: remove this line: it's a mock\n          else eventData.regi_id = 1;\n          if(formData.currentDay && formData.currentDay.matcDayId) eventData.even_day_active = formData.currentDay.matcDayId;\n          return $q.resolve(eventData);\n        }\n\n      };\n\n      return events;\n   });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(\n    $rootScope,\n    uiState,\n    defaultBodyClasses,\n    ezfb,\n    $log,\n    users,\n    models\n  ) {\n      // Bind the uiState to $rootScope as it's used in index.html\n      $rootScope.uiState = uiState;\n\n      // On state change\n      var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess', function (event, toState) {\n        var pms = toState.params || {};\n        uiState.bodyClasses = pms.bodyClasses || defaultBodyClasses;\n      });\n\n      // Subscribe to FB login\n      ezfb.Event.subscribe('auth.login', function (response) {\n        $log.info('Facebook login');\n        users.loginFacebook(response);\n      });\n\n      // Subscribe to FB logout\n      ezfb.Event.subscribe('auth.logout', function () {\n        $log.info('Facebook logout');\n        if(models.currentUser.loggedIn){\n          users.logout();\n        }\n      });\n\n      // Check FB connection\n      ezfb.getLoginStatus();\n\n      // Destroy watchers\n      $rootScope.$on('$destroy', function() {\n        stateChangeSuccess();\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    var requireLoggedIn = function ($timeout, $state, models) {\n      if(!models.currentUser.loggedIn){\n        $timeout(function() {\n          $state.go('main.login');\n        });\n      }\n    };\n\n    $stateProvider\n      .state('main', {\n        abstract: true,\n        templateUrl: 'app/pages/main/main.html'\n      })\n      .state('main.admin', {\n        abstract: true,\n        templateUrl: 'app/pages/admin/admin.html',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.dashboard', {\n        url: '/',\n        templateUrl: 'app/pages/dashboard/dashboard.html',\n        controller: 'DashboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.createEvent', {\n        url: '/create-event',\n        templateUrl: 'app/pages/createEvent/createEvent.html',\n        controller: 'CreateEventController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.events', {\n        url: '/events',\n        templateUrl: 'app/pages/events/events.html',\n        controller: 'EventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.teams', {\n        url: '/teams',\n        templateUrl: 'app/pages/teams/teams.html',\n        controller: 'TeamsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.calendar', {\n        url: '/calendar',\n        templateUrl: 'app/pages/calendar/calendar.html',\n        controller: 'CalendarController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scoreboard', {\n        url: '/scoreboard',\n        templateUrl: 'app/pages/scoreboard/scoreboard.html',\n        controller: 'ScoreboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.news', {\n        url: '/news',\n        templateUrl: 'app/pages/news/news.html',\n        controller: 'NewsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.disciplinary', {\n        url: '/disciplinary',\n        templateUrl: 'app/pages/disciplinary/disciplinary.html',\n        controller: 'DisciplinaryController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.login', {\n        url: '/login',\n        templateUrl: 'app/pages/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition login-page'\n        },\n        onEnter: function ($timeout, $state, models) {\n          if(models.currentUser.loggedIn){\n            $timeout(function () {\n              $state.go('main.admin.dashboard');\n            })\n          }\n        }\n      })\n      .state('main.register', {\n        url: '/register',\n        templateUrl: 'app/pages/register/register.html',\n        controller: 'RegisterController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition register-page'\n        },\n        onEnter: function ($timeout, $state, models) {\n          if(models.currentUser.loggedIn){\n            $timeout(function () {\n              $state.go('main.admin.dashboard');\n            })\n          }\n        }\n      })\n      .state('main.logout', {\n        url: '/logout',\n        onEnter: function(frispoApi, $state, toastr, models, longTermMemory, users) {\n          users.logout(models.currentUser);\n        }\n      });\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('defaultBodyClasses', 'skin-green fixed sidebar-mini')\n    .constant('usersApiUrl', 'http://52.50.82.14:9763/FrispoUsers/1.0.0/api/users/1.0.0/frispo/base/0/users')\n    .constant('eventsApiUrl', 'https://52.50.82.14:8243/api/events/1.0.0/frispo/base/0')\n    .constant('teamsApiUrl', 'https://52.50.82.14:8243/api/teams/1.0.0/football/base/0')\n    .constant('matchesApiUrl', 'https://52.50.82.14:8243/api/matches/1.0.0/football/base/0')\n    .constant('consumerKey', 'K9khQffyZfMXjF6fEIN1GflFDToa')\n    .constant('consumerSecret', 'uBRbkCgAtVmw8f_5qTYYcqAO7iMa');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $animateProvider, $locationProvider, ezfbProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Animate only elements with class \"animate\"\n    $animateProvider.classNameFilter(/animate/);\n\n    // Set options for toastr\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = false;\n    toastrConfig.progressBar = false;\n\n    //Removes '#' from the URL\n    $locationProvider.html5Mode(true);\n    $locationProvider.hashPrefix('!');\n\n    // Configure facebook\n    ezfbProvider.setLocale('it_IT');\n    ezfbProvider.setInitParams({\n      appId: '1025958327498737'\n    });\n  }\n\n})();\n\nangular.module(\"frispo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/frispoFooter/frispoFooter.html\",\"<footer class=main-footer><div class=\\\"pull-right hidden-xs\\\"><b>Version</b> 1.0.0</div><strong>Copyright © 2014-2016 <a href=http://andreaciaccia.it>Andrea Ciaccia</a>.</strong> All rights reserved.</footer>\");\n$templateCache.put(\"app/components/frispoHeader/frispoHeader.html\",\"<header class=main-header><a ui-sref=main.admin.dashboard class=logo><!-- mini logo for sidebar mini 50x50 pixels --> <span class=logo-mini><b>F</b>O</span><!-- logo for regular state and mobile devices --> <span class=logo-lg><b>Frispo</b></span></a><nav class=\\\"navbar navbar-static-top\\\" role=navigation><!-- Sidebar toggle button--> <a href=# class=sidebar-toggle data-toggle=offcanvas role=button><span class=sr-only>Toggle navigation</span> </a><!-- Navbar Right Menu --><div class=navbar-custom-menu><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown user user-menu\\\"><a href=# class=dropdown-toggle data-toggle=dropdown aria-expanded=false><span class=hidden-xs>{{ header.models.currentUser.displayName }}</span></a><ul class=dropdown-menu><!-- User image --><li class=user-header><img src=assets/images/angular.png class=img-circle alt=\\\"User Image\\\"><p>{{ header.models.currentUser.displayName }}</p></li><!-- Menu Footer--><li class=user-footer><div class=pull-left><a href=main.admin.profile class=\\\"btn btn-default btn-flat\\\">Profile</a></div><div class=pull-right><a ui-sref=main.logout class=\\\"btn btn-default btn-flat\\\">Sign out</a></div></li></ul></li></ul></div></nav></header>\");\n$templateCache.put(\"app/components/frispoSidebar/frispoSidebar.html\",\"<div class=main-sidebar><!-- Inner sidebar --><div class=sidebar><!-- Sidebar Menu --><ul class=sidebar-menu><li class=header>Menu</li><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.dashboard\\'}\\\"><a ui-sref=main.admin.dashboard><i class=\\\"fa fa-tachometer\\\" aria-hidden=true></i><span>Dashboard</span></a></li><li class=treeview><a href=#><i class=\\\"fa fa-futbol-o\\\" aria-hidden=true></i><span>Gestisci</span></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.createEvent\\'}\\\"><a ui-sref=main.admin.createEvent><i class=\\\"fa fa-circle-o\\\"></i> Crea Evento Smart</a></li><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.events\\'}\\\"><a ui-sref=main.admin.events><i class=\\\"fa fa-circle-o\\\"></i> Eventi</a></li><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.teams\\'}\\\"><a ui-sref=main.admin.teams><i class=\\\"fa fa-circle-o\\\"></i> Squadre</a></li><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.calendar\\'}\\\"><a ui-sref=main.admin.calendar><i class=\\\"fa fa-circle-o\\\"></i> Calendario</a></li><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scoreboard\\'}\\\"><a ui-sref=main.admin.scoreboard><i class=\\\"fa fa-circle-o\\\"></i> Classifica</a></li></ul></li><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.news\\'}\\\"><a ui-sref=main.admin.news><i class=\\\"fa fa-newspaper-o\\\"></i> <span>News</span></a></li><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.disciplinary\\'}\\\"><a ui-sref=disciplinary><i class=\\\"fa fa-fire\\\"></i> <span>Disciplinare</span></a><ul class=treeview-menu style=\\\"display: none\\\"><li><a href=pages/layout/top-nav.html><i class=\\\"fa fa-circle-o\\\"></i> Ammoniti</a></li><li><a href=pages/layout/boxed.html><i class=\\\"fa fa-circle-o\\\"></i> Diffidati</a></li><li><a href=pages/layout/fixed.html><i class=\\\"fa fa-circle-o\\\"></i> Squalificati</a></li><li><a href=pages/layout/collapsed-sidebar.html><i class=\\\"fa fa-circle-o\\\"></i> Ammende</a></li></ul></li></ul><!-- /.sidebar-menu --></div><!-- /.sidebar --></div><!-- /.main-sidebar -->\");\n$templateCache.put(\"app/pages/admin/admin.html\",\"<div class=wrapper><frispo-header></frispo-header><frispo-sidebar></frispo-sidebar><div class=content-wrapper><div ui-view></div></div><frispo-footer></frispo-footer></div>\");\n$templateCache.put(\"app/pages/calendar/calendar.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"><div class=pull-right><a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewDay()>Crea nuova giornata</a> <a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewMatch()>Crea nuova partita</a></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=table><tr><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Indirizzo</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th>Giocata</th><th></th></tr><tr ng-repeat-start=\\\"match in vm.models.currentEvent.currentDay.matches\\\" match-show=match></tr><tr ng-repeat-end match-edit=match></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/createEvent/createEvent.html\",\"<section class=create-event><section class=content-header><h1>Crea un evento <small>&nbsp;{{ vm.wizard | wizardTextProgress }}</small></h1><wizard-progress wizard=vm.wizard></wizard-progress></section><section class=content><wizard-step-box step=1 wizard=vm.wizard title=\\\"Impostazioni evento\\\"><form id=formStep1 name=formStep1 ng-submit=vm.step1Done()><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.name.$dirty && formStep1.name.$invalid}\\\"><label for=formStep1-name>Nome</label><input id=formStep1-name ng-model=vm.step1.name name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=formStep1.name.$dirty ng-messages=formStep1.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.desc.$dirty && formStep1.desc.$invalid}\\\"><label for=formStep1-desc>Descrizione</label><textarea id=formStep1-desc rows=5 ng-model=vm.step1.desc name=desc class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\"></textarea><span ng-show=formStep1.desc.$dirty ng-messages=formStep1.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.address.$dirty && formStep1.address.$invalid}\\\"><label for=formStep1-address>Indirizzo</label><input id=formStep1-address ng-model=vm.step1.address name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo principale dell\\'evento\\\" required> <span ng-show=formStep1.address.$dirty ng-messages=formStep1.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.type.$dirty && formStep1.type.$invalid}\\\"><label for=formStep1-type>Tipologia</label><select id=formStep1-type ng-init=\\\"vm.step1.type = 0\\\" ng-model=vm.step1.type name=type class=form-control><option ng-selected=\\\"vm.step1.type === 0\\\" value=0>Campionato italiana</option><option ng-selected=\\\"vm.step1.type === 1\\\" value=1>Torneo a gironi</option></select><span ng-show=formStep1.type.$dirty ng-messages=formStep1.type.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.organizer.$dirty && formStep1.organizer.$invalid}\\\"><label for=formStep1-organizer>Organizzatore</label><input id=formStep1-organizer ng-model=vm.step1.organizer name=organizer type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'organizzatore\\\" required> <span ng-show=formStep1.organizer.$dirty ng-messages=formStep1.organizer.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.telephone.$dirty && formStep1.telephone.$invalid}\\\"><label for=formStep1-telephone>Telefono organizzatore</label><input id=formStep1-telephone ng-model=vm.step1.telephone name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore\\\" required> <span ng-show=formStep1.telephone.$dirty ng-messages=formStep1.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.email.$dirty && formStep1.email.$invalid}\\\"><label for=formStep1-email>E-mail organizzatore</label><input id=formStep1-email ng-model=vm.step1.email name=email type=email class=form-control placeholder=\\\"Inserisci l\\'indirizzo e-mail dell\\'organizzatore\\\" required> <span ng-show=formStep1.email.$dirty ng-messages=formStep1.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.dates.$dirty && formStep1.dates.$invalid}\\\"><label for=formStep1-dates>Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=formStep1-dates ng-model=vm.step1.dates model=vm.step1.dates name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><!-- /.input group --> <span ng-show=formStep1.dates.$dirty ng-messages=formStep1.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.formula.$dirty && formStep1.formula.$invalid}\\\"><label for=formStep1-formula>Formula</label><select id=formStep1-formula ng-init=\\\"vm.step1.formula = 0\\\" ng-model=vm.step1.formula name=formula class=form-control placeholder=\\\"Inserisci la formula desiderata\\\"><option ng-selected=\\\"vm.step1.formula === 0\\\" value=0>Anadata e ritorno</option><option ng-selected=\\\"vm.step1.formula === 1\\\" value=1>Solo andata</option></select><span ng-show=formStep1.formula.$dirty ng-messages=formStep1.formula.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><!-- /.col --></div><!-- /.row --><div class=pull-right><input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=2 wizard=vm.wizard title=\\\"Aggiungi squadre\\\"><form id=formStep2 name=formStep2 ng-submit=vm.step2Done()><div class=row><div ng-if=\\\"vm.step1.type == \\'1\\' && !vm.forceManualRounds\\\"><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundType.$dirty && formStep2.roundType.$invalid}\\\"><label for=formStep2-roundType>Inserimento Gironi</label><select id=formStep2-roundType ng-init=\\\"vm.step2.roundType = 0\\\" ng-model=vm.step2.roundType name=roundType class=form-control ng-change=vm.initDefaultTeams()><option value=0>Manuale</option><option value=1>Automatico</option></select><span ng-show=formStep2.roundType.$dirty ng-messages=formStep2.roundType.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-if=\\\"vm.step2.roundType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundNumber.$dirty && formStep2.roundNumber.$invalid}\\\"><label for=formStep2-roundNumber>Numero di gironi</label><input id=formStep2-roundNumber ng-model=team.roundNumber name=roundNumber type=text class=form-control placeholder=\\\"Inserisci il numero di gironi dell\\'evento\\\" required> <span ng-show=formStep2.roundNumber.$dirty ng-messages=formStep2.roundNumber.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=clearfix></div><div class=col-sm-6 ng-repeat=\\\"team in vm.step2.teams\\\"><div class=\\\"panel panel-default\\\"><div class=panel-heading>Squadra {{ $index+1 }} <button tabindex=-1 type=button class=close ng-click=vm.removeTeam($index)><span>&times;</span></button></div><div class=panel-body><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'name\\' + ($index+1)].$dirty && formStep2[\\'name\\' + ($index+1)].$invalid}\\\"><label for=formStep2-name{{$index+1}}>Nome</label><input id=formStep2-name{{$index+1}} ng-model=team.name name=name{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome della squadra\\\" required> <span ng-show=\\\"formStep2[\\'name\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'name\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'desc\\' + ($index+1)].$dirty && formStep2[\\'desc\\' + ($index+1)].$invalid}\\\"><label for=formStep2-desc{{$index+1}}>Descrizione</label><input id=formStep2-desc{{$index+1}} ng-model=team.desc name=desc{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'desc\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'desc\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'captain\\' + ($index+1)].$dirty && formStep2[\\'captain\\' + ($index+1)].$invalid}\\\"><label for=formStep2-captain{{$index+1}}>Capitano</label><input id=formStep2-captain{{$index+1}} ng-model=team.captain name=captain{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome del capitano della squadra\\\" required> <span ng-show=\\\"formStep2[\\'captain\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'captain\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'phone\\' + ($index+1)].$dirty && formStep2[\\'phone\\' + ($index+1)].$invalid}\\\"><label for=formStep2-phone{{$index+1}}>Telefono</label><input id=formStep2-phone{{$index+1}} ng-model=team.phone name=phone{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il numero di telefono della squadra\\\" required> <span ng-show=\\\"formStep2[\\'phone\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'phone\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'time\\' + ($index+1)].$dirty && formStep2[\\'time\\' + ($index+1)].$invalid}\\\"><label for=formStep2-time{{$index+1}}>Orario preferito</label><input id=formStep2-time{{$index+1}} ng-model=team.time name=time{{$index+1}} type=text class=form-control timepicker placeholder=\\\"Inserisci l\\'orario preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'time\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'time\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'place\\' + ($index+1)].$dirty && formStep2[\\'place\\' + ($index+1)].$invalid}\\\"><label for=formStep2-place{{$index+1}}>Luogo preferito</label><input id=formStep2-place{{$index+1}} ng-model=team.place name=place{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\" required> <span ng-show=\\\"formStep2[\\'place\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'place\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div ng-if=\\\"vm.step2.roundType == 0\\\" class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'round\\' + ($index+1)].$dirty && formStep2[\\'round\\' + ($index+1)].$invalid}\\\"><label for=formStep2-round{{$index+1}}>Girone</label><select id=formStep2-round{{$index+1}} ng-init=\\\"team.round = \\'A\\'\\\" ng-model=team.round name=round{{$index+1}} class=form-control ng-options=\\\"roundName as roundName for roundName in vm.roundNames track by roundName\\\" required></select><span ng-show=\\\"formStep2[\\'round\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'round\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></div><div class=clearfix></div><div class=col-md-6><a role=button ng-click=vm.addTeam() class=\\\"btn btn-default btn-block\\\" ng-show=vm.step2.roundType>Aggiungi Squadra</a></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=3 wizard=vm.wizard title=Riepilogo><form id=formStep3 name=formStep3 ng-submit=vm.submitWizard()><div class=row><div class=col-md-6><div class=form-group><label>Nome</label><p class=form-control-static>{{ vm.step1.name }}</p></div><div class=form-group><label>Descrizione</label><p class=form-control-static>{{ vm.step1.desc }}</p></div><div class=form-group><label>Indirizzo</label><p class=form-control-static>{{ vm.step1.address }}</p></div><div class=form-group><label>Tipologia</label><p class=form-control-static>{{ vm.step1.type == \\'1\\' ? \\'Torneo a gironi\\' : \\'Campionato Italiana\\' }}</p></div><div class=form-group><label>Numero di squadre</label><p class=form-control-static>{{ vm.step2.teams.length }}</p></div></div><div class=col-md-6><div class=form-group><label>Organizzatore</label><p class=form-control-static>{{ vm.step1.organizer }}</p></div><div class=form-group><label>Telefono organizzatore</label><p class=form-control-static>{{ vm.step1.telephone }}</p></div><div class=form-group><label>E-mail organizzatore</label><p class=form-control-static>{{ vm.step1.email }}</p></div><div class=form-group><label>Perioto</label><p class=form-control-static>{{ vm.step1.dates }}</p></div><div class=form-group><label>Formula</label><p class=form-control-static>{{ vm.step1.formula == \\'1\\' ? \\'Solo andata\\' : \\'Andata e Ritorno\\' }}</p></div></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Conferma></div></form></wizard-step-box></section></section>\");\n$templateCache.put(\"app/pages/dashboard/dashboard.html\",\"<div class=dashboard>Dashboard page</div>\");\n$templateCache.put(\"app/pages/disciplinary/disciplinary.html\",\"<div class=disciplinary>disciplinary page</div>\");\n$templateCache.put(\"app/pages/events/events.html\",\"<div class=\\\"content events\\\"><div class=row><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.events.length === 0\\\"><div class=box-header><div class=box-title>Eventi</div></div><div class=box-body>Non sono stati trovati eventi. <a ui-sref=main.admin.createEvent>Creane uno ora</a>.</div></div><div class=\\\"box {{ tableFilter.boxClass }}\\\" ng-repeat=\\\"tableFilter in vm.tableFilters\\\" ng-show=\\\"(vm.models.events | filter:tableFilter.eventFilter).length > 0\\\"><div class=box-header><h3 class=box-title>{{ tableFilter.title }}</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.searchFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat-start=\\\"event in vm.models.events | filter:tableFilter.eventFilter | filter:tableFilter.searchFilter\\\" event-show=event></tr><tr ng-repeat-end event-edit=event></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/login/login.html\",\"<div class=\\\"login login-box\\\"><div class=login-logo><b>Frispo</b></div><!-- /.login-logo --><div class=login-box-body><p class=login-box-msg>Sign in to start your session</p><form id=loginForm name=loginForm ng-submit=vm.login()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.email.$dirty && loginForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=loginForm.email.$dirty ng-messages=loginForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.password.$dirty && loginForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=loginForm.password.$dirty ng-messages=loginForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=row><!-- /.col --><div class=\\\"col-xs-offset-8 col-xs-4\\\"><button ng-disabled=loginForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a ng-click=vm.loginFacebook() class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign in using Facebook</a></div><!-- /.social-auth-links --> <a href=#>I forgot my password</a><br><a ui-sref=main.register class=text-center>Register a new membership</a></div><!-- /.login-box-body --></div>\");\n$templateCache.put(\"app/pages/main/main.html\",\"<div class=animate ui-view></div>\");\n$templateCache.put(\"app/pages/news/news.html\",\"<div class=news>news page</div>\");\n$templateCache.put(\"app/pages/register/register.html\",\"<div class=register-box><div class=register-logo><b>Frispo</b></div><div class=register-box-body><p class=login-box-msg>Register a new membership</p><form id=registerForm name=registerForm ng-submit=vm.register()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.email.$dirty && registerForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=registerForm.email.$dirty ng-messages=registerForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.password.$dirty && registerForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required minlength=8> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=registerForm.password.$dirty ng-messages=registerForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=minlength>La password deve essere lunga almeno 8 caratteri</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.retypePassword.$dirty && registerForm.retypePassword.$invalid}\\\"><input ng-model=vm.user.retypePassword name=retypePassword type=password class=form-control placeholder=\\\"Retype password\\\" required compare-to=vm.user.password> <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span> <span ng-show=registerForm.retypePassword.$dirty ng-messages=registerForm.retypePassword.$error class=help-block role=alert><span ng-message=compareTo>Le due password non coincidono</span></span></div><div class=row><div class=col-xs-8><div class=\\\"checkbox icheck\\\"><label><div class=icheckbox_square-blue aria-checked=false aria-disabled=false style=\\\"position: relative\\\"><input type=checkbox style=\\\"position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; border: 0px; opacity: 0; background: rgb(255, 255, 255)\\\"><ins class=iCheck-helper style=\\\"position: absolute; top: -20%; left: -20%; display: block; width: 140%; height: 140%; margin: 0px; padding: 0px; border: 0px; opacity: 0; background: rgb(255, 255, 255)\\\"></ins></div>I agree to the <a href=#>terms</a></label></div></div><!-- /.col --><div class=col-xs-4><button ng-disabled=registerForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Register</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a href=# class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign up using Facebook</a></div><a ui-sref=main.login class=text-center>I already have a membership</a></div><!-- /.form-box --></div><!-- /.register-box -->\");\n$templateCache.put(\"app/pages/scoreboard/scoreboard.html\",\"<div class=scoreboard>scoreboard page</div>\");\n$templateCache.put(\"app/pages/teams/teams.html\",\"<div class=teams><section class=content-header><h1>Squadre <small>partecipanti</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewTeam()>Crea nuova squadra</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.teams><table class=table><tr><th>Nome</th><th>Capitano</th><th>Telefono</th><th>Orario Preferito</th><th>Luogo Preferito</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th></th></tr><tr ng-repeat-start=\\\"team in vm.models.currentEvent.teams\\\" team-show=team></tr><tr ng-repeat-end team-edit=team></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/components/wizard/wizardProgress/wizardProgress.html\",\"<div class=wizard-progress><i ng-repeat=\\\"i in wizardProgress.range(wizardProgress.wizard.totalSteps) track by $index\\\" class=fa ng-class=\\\"{\\n      \\'fa-circle\\': $index+1 === wizardProgress.wizard.currentStep,\\n      \\'fa-circle-thin\\': $index+1 !== wizardProgress.wizard.currentStep\\n    }\\\">&nbsp;</i></div>\");\n$templateCache.put(\"app/components/wizard/wizardStepBox/wizardStepBox.html\",\"<div class=\\\"wizard-step-box box\\\" ng-class=\\\"{\\'box-success\\': wizardStepBox.active, \\'box-default\\': !wizardStepBox.active}\\\"><div class=\\\"box-header with-border\\\"><h3 class=box-title>{{ wizardStepBox.title }}</h3><div class=\\\"box-tools pull-right hidden\\\"><button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><!-- /.box-header --><div class=box-body><ng-transclude></ng-transclude></div><!-- /.box-body --><div ng-show=\\\"wizardStepBox.active && wizardStepBox.wizard.loading\\\" class=overlay><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><!-- /.box -->\");\n$templateCache.put(\"app/pages/calendar/create/create.html\",\"<form id=matchCreateForm class=\\\"match-create-form relative\\\" name=matchCreateForm ng-submit=matchCreate.ok()><div class=modal-header><a role=button class=close ng-click=matchCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova partita</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamA.$dirty && matchCreateForm.teamA.$invalid}\\\"><label for=matchCreateForm-teamA>Squadra Casa</label><select id=matchCreateForm-teamA ng-model=matchCreate.form.teamA name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamA.$dirty ng-messages=matchCreateForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamB.$dirty && matchCreateForm.teamB.$invalid}\\\"><label for=matchCreateForm-teamB>Squadra Ospite</label><select id=matchCreateForm-teamB ng-model=matchCreate.form.teamB name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamB.$dirty ng-messages=matchCreateForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreA.$dirty && matchCreateForm.scoreA.$invalid}\\\"><label for=matchCreateForm-scoreA>Goal Casa</label><select id=matchCreateForm-scoreA ng-model=matchCreate.form.scoreA name=scoreA class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreA.$dirty ng-messages=matchCreateForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreB.$dirty && matchCreateForm.scoreB.$invalid}\\\"><label for=matchCreateForm-scoreB>Goal Ospiti</label><select id=matchCreateForm-scoreB ng-model=matchCreate.form.scoreB name=scoreB class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreB.$dirty ng-messages=matchCreateForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.date.$dirty && matchCreateForm.date.$invalid}\\\"><label for=matchCreateForm-date>Data Partita</label><input id=matchCreateForm-date ng-model=matchCreate.form.date model=matchCreate.form.date name=date type=text class=form-control datepicker></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.time.$dirty && matchCreateForm.time.$invalid}\\\"><label for=matchCreateForm-time>Ora</label><input id=matchCreateForm-time ng-model=matchCreate.form.time name=time type=text class=form-control timepicker></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.address.$dirty && matchCreateForm.address.$invalid}\\\"><label for=matchCreateForm-address>Indirizzo</label><input id=matchCreateForm-address ng-model=matchCreate.form.address name=address type=text class=form-control></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.played.$dirty && matchCreateForm.played.$invalid}\\\"><label for=matchCreateForm-played>Giocata</label><select id=matchCreateForm-played ng-model=matchCreate.form.played name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchCreateForm.played.$dirty ng-messages=matchCreateForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=matchCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/create_day/create.html\",\"<form id=dayCreateForm class=\\\"match-create-form relative\\\" name=dayCreateForm ng-submit=dayCreate.ok()><div class=modal-header><a role=button class=close ng-click=dayCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova giornata</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.name.$dirty && dayCreateForm.name.$invalid}\\\"><label for=dayCreateForm-name>Nome giornata</label><input id=dayCreateForm-name ng-model=dayCreate.form.name name=name type=text class=form-control required> <span ng-show=dayCreateForm.name.$dirty ng-messages=dayCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.desc.$dirty && dayCreateForm.desc.$invalid}\\\"><label for=dayCreateForm-desc>Descrizione</label><input id=dayCreateForm-desc ng-model=dayCreate.form.desc name=desc type=text class=form-control> <span ng-show=dayCreateForm.desc.$dirty ng-messages=dayCreateForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=dayCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=dayCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=matchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=matchDestroy.ok()>Elimina partita</a></div>\");\n$templateCache.put(\"app/pages/calendar/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=match-edit-form-{{matchEdit.match.matcId}} class=\\\"accordion-body collapse match-edit-form-{{matchEdit.match.matcId}}\\\"><form class=\\\"match-edit-form relative\\\" name=matchEditForm ng-submit=matchEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamA.$dirty && matchEditForm.teamA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamA>Modifica Squadra Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamA ng-model=matchEdit.form.teamA ng-init=\\\"matchEdit.form.teamA = { teamId: matchEdit.match.matcTeamIdA }\\\" name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamA.$dirty ng-messages=matchEditForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamB.$dirty && matchEditForm.teamB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamB>Modifica Squadra Ospite</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamB ng-model=matchEdit.form.teamB ng-init=\\\"matchEdit.form.teamB = { teamId: matchEdit.match.matcTeamIdB }\\\" name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamB.$dirty ng-messages=matchEditForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreA.$dirty && matchEditForm.scoreA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreA>Modifica Goal Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreA ng-model=matchEdit.form.scoreA ng-init=\\\"matchEdit.form.scoreA = matchEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreA.$dirty ng-messages=matchEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreB.$dirty && matchEditForm.scoreB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreB>Modifica Goal Ospiti</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreB ng-model=matchEdit.form.scoreB ng-init=\\\"matchEdit.form.scoreB = matchEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreB.$dirty ng-messages=matchEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.date.$dirty && matchEditForm.date.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-date>Modifica Data Partita</label><input id=matchEditForm{{matchEdit.match.matcId}}-date ng-model=matchEdit.form.date model=matchEdit.form.date ng-init=\\\"matchEdit.form.date = matchEdit.match.matcDateMatch\\\" name=date type=text class=form-control datepicker></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.time.$dirty && matchEditForm.time.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-time>Modifica Ora</label><input id=matchEditForm{{matchEdit.match.matcId}}-time ng-model=matchEdit.form.time ng-init=\\\"matchEdit.form.time = matchEdit.match.matcTime\\\" name=time type=text class=form-control timepicker></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.address.$dirty && matchEditForm.address.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-address>Modifica Indirizzo</label><input id=matchEditForm{{matchEdit.match.matcId}}-address ng-model=matchEdit.form.address ng-init=\\\"matchEdit.form.address = matchEdit.match.matcAddress\\\" name=address type=text class=form-control></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.played.$dirty && matchEditForm.played.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-played>Modifica Giocata</label><select id=matchEditForm{{matchEdit.match.matcId}}-played ng-model=matchEdit.form.played ng-init=\\\"matchEdit.form.played = {value: matchEdit.match.matcFlgPlay}\\\" name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchEditForm.played.$dirty ng-messages=matchEditForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=matchEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=matchEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/calendar/show/show.html\",\"<tr><td>{{ matchShow.match.matcTeamA }}</td><td>{{ matchShow.match.matcTeamB }}</td><td>{{ matchShow.match.matcScoreTeamA }}</td><td>{{ matchShow.match.matcScoreTeamB }}</td><td>{{ matchShow.match.matcDateMatch }}</td><td>{{ matchShow.match.matcTime }}</td><td>{{ matchShow.match.matcAddress }}</td><td ng-if=\\\"matchShow.models.currentEvent.evenType == 1\\\">{{ matchShow.match.matcNameGroups }}</td><td>{{ matchShow.match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': matchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.match-edit-form-{{matchShow.match.matcId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=matchShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/events/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=eventDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Se elimini questo evento, verranno eliminati anche tutti dati relativi alle squadre e alle partite associate.<br>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventDestroy.ok()>Elimina evento</a></div>\");\n$templateCache.put(\"app/pages/events/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=event-edit-form-{{eventEdit.event.evenId}} class=\\\"accordion-body collapse event-edit-form-{{eventEdit.event.evenId}}\\\"><form class=\\\"event-edit-form relative\\\" name=eventEditForm ng-submit=eventEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.name.$dirty && eventEditForm.name.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-name>Modifica Nome</label><input id=eventEditForm{{eventEdit.event.evenId}}-name ng-model=eventEdit.form.name ng-init=\\\"eventEdit.form.name = eventEdit.event.evenName\\\" name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=eventEditForm.name.$dirty ng-messages=eventEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.desc.$dirty && eventEditForm.desc.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-desc>Modifica Descrizione</label><input id=eventEditForm{{eventEdit.event.evenId}}-desc ng-model=eventEdit.form.desc ng-init=\\\"eventEdit.form.desc = eventEdit.event.evenDescription\\\" name=desc type=text class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\" required> <span ng-show=eventEditForm.desc.$dirty ng-messages=eventEditForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.currentDay.$dirty && eventEditForm.currentDay.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-currentDay>Modifica Giornata Corrente</label><select id=eventEditForm{{eventEdit.event.evenId}}-currentDay ng-model=eventEdit.form.currentDay ng-init=\\\"eventEdit.form.currentDay = eventEdit.event.evenCurrentDay\\\" name=currentDay class=form-control ng-options=\\\"day as day.matcDayName for day in eventEdit.event.matchDays track by day.matcDayId\\\" required></select><span ng-show=eventEditForm.currentDay.$dirty ng-messages=eventEditForm.currentDay.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.dates.$dirty && eventEditForm.dates.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-dates>Modifica Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=eventEditForm{{eventEdit.event.evenId}}-dates ng-model=eventEdit.form.dates model=eventEdit.form.dates ng-init=\\\"eventEdit.form.dates = eventEdit.event.dates\\\" name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><span ng-show=eventEditForm.dates.$dirty ng-messages=eventEditForm.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.address.$dirty && eventEditForm.address.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-address>Modifica Indirizzo</label><input id=eventEditForm{{eventEdit.event.evenId}}-address ng-model=eventEdit.form.address ng-init=\\\"eventEdit.form.address = eventEdit.event.evenAddress\\\" name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo dell\\'evento\\\" required> <span ng-show=eventEditForm.address.$dirty ng-messages=eventEditForm.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.region.$dirty && eventEditForm.region.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-region>Modifica Regione</label><select id=eventEditForm{{eventEdit.event.evenId}}-region ng-model=eventEdit.form.region ng-init=\\\"eventEdit.form.region = eventEdit.event.regions\\\" name=region class=form-control ng-options=\\\"region as region.regiName for region in eventEdit.models.regions track by region.regiId\\\" required></select><span ng-show=eventEditForm.region.$dirty ng-messages=eventEditForm.region.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.telephone.$dirty && eventEditForm.telephone.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-telephone>Modifica Telefono Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-telephone ng-model=eventEdit.form.telephone ng-init=\\\"eventEdit.form.telephone = eventEdit.event.evenMobilePhone\\\" name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.telephone.$dirty ng-messages=eventEditForm.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.email.$dirty && eventEditForm.email.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-email>Modifica E-mail Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-email ng-model=eventEdit.form.email ng-init=\\\"eventEdit.form.email = eventEdit.event.evenEmail\\\" name=email type=text class=form-control placeholder=\\\"Inserisci l\\'e-mail dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.email.$dirty ng-messages=eventEditForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-left><a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.recreateCalendar()>Ricrea calendario</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.publish() ng-show=\\\"eventEdit.event.evenStatoEvento != 1\\\">Pubblica evento</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.unpublish() ng-show=\\\"eventEdit.event.evenStatoEvento == 1\\\">Imposta come offline</a></div><div class=pull-right><div><a role=button class=\\\"btn btn-default\\\" ng-click=eventEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div></div><div ng-show=eventEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/events/edit/recreateCalendar.html\",\"<div class=modal-header><a role=button class=close ng-click=eventRecreateCalendar.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Tutte le partite e le giornate saranno ricreate. Quelle presenti ora verranno eliminate.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventRecreateCalendar.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventRecreateCalendar.ok()>Ricrea calendario dell\\'evento</a></div>\");\n$templateCache.put(\"app/pages/events/show/show.html\",\"<tr><td>{{ eventShow.event.evenName }}</td><td>{{ eventShow.event.evenTypePretty }}</td><td>{{ eventShow.event.evenFormulaPretty }}</td><td>{{ eventShow.event.regions.regiName }}</td><td>{{ eventShow.event.evenDayActive }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': eventShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.event-edit-form-{{eventShow.event.evenId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=eventShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/create/create.html\",\"<form id=teamCreateForm class=\\\"team-create-form relative\\\" name=teamCreateForm ng-submit=teamCreate.ok()><div class=modal-header><a role=button class=close ng-click=teamCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova squadra</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.name.$dirty && teamCreateForm.name.$invalid}\\\"><label for=teamCreateForm-name>Nome</label><input id=teamCreateForm-name ng-model=teamCreate.form.name name=name type=text class=form-control required> <span ng-show=teamCreateForm.name.$dirty ng-messages=teamCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.captain.$dirty && teamCreateForm.captain.$invalid}\\\"><label for=teamCreateForm-captain>Capitano</label><input id=teamCreateForm-captain ng-model=teamCreate.form.captain name=captain type=text class=form-control required> <span ng-show=teamCreateForm.captain.$dirty ng-messages=teamCreateForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.phone.$dirty && teamCreateForm.phone.$invalid}\\\"><label for=teamCreateForm-phone>Telefono</label><input id=teamCreateForm-phone ng-model=teamCreate.form.phone name=phone type=text class=form-control required> <span ng-show=teamCreateForm.phone.$dirty ng-messages=teamCreateForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.time.$dirty && teamCreateForm.time.$invalid}\\\"><label for=teamCreateForm-time>Orario Preferito</label><input id=teamCreateForm-time ng-model=teamCreate.form.time name=time type=text class=form-control timepicker required> <span ng-show=teamCreateForm.time.$dirty ng-messages=teamCreateForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.place.$dirty && teamCreateForm.place.$invalid}\\\"><label for=teamCreateForm-place>Luogo Preferito</label><input id=teamCreateForm-place ng-model=teamCreate.form.place name=place type=text class=form-control required> <span ng-show=teamCreateForm.place.$dirty ng-messages=teamCreateForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-show=\\\"teamCreate.models.currentEvent.evenType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.round.$dirty && teamCreateForm.round.$invalid}\\\"><label for=teamCreateForm-round>Girone</label><select id=teamCreateForm-round ng-init=\\\"teamCreate.form.round = \\'A\\'\\\" ng-model=teamCreate.form.round name=round class=form-control ng-options=\\\"roundName as roundName for roundName in teamCreate.roundNames track by roundName\\\" required></select><span ng-show=teamCreateForm.round.$dirty ng-messages=teamCreateForm.round.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=teamCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/teams/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=team-edit-form-{{teamEdit.team.teamId}} class=\\\"accordion-body collapse team-edit-form-{{teamEdit.team.teamId}}\\\"><form class=\\\"team-edit-form relative\\\" name=teamEditForm ng-submit=teamEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.name.$dirty && teamEditForm.name.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-name>Modifica Nome</label><input id=teamEditForm{{teamEdit.team.teamId}}-name ng-model=teamEdit.form.name ng-init=\\\"teamEdit.form.name = teamEdit.team.teamName\\\" name=name type=text class=form-control required> <span ng-show=teamEditForm.name.$dirty ng-messages=teamEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.captain.$dirty && teamEditForm.captain.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-captain>Modifica Capitano</label><input id=teamEditForm{{teamEdit.team.teamId}}-captain ng-model=teamEdit.form.captain ng-init=\\\"teamEdit.form.captain = teamEdit.team.teamCaptain\\\" name=captain type=text class=form-control required> <span ng-show=teamEditForm.captain.$dirty ng-messages=teamEditForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.phone.$dirty && teamEditForm.phone.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-phone>Modifica Telefono</label><input id=teamEditForm{{teamEdit.team.teamId}}-phone ng-model=teamEdit.form.phone ng-init=\\\"teamEdit.form.phone = teamEdit.team.teamMobilePhone\\\" name=phone type=text class=form-control required> <span ng-show=teamEditForm.phone.$dirty ng-messages=teamEditForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.time.$dirty && teamEditForm.time.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-time>Modifica Orario Preferito</label><input id=teamEditForm{{teamEdit.team.teamId}}-time ng-model=teamEdit.form.time ng-init=\\\"teamEdit.form.time = teamEdit.team.teamTime\\\" name=time type=text class=form-control timepicker required> <span ng-show=teamEditForm.time.$dirty ng-messages=teamEditForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.place.$dirty && teamEditForm.place.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-place>Modifica Luogo Preferito</label><input id=teamEditForm{{teamEdit.team.teamId}}-place ng-model=teamEdit.form.place ng-init=\\\"teamEdit.form.place = teamEdit.team.teamPlace\\\" name=place type=text class=form-control required> <span ng-show=teamEditForm.place.$dirty ng-messages=teamEditForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=teamEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=teamEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=teamDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=teamDestroy.ok()>Elimina squadra</a></div>\");\n$templateCache.put(\"app/pages/teams/show/show.html\",\"<tr><td>{{ teamShow.team.teamName }}</td><td>{{ teamShow.team.teamCaptain }}</td><td>{{ teamShow.team.teamMobilePhone }}</td><td>{{ teamShow.team.teamTime }}</td><td>{{ teamShow.team.teamPlace }}</td><td ng-if=\\\"teamShow.models.currentEvent.evenType == 1\\\">{{ teamShow.team.teamGroups }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': teamShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.team-edit-form-{{teamShow.team.teamId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=teamShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");}]);"],"sourceRoot":"/source/"}